{"componentChunkName":"component---src-templates-post-jsx","path":"/5.3.1-프로그램-동작-구현/","result":{"data":{"site":{"siteMetadata":{"title":"leekh8's Blog"}},"markdownRemark":{"id":"cc96bdf9-8b3c-5cba-92d3-9ad6415c03bc","excerpt":"🌟 MDGGU의 동작 원리 및 구현 방식 🧩 MDGGU 구성 요소 프론트엔드: 사용자와 직접 상호작용하는 부분\n백엔드: 데이터 처리 및 비즈니스 로직을 담당하는 부분\n데이터베이스: 데이터를 저장하고 관리하는 부분 🌐 프론트엔드 주요 기술 React.js: 사용자 인터페이스(UI)를 구성하는 라이브러리 Axios: HTTP 클라이언트 라이브러리로, 백엔드와…","html":"<h2>🌟 MDGGU의 동작 원리 및 구현 방식</h2>\n<h3>🧩 MDGGU 구성 요소</h3>\n<p>프론트엔드: 사용자와 직접 상호작용하는 부분\n백엔드: 데이터 처리 및 비즈니스 로직을 담당하는 부분\n데이터베이스: 데이터를 저장하고 관리하는 부분</p>\n<h4>🌐 프론트엔드</h4>\n<ul>\n<li><strong>주요 기술</strong>\n<ul>\n<li>React.js: 사용자 인터페이스(UI)를 구성하는 라이브러리</li>\n<li>Axios: HTTP 클라이언트 라이브러리로, 백엔드와 통신할 때 사용</li>\n</ul>\n</li>\n<li><strong>동작 원리</strong>\n<ul>\n<li>사용자 요청: 사용자가 브라우저에서 버튼을 클릭하거나 입력 폼을 제출하면 프론트엔드에서 이벤트가 발생</li>\n<li>API 호출: 이벤트 핸들러가 Axios를 사용해 백엔드 API로 HTTP 요청을 보냄</li>\n<li>응답 처리: 백엔드로부터 받은 응답 데이터를 화면에 렌더링하여 사용자에게 표시</li>\n</ul>\n</li>\n</ul>\n<h4>🔙 백엔드</h4>\n<ul>\n<li><strong>주요 기술</strong>\n<ul>\n<li>Spring Boot: Java 기반의 백엔드 프레임워크</li>\n<li>Spring Security: 인증 및 인가를 위한 보안 프레임워크</li>\n<li>JPA (Java Persistence API): 데이터베이스와 상호작용하기 위한 표준 API</li>\n</ul>\n</li>\n<li><strong>동작 원리</strong>\n<ul>\n<li>클라이언트 요청 처리: 프론트엔드에서 보낸 요청을 컨트롤러가 받음</li>\n<li>비즈니스 로직 실행: 서비스 계층에서 비즈니스 로직을 처리</li>\n<li>데이터베이스 연동: 리포지토리 계층을 통해 데이터베이스와 상호작용</li>\n<li>응답 반환: 처리된 결과를 JSON 형태로 프론트엔드에 반환</li>\n</ul>\n</li>\n</ul>\n<h4>🗄️ 데이터베이스</h4>\n<p><strong>주요 기술</strong></p>\n<ul>\n<li>PostgreSQL: 객체 관계형 데이터베이스 시스템</li>\n<li>MongoDB: 유연한 문서 저장을 위한 NoSQL 데이터베이스, 동적인 콘텐츠 관리에 적합\n<strong>동작 원리</strong></li>\n<li>데이터 저장: 엔티티 객체를 데이터베이스 테이블에 매핑하여 저장</li>\n<li>데이터 조회: 쿼리를 통해 필요한 데이터를 조회하고 객체로 변환하여 반환</li>\n<li>데이터 업데이트: 변경된 엔티티 객체를 데이터베이스에 반영</li>\n<li>데이터 삭제: 특정 엔티티 객체를 데이터베이스에서 삭제</li>\n</ul>\n<h3>🌟 프로그램의 전체 동작 흐름</h3>\n<h4>동작 구현 방식 (Mermaid 다이어그램)</h4>\n<div class=\"gatsby-highlight\" data-language=\"mermaid\"><pre class=\"language-mermaid\"><code class=\"language-mermaid\"><span class=\"token keyword\">graph</span> TD\n    A<span class=\"token text string\">[사용자 🧑‍💻]</span> <span class=\"token arrow operator\">--></span><span class=\"token label property\">|요청 📩|</span> B<span class=\"token text string\">[프론트엔드 🌐]</span>\n    B <span class=\"token arrow operator\">--></span><span class=\"token label property\">|API 요청 🔄|</span> C<span class=\"token text string\">[백엔드 🛠️]</span>\n    C <span class=\"token arrow operator\">--></span><span class=\"token label property\">|데이터 요청 🗄️|</span> D<span class=\"token text string\">[PostgreSQL 데이터베이스 🐘]</span>\n    C <span class=\"token arrow operator\">--></span><span class=\"token label property\">|데이터 요청 🗂️|</span> E<span class=\"token text string\">[MongoDB 데이터베이스 🍃]</span>\n    D <span class=\"token arrow operator\">--></span><span class=\"token label property\">|데이터 응답 📤|</span> C\n    E <span class=\"token arrow operator\">--></span><span class=\"token label property\">|데이터 응답 📤|</span> C\n    C <span class=\"token arrow operator\">--></span><span class=\"token label property\">|API 응답 📬|</span> B\n    B <span class=\"token arrow operator\">--></span><span class=\"token label property\">|응답 📡|</span> A\n    <span class=\"token keyword\">style</span> A <span class=\"token style\"><span class=\"token property\">fill</span><span class=\"token operator\">:</span>#f99f<span class=\"token punctuation\">,</span><span class=\"token property\">stroke</span><span class=\"token operator\">:</span>#ffffff</span>\n    <span class=\"token keyword\">style</span> B <span class=\"token style\"><span class=\"token property\">fill</span><span class=\"token operator\">:</span>#bbff<span class=\"token punctuation\">,</span><span class=\"token property\">stroke</span><span class=\"token operator\">:</span>#ffffff</span>\n    <span class=\"token keyword\">style</span> C <span class=\"token style\"><span class=\"token property\">fill</span><span class=\"token operator\">:</span>#f966<span class=\"token punctuation\">,</span><span class=\"token property\">stroke</span><span class=\"token operator\">:</span>#ffffff</span>\n    <span class=\"token keyword\">style</span> D <span class=\"token style\"><span class=\"token property\">fill</span><span class=\"token operator\">:</span>#966f<span class=\"token punctuation\">,</span><span class=\"token property\">stroke</span><span class=\"token operator\">:</span>#ffffff</span>\n    <span class=\"token keyword\">style</span> E <span class=\"token style\"><span class=\"token property\">fill</span><span class=\"token operator\">:</span>#9f66<span class=\"token punctuation\">,</span><span class=\"token property\">stroke</span><span class=\"token operator\">:</span>#ffffff</span></code></pre></div>\n<ul>\n<li>🌐 다이어그램 요소 설명</li>\n</ul>\n<ol>\n<li>\n<p>사용자 (A)</p>\n<ul>\n<li>역할: 웹 애플리케이션을 사용하는 최종 사용자</li>\n<li>행동: 버튼 클릭, 폼 제출 등 다양한 인터랙션을 통해 애플리케이션과 상호작용</li>\n</ul>\n</li>\n<li>\n<p>프론트엔드 (B)</p>\n<ul>\n<li>역할: 사용자가 보는 웹 페이지 또는 사용자 인터페이스(UI)</li>\n<li>기술: React.js, Axios 등</li>\n<li>행동: 사용자의 요청을 받아 API 요청을 백엔드로 전송</li>\n</ul>\n</li>\n<li>\n<p>백엔드 (C)</p>\n<ul>\n<li>역할: 비즈니스 로직을 처리하고 데이터베이스와 상호작용하는 서버 측 애플리케이션</li>\n<li>기술: Spring Boot, Spring Security 등</li>\n<li>행동: 프론트엔드로부터 API 요청을 받아 처리하고, 데이터베이스에 필요한 요청을 보낸 후 결과를 프론트엔드에 반환</li>\n</ul>\n</li>\n<li>\n<p>PostgreSQL 데이터베이스 (D)</p>\n</li>\n</ol>\n<ul>\n<li>역할: 관계형 데이터를 저장하고 관리하는 데이터베이스 시스템</li>\n<li>기술: PostgreSQL</li>\n<li>행동: 백엔드에서 오는 데이터 요청을 처리하고, 필요한 데이터를 반환</li>\n</ul>\n<ol start=\"5\">\n<li>MongoDB 데이터베이스 (E)</li>\n</ol>\n<ul>\n<li>역할: 유연한 문서 저장을 위한 NoSQL 데이터베이스로, 동적인 콘텐츠 관리에 적합</li>\n<li>기술: MongoDB</li>\n<li>행동: 백엔드에서 오는 데이터 요청을 처리하고, 필요한 데이터를 반환</li>\n</ul>\n<h4>📝 동작 순서</h4>\n<ol>\n<li>사용자 요청: 사용자가 웹 애플리케이션에서 특정 동작을 수행하면 프론트엔드에서 이벤트가 발생</li>\n<li>API 요청: 프론트엔드가 백엔드로 API 요청을 보냄</li>\n<li>요청 처리 (백엔드): 백엔드는 요청을 받아 비즈니스 로직을 처리한 후, 필요 시 데이터베이스에 요청을 보냄</li>\n<li>데이터베이스 요청:\n<ul>\n<li>PostgreSQL: 관계형 데이터베이스에 대한 쿼리를 수행</li>\n<li>MongoDB: 문서 기반 데이터베이스에 대한 쿼리를 수행</li>\n</ul>\n</li>\n<li>데이터베이스 응답: 데이터베이스는 요청된 데이터를 백엔드로 반환</li>\n<li>API 응답: 백엔드는 처리된 결과를 프론트엔드에 반환</li>\n<li>UI 업데이트: 프론트엔드는 받은 데이터를 바탕으로 사용자 인터페이스를 업데이트</li>\n</ol>","frontmatter":{"title":"🌟 MDGGU의 동작 원리 및 구현 방식","date":"June 24, 2024","update":"June 24, 2024","tags":["Markdown","MDGGU"],"series":"MDGGU"},"fields":{"slug":"/5.3.1-프로그램-동작-구현/","timeToRead":3}},"seriesList":{"edges":[{"node":{"id":"cc96bdf9-8b3c-5cba-92d3-9ad6415c03bc","fields":{"slug":"/5.3.1-프로그램-동작-구현/"},"frontmatter":{"title":"🌟 MDGGU의 동작 원리 및 구현 방식"}}}]},"previous":{"fields":{"slug":"/Expose-Blog/"},"frontmatter":{"title":"🚀 Gatsby 블로그 검색 엔진 배포"}},"next":null},"pageContext":{"id":"cc96bdf9-8b3c-5cba-92d3-9ad6415c03bc","series":"MDGGU","previousPostId":"932eb0ea-7c81-51ed-8417-6612457d561c","nextPostId":null}},"staticQueryHashes":[],"slicesMap":{}}