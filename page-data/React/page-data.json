{"componentChunkName":"component---src-templates-post-jsx","path":"/React/","result":{"data":{"site":{"siteMetadata":{"title":"leekh8"}},"markdownRemark":{"id":"15a1050d-1263-5054-8d26-8bb1526cca9d","excerpt":"React 기초 정리 📘 React는 웹 프론트엔드 개발에 혁신을 가져온 JavaScript 라이브러리.\n사용자 인터페이스를 구축하기 위해 개발되었으며, 컴포넌트 기반의 개발을 가능하게 한다. React의 기본 개념과 왜 React를 배워야 하는지, React의 특징, JSX의 활용, SPA의 개념, JSX와 일반 JavaScript의 차이점, Compo…","html":"<h1>React 기초 정리 📘</h1>\n<p>React는 웹 프론트엔드 개발에 혁신을 가져온 JavaScript 라이브러리.\n사용자 인터페이스를 구축하기 위해 개발되었으며, 컴포넌트 기반의 개발을 가능하게 한다.</p>\n<p>React의 기본 개념과 왜 React를 배워야 하는지, React의 특징, JSX의 활용, SPA의 개념, JSX와 일반 JavaScript의 차이점, Component의 개념과 활용, Component의 데이터 관리 방법등에 대해 알아보자.</p>\n<h2><a href=\"https://react.dev/\">React</a>란? 🤔</h2>\n<ul>\n<li>정의: React는 사용자 인터페이스를 구축하기 위한 JavaScript 라이브러리. Facebook에서 개발하였고, 컴포넌트 기반의 개발을 지향한다.<sup id=\"fnref-1\"><a href=\"#fn-1\" class=\"footnote-ref\">1</a></sup></li>\n<li>\n<p>특징:</p>\n<ul>\n<li>Component: 독립적인 단위로 쪼개어 구현되며, 레고 블럭처럼 여러 컴포넌트들을 조립하여 한 페이지를 완성한다.</li>\n<li>Virtual DOM: 가상의 DOM을 메모리에 저장하고, 실제 DOM과 동기화하는 프로그래밍 개념. 이를 통해 성능을 향상시킨다.</li>\n<li>JSX: JavaScript 내에서 HTML과 유사한 문법을 사용하여 UI를 표현한다. 이로 인해 개발자는 보다 직관적으로 UI를 구성할 수 있다.</li>\n</ul>\n</li>\n</ul>\n<h3>SPA (Single Page Application)와 전통적인 사이트 비교 🔄</h3>\n<ul>\n<li>\n<p>전통적인 사이트: 페이지 변경이 필요할 때마다 서버에 요청하여 새로운 HTML을 받아오는 방식.\n이 과정에서 페이지 전체를 새로 불러온다.</p>\n<div class=\"gatsby-highlight\" data-language=\"mermaid\"><pre class=\"language-mermaid\"><code class=\"language-mermaid\"><span class=\"token keyword\">sequenceDiagram</span>\nClient<span class=\"token arrow operator\">->></span>+Server<span class=\"token operator\">:</span> 최초 접속 요청\nServer<span class=\"token arrow operator\">-->></span>+Client<span class=\"token operator\">:</span> HTML 전달\nClient<span class=\"token arrow operator\">->></span>+Server<span class=\"token operator\">:</span> 데이터 전달 <span class=\"token text string\">(Form Post)</span>\nServer<span class=\"token arrow operator\">-->></span>+Client<span class=\"token operator\">:</span> HTML 전달</code></pre></div>\n</li>\n<li>\n<p>SPA: 초기 로딩 시 서버로부터 HTML을 받아온 후, 이후의 페이지 변경은 AJAX 통신을 통해 필요한 데이터만 JSON 형태로 받아와서 클라이언트에서 렌더링한다.\n이 방식은 React를 포함한 현대적인 JavaScript 프레임워크/라이브러리에서 널리 사용된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"mermaid\"><pre class=\"language-mermaid\"><code class=\"language-mermaid\"><span class=\"token keyword\">sequenceDiagram</span>\nClient<span class=\"token arrow operator\">->></span>+Server<span class=\"token operator\">:</span> 최초 접속 요청\nServer<span class=\"token arrow operator\">-->></span>+Client<span class=\"token operator\">:</span> HTML 전달\nClient<span class=\"token arrow operator\">->></span>+Server<span class=\"token operator\">:</span> 데이터 전달 <span class=\"token text string\">(AJAX 통신)</span>\nServer<span class=\"token arrow operator\">-->></span>+Client<span class=\"token operator\">:</span> JSON 전달</code></pre></div>\n</li>\n</ul>\n<h2>React를 공부해야 하는 이유 🚀</h2>\n<ul>\n<li>생산성과 재사용성: 컴포넌트와 Hook을 활용하여 개발자의 생산성을 높이고, 코드의 재사용성을 증가시킨다.</li>\n<li>풍부한 자료와 라이브러리: React는 널리 사용되기 때문에 다양한 자료와 오픈소스 라이브러리를 쉽게 찾을 수 있다.</li>\n<li>다양한 사용처: React를 배우면 웹 애플리케이션 뿐만 아니라 React Native를 통해 모바일 애플리케이션 개발에도 활용할 수 있다.</li>\n</ul>\n<p>React를 배우는 것은 현대 웹 개발의 트렌드를 따라가는 데 있어 필수적인 요소가 되었다고 할 수 있다.\n시작하기 전에, 기본적인 JavaScript 지식을 갖추는 것이 좋다.\nReact의 세계로! 🌟</p>\n<h2>React의 핵심 특징 정리 🌟</h2>\n<p>React는 현대 웹 개발에서 중요한 역할을 하는 JavaScript 라이브러리. React의 주요 특징들을 좀 더 자세히 살펴보자.<sup id=\"fnref-2\"><a href=\"#fn-2\" class=\"footnote-ref\">2</a></sup></p>\n<h3>HTML과 JS 함께 사용하기 📝</h3>\n<ul>\n<li>\n<p>전통적인 방식 (jQuery 사용 예): HTML 요소를 JavaScript로 동적으로 추가하는 방식.\n코드가 복잡해지고 유지보수가 어려워질 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#todo-list\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>\n<span class=\"token string\">\"&lt;li>&lt;span>\"</span> <span class=\"token operator\">+</span>\n  value <span class=\"token operator\">+</span>\n  <span class=\"token string\">\"&lt;/span>&lt;button type='button' class='complete'>complete&lt;/button> &lt;button type='button' class='delete'>delete&lt;/button>&lt;/li>\"</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n<li>\n<p>React 방식 (JSX 사용 예): HTML과 JavaScript를 함께 사용하여 UI를 선언적으로 표현한다.\n코드가 더 간결하고 이해하기 쉽다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ol</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>todo-list<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n</span><span class=\"token punctuation\">{</span>todoList<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">className</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">.</span>isCompleted <span class=\"token operator\">?</span> <span class=\"token string\">\"completed\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">handleCompleteClick</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">complete</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">handleDeleteClick</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">delete</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ol</span><span class=\"token punctuation\">></span></span></code></pre></div>\n</li>\n</ul>\n<h3>Component 기반 개발 🛠️</h3>\n<ul>\n<li>\n<p>React는 컴포넌트 기반으로 개발된다.\n각 컴포넌트는 독립적인 단위로, 재사용이 가능하며, 복잡한 UI도 쉽게 구성할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">const</span> text <span class=\"token operator\">=</span> <span class=\"token string\">\"hello world\"</span>\n<span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>text<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<h3>State를 통한 데이터 관리 🔄</h3>\n<ul>\n<li>\n<p>React에서는 state를 사용하여 컴포넌트의 상태를 관리한다. state가 변경될 때마다 컴포넌트는 자동으로 다시 렌더링된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>todoList<span class=\"token punctuation\">,</span> setTodoList<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>inputValue<span class=\"token punctuation\">,</span> setInputValue<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>\n<p>React의 이러한 특징들은 개발자가 더 효율적으로 웹 애플리케이션을 구축할 수 있도록 돕는다.\nJSX, 컴포넌트, 그리고 상태 관리는 React 개발의 핵심을 이루며, 이를 통해 더 나은 사용자 경험을 제공하는 웹 애플리케이션을 만들 수 있다.\nReact를 배우고 싶다면, 이러한 개념들을 깊이 이해하는 것이 중요! 🚀</p>\n<h2>Create React App(CRA) 및 Node.js, NPM에 대한 정리 🚀</h2>\n<p>Create React App(CRA)은 React 프로젝트를 쉽게 시작할 수 있게 해주는 도구.<sup id=\"fnref-3\"><a href=\"#fn-3\" class=\"footnote-ref\">3</a></sup>\nFacebook에 의해 만들어졌으며, 프로젝트 생성부터 다양한 개발 도구를 제공한다.\nNode.js와 NPM은 CRA를 사용하여 React 프로젝트를 시작할 때 필수적인 환경이다.</p>\n<h3>Create React App(CRA) 🛠️</h3>\n<ul>\n<li>개요: React 프로젝트를 쉽게 생성할 수 있도록 도와주는 Boilerplate.\n직접 스크립트를 추가하여 사용하는 것도 가능하지만, CRA를 사용하면 더 편리하다.</li>\n<li>\n<p>장점:</p>\n<ul>\n<li>개발에 집중할 수 있도록 환경을 구성해준다.</li>\n<li>다양한 브라우저에서 작동할 수 있도록 transcompile을 지원한다. (예: babel, webpack)</li>\n</ul>\n</li>\n<li>\n<p>사용 방법:<sup id=\"fnref-4\"><a href=\"#fn-4\" class=\"footnote-ref\">4</a></sup></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">npx create-react-app <span class=\"token operator\">&lt;</span>directory name<span class=\"token operator\">></span>\n<span class=\"token builtin class-name\">cd</span> <span class=\"token operator\">&lt;</span>directory name<span class=\"token operator\">></span>\n<span class=\"token function\">npm</span> start</code></pre></div>\n</li>\n<li><a href=\"https://create-react-app.dev/\">공식 문서 및 자세한 정보</a></li>\n</ul>\n<h3>Node.js와 NPM 🌐</h3>\n<ul>\n<li>\n<p>Node.js:</p>\n<ul>\n<li>서버 프로그래밍에 주로 사용되는 JavaScript 기반의 소프트웨어 플랫폼.</li>\n<li>프론트엔드 개발자가 서버 개발에 쉽게 접근할 수 있도록 도와준다.</li>\n<li>CRA를 사용한 React 프로젝트 생성 시 개발 환경 및 테스트 서버로 활용된다.</li>\n</ul>\n</li>\n<li>\n<p>NPM (Node Package Manager):</p>\n<ul>\n<li>Node.js 환경에서 사용할 수 있는 패키지와 라이브러리를 관리하는 저장소.</li>\n<li>패키지 관리와 서버 실행, 관리에 필요한 다양한 명령어를 제공한다.</li>\n</ul>\n</li>\n<li>\n<p>설치 및 사용:</p>\n<ul>\n<li>Node.js 설치:</li>\n<li><a href=\"https://nodejs.org/en\">Node.js 공식 홈페이지</a> 에서 LTS 버전을 다운로드하고 설치한다.</li>\n<li>버전 확인: <code class=\"language-text\">node -v</code> 명령어로 설치된 Node.js 버전을 확인할 수 있다.</li>\n</ul>\n</li>\n</ul>\n<h3>React 프로젝트 생성 과정 📦</h3>\n<ol>\n<li>Node.js 설치: 위에서 언급한 대로 LTS 버전을 설치.</li>\n<li>프로젝트 생성: <code class=\"language-text\">npx create-react-app &lt;directory name></code> 명령어를 사용.</li>\n<li>프로젝트 실행: 생성된 디렉토리로 이동한 후 npm start 명령어로 프로젝트를 실행.</li>\n</ol>\n<h3>npm 명령어 📚</h3>\n<ul>\n<li><code class=\"language-text\">npm install</code>: package.json에 정의된 의존성 패키지들을 설치.</li>\n<li><code class=\"language-text\">npm install &lt;package name></code>: 원하는 패키지를 설치.</li>\n<li><code class=\"language-text\">npm install &lt;package name>@&lt;version></code>: 특정 버전의 패키지를 설치.</li>\n<li><code class=\"language-text\">npm install &lt;git repository 주소></code>: git repository로부터 패키지를 설치.</li>\n<li><code class=\"language-text\">npm start</code>: Node.js를 이용해 프로젝트를 실행.</li>\n<li><code class=\"language-text\">npm build</code>: 프로젝트를 빌드.</li>\n<li><a href=\"https://docs.npmjs.com/cli/v9/commands?v=true\">더 많은 명령어 참고</a></li>\n</ul>\n<p>CRA, Node.js, NPM을 활용하면 React 프로젝트를 효율적으로 시작하고 관리할 수 있다.\n이 도구들은 현대 웹 개발에서 중요한 역할을 하며, 개발자가 더 나은 웹 애플리케이션을 만들 수 있도록 돕는다. 🌟</p>\n<h3>React 프로젝트의 기본 구조 및 JSX 소개 📁</h3>\n<p>React 프로젝트를 시작하면 기본적으로 몇 가지 주요 디렉토리와 파일이 생성된다.\n이들은 프로젝트의 구조를 이해하고 관리하는 데 중요한 역할을 한다.\n또한, JSX는 React 개발에서 핵심적인 역할을 하는 문법으로, HTML과 유사하지만 JavaScript를 확장한 문법이다.<sup id=\"fnref-5\"><a href=\"#fn-5\" class=\"footnote-ref\">5</a></sup></p>\n<h4>Directory 구조 📂</h4>\n<ul>\n<li><code class=\"language-text\">./node_modules/</code>: npm을 이용해 설치한 패키지 모음.</li>\n<li><code class=\"language-text\">./public/</code>: 정적인 파일들(HTML, 이미지 등)의 모음.</li>\n<li><code class=\"language-text\">./src/</code>: 리액트 개발을 위한 주요 소스 파일들이 위치한다.</li>\n<li><code class=\"language-text\">./.gitignore</code>: git에 올리지 않을 파일 설정을 포함한다.</li>\n<li><code class=\"language-text\">./package.json</code>: 프로젝트 관련 정보와 사용 패키지 명세 파일.\n패키지 버전은 ^, &#x3C;=, >= 등의 기호로 범위를 표현할 수 있다.</li>\n<li><code class=\"language-text\">./README.md</code>: 프로젝트에 관한 설명을 작성하는 파일.</li>\n</ul>\n<h4>설치한 라이브러리 불러오기 📚</h4>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token string\">\"package name\"</span> <span class=\"token comment\">// CSS나 import만으로 역할을 하는 라이브러리</span>\n<span class=\"token keyword\">import</span> something <span class=\"token keyword\">from</span> <span class=\"token string\">\"package name\"</span> <span class=\"token comment\">// 기본적으로 불러와 활용할 때</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> a<span class=\"token punctuation\">,</span> b <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"package name\"</span> <span class=\"token comment\">// 패키지 내 일부만 가져올 때</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> something <span class=\"token keyword\">from</span> <span class=\"token string\">\"package name\"</span> <span class=\"token comment\">// default로 export되지 않은 경우</span></code></pre></div>\n<h2>JSX 소개 ✨</h2>\n<p>JSX는 JavaScript를 확장한 문법으로, UI가 어떻게 생겨야 하는지 설명하기 위해 React와 함께 사용된다.\nJSX는 React \"엘리먼트\"를 생성하며, HTML과 유사한 생김새를 가지지만 JavaScript의 모든 기능을 포함한다<sup id=\"fnref-6\"><a href=\"#fn-6\" class=\"footnote-ref\">6</a></sup>.</p>\n<h3>JSX의 장점</h3>\n<ul>\n<li>개발자 편의성의 향상</li>\n<li>협업 용이 및 생산성의 향상</li>\n<li>문법 오류 및 코드량 감소</li>\n</ul>\n<h3>JSX의 특징</h3>\n<ul>\n<li>HTML 태그 내에서 JavaScript 연산을 간결하게 표현할 수 있다.</li>\n<li>HTML과의 차이점으로는 class 대신 className을 사용하고, 스타일은 객체 형태로 표현한다.</li>\n<li>닫는 태그가 필수이며, 최상단 element는 반드시 하나여야 한다.</li>\n</ul>\n<h4>JSX와 JavaScript의 차이점</h4>\n<ul>\n<li>JSX는 사용자 인터페이스를 정의하는 데 사용되며, HTML처럼 보이지만 실제로는 JavaScript임.</li>\n<li>React에서는 JSX를 통해 컴포넌트를 정의하고, 이를 통해 UI를 구성한다. 이는 기존 JavaScript와 HTML을 사용하는 방식과는 다른 접근 방식을 제공한다<sup id=\"fnref-7\"><a href=\"#fn-7\" class=\"footnote-ref\">7</a></sup>.</li>\n</ul>\n<p>JSX는 React 개발에서 중요한 역할을 하며, 개발자가 보다 효율적으로 UI를 구성할 수 있도록 돕는다.\nReact 프로젝트의 구조와 JSX에 대해 이해하면, React 애플리케이션 개발에 있어 훨씬 더 편리하게 접근할 수 있다. 🚀</p>\n<h4>브라우저에 데이터 저장 및 UI 업데이트 방법 💾🔄</h4>\n<p>브라우저에 데이터를 저장하고 UI를 업데이트하는 방법은 기술 스택에 따라 다르다.\nJavaScript와 React는 이러한 작업을 처리하는 데 있어 서로 다른 접근 방식을 제공한다.</p>\n<h4>브라우저에 데이터 저장 방법</h4>\n<h5>JavaScript</h5>\n<ul>\n<li>사용자 데이터는 주로 DOM에 저장된다.\nDOM은 브라우저가 만들고 유지 관리하는 전체 HTML을 나타낸다.</li>\n<li>사용자가 데이터를 입력하면, 개발자는 DOM에서 해당 값을 찾아 추출해야 한다.\n이 과정은 관리가 번거로울 수 있다<sup id=\"fnref-8\"><a href=\"#fn-8\" class=\"footnote-ref\">8</a></sup>.</li>\n</ul>\n<h5>React</h5>\n<ul>\n<li>React에서는 제어 컴포넌트를 사용하여 사용자 입력을 기반으로 상태를 관리하고 업데이트한다.\n이는 DOM에 의존하지 않고 JS 변수에 애플리케이션의 상태를 저장함으로써 이루어진다.</li>\n<li>이 방식은 애플리케이션이 성장함에 따라 더욱 중요해지며, 코드 관리가 편리해진다.</li>\n</ul>\n<h4>UI 업데이트 방법</h4>\n<h5>JavaScript</h5>\n<ul>\n<li>UI 업데이트를 위해, 개발자는 DOM에서 요소를 찾고, 이벤트 리스너를 설정하여 사용자 상호작용에 반응해야 한다.\n이 과정은 복잡하고 관리하기 어려울 수 있다.</li>\n</ul>\n<h5>React</h5>\n<ul>\n<li>React는 상태 관리를 통해 UI를 자동으로 업데이트한다. 상태가 변경되면 React는 이를 감지하고 필요한 UI 부분만을 효율적으로 업데이트한다.</li>\n<li>이는 개발자가 UI 업데이트 로직에 집중하기보다는 사용자와의 상호작용 및 애플리케이션의 상태 관리에 더 집중할 수 있게 해준다<sup id=\"fnref-9\"><a href=\"#fn-9\" class=\"footnote-ref\">9</a></sup>.</li>\n</ul>\n<p>브라우저에 데이터를 저장하고 UI를 업데이트하는 방법은 기술의 선택에 따라 크게 달라질 수 있다. JavaScript는 직접적인 DOM 조작에 의존하는 반면, React는 상태 관리를 통해 보다 선언적이고 효율적인 방식을 제공한다.\n이러한 차이점을 이해하는 것은 웹 개발에서 중요한 요소 중 하나. 🌟</p>\n<h2>React 컴포넌트 🎨</h2>\n<p>React에서 페이지를 구성하는 기본 단위인 컴포넌트에 대해 알아보자.\n컴포넌트는 React 애플리케이션의 핵심 요소로, 재사용 가능한 코드의 블록을 제공한다.</p>\n<h3>컴포넌트란?</h3>\n<ul>\n<li>React에서의 역할: 페이지를 구성하는 최소 단위로, 재사용 가능한 UI 조각.</li>\n<li>네이밍 규칙: 컴포넌트의 이름은 대문자로 시작한다.\n이는 일반 HTML 요소와 구별하기 위함임.</li>\n</ul>\n<h4>컴포넌트의 종류</h4>\n<ul>\n<li>Class 컴포넌트: 초기 React에서 주로 사용되었으며, Java 개발자에게 친숙한 개념.\nReact의 생명 주기를 쉽게 파악할 수 있다.</li>\n<li>Function 컴포넌트: React v16부터 추가된 기능으로, 현재는 대부분의 컴포넌트가 이 형태로 사용된다.\nHook을 사용하여 상태 관리가 가능하다.</li>\n</ul>\n<h4>Controlled Component와 Uncontrolled Component</h4>\n<ul>\n<li>Controlled Component: form을 통해 입력을 받을 때, 각 input의 데이터를 state를 통해 직접 관리한.</li>\n<li>Uncontrolled Component: React로 input의 데이터를 직접 관리하지 않고, 필요할 때 DOM에서 직접 값을 가져온다.</li>\n</ul>\n<h4>컴포넌트의 특징</h4>\n<ul>\n<li>Props(Properties): 컴포넌트의 속성으로, 상위 컴포넌트로부터 데이터를 전달받는다.</li>\n<li>Children: 컴포넌트 안에 작성된 하위 요소로, props의 일부로 취급된다.</li>\n</ul>\n<h4>컴포넌트의 데이터 관리</h4>\n<ul>\n<li>Props를 통한 데이터 전달: 컴포넌트 간 데이터는 props를 통해 부모에서 자식으로 전달된다.</li>\n<li>State를 통한 내부 데이터 관리: 컴포넌트 내에서 데이터를 관리할 때는 state를 사용한다.</li>\n</ul>\n<p>React 컴포넌트는 애플리케이션을 구성하는 데 있어 매우 중요한 역할을 한다.\n컴포넌트를 통해 UI를 모듈화하고 재사용 가능한 코드를 생성하여, 개발 과정을 효율적으로 만들 수 있다.\n데이터 관리에 대한 더 자세한 정보는 <a href=\"https://blog.stackademic.com/data-handling-in-react-components-props-state-and-best-practices-1c74ae800b43\">여기</a>에서 확인할 수 있다. 🌟</p>\n<div class=\"footnotes\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p><a href=\"https://ko.legacy.reactjs.org/tutorial/tutorial.html\">https://ko.legacy.reactjs.org/tutorial/tutorial.html</a></p>\n<a href=\"#fnref-1\" class=\"footnote-backref\">↩</a>\n</li>\n<li id=\"fn-2\">\n<p><a href=\"https://www.elancer.co.kr/blog/view?seq=167\">https://www.elancer.co.kr/blog/view?seq=167</a></p>\n<a href=\"#fnref-2\" class=\"footnote-backref\">↩</a>\n</li>\n<li id=\"fn-3\">\n<p><a href=\"https://create-react-app.dev/\">https://create-react-app.dev/</a></p>\n<a href=\"#fnref-3\" class=\"footnote-backref\">↩</a>\n</li>\n<li id=\"fn-4\">\n<p><a href=\"https://legacy.reactjs.org/docs/create-a-new-react-app.html\">https://legacy.reactjs.org/docs/create-a-new-react-app.html</a></p>\n<a href=\"#fnref-4\" class=\"footnote-backref\">↩</a>\n</li>\n<li id=\"fn-5\">\n<p><a href=\"https://ko.legacy.reactjs.org/docs/introducing-jsx.html\">https://ko.legacy.reactjs.org/docs/introducing-jsx.html</a></p>\n<a href=\"#fnref-5\" class=\"footnote-backref\">↩</a>\n</li>\n<li id=\"fn-6\">\n<p><a href=\"https://ko.legacy.reactjs.org/docs/introducing-jsx.html\">https://ko.legacy.reactjs.org/docs/introducing-jsx.html</a></p>\n<a href=\"#fnref-6\" class=\"footnote-backref\">↩</a>\n</li>\n<li id=\"fn-7\">\n<p><a href=\"https://www.w3schools.com/react/react_css.asp\">https://www.w3schools.com/react/react_css.asp</a></p>\n<a href=\"#fnref-7\" class=\"footnote-backref\">↩</a>\n</li>\n<li id=\"fn-8\">\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Client-side_storage\">https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Client-side_storage</a></p>\n<a href=\"#fnref-8\" class=\"footnote-backref\">↩</a>\n</li>\n<li id=\"fn-9\">\n<p><a href=\"https://www.linkedin.com/pulse/understanding-react-reconciliation-heartbeat-ui-updates-rostami\">https://www.linkedin.com/pulse/understanding-react-reconciliation-heartbeat-ui-updates-rostami</a></p>\n<a href=\"#fnref-9\" class=\"footnote-backref\">↩</a>\n</li>\n</ol>\n</div>","frontmatter":{"title":"📘React 기초 정리 ","date":"May 01, 2023","update":"March 27, 2024","tags":["SQL","SPA","Component","Hook","JSX","NPM","Basic"],"series":"React Basic"},"fields":{"slug":"/React/","readingTime":{"minutes":18.595}}},"seriesList":{"edges":[{"node":{"id":"15a1050d-1263-5054-8d26-8bb1526cca9d","fields":{"slug":"/React/"},"frontmatter":{"title":"📘React 기초 정리 "}}}]},"previous":{"fields":{"slug":"/SQL/"},"frontmatter":{"title":"💾 SQL Basic - 1. 소개 및 기본 개념"}},"next":null},"pageContext":{"id":"15a1050d-1263-5054-8d26-8bb1526cca9d","series":"React Basic","previousPostId":"7930c25b-04dd-5d0f-a192-c1acd4be29b3","nextPostId":null}},"staticQueryHashes":[],"slicesMap":{}}