{"componentChunkName":"component---src-templates-post-jsx","path":"/Code N Solve/","result":{"data":{"site":{"siteMetadata":{"title":"leekh8"}},"markdownRemark":{"id":"b1d501cc-893c-514f-8d6a-d70cd200cb5a","excerpt":"Code N Solve 📘 GitHub Actions를 이용한 문제 해결과 배포 자동화 🚀 GitHub Actions는 개발 프로세스를 자동화하여 빌드, 테스트, 배포 등을 수행할 수 있는 강력한 도구이다.\n하지만 올바른 설정 없이는 원하는 대로 작동하지 않을 수 있다.\nDeployment 자동화를 위해 GitHub Actions의 Workflow를 설정…","html":"<h1>Code N Solve 📘</h1>\n<h2>GitHub Actions<sup id=\"fnref-1\"><a href=\"#fn-1\" class=\"footnote-ref\">1</a></sup>를 이용한 문제 해결과 배포 자동화 🚀</h2>\n<p>GitHub Actions는 개발 프로세스를 자동화하여 빌드, 테스트, 배포 등을 수행할 수 있는 강력한 도구이다.\n하지만 올바른 설정 없이는 원하는 대로 작동하지 않을 수 있다.\nDeployment 자동화를 위해 GitHub Actions의 Workflow를 설정할 때 겪은 몇 가지 문제와 이를 해결하는 방법에 대해 이야기해보자.</p>\n<h3>Blog Deployment 자동화</h3>\n<p>현재 블로그 테마는 <a href=\"https://github.com/devHudi/gatsby-starter-hoodie?tab=readme-ov-file\">gatsby-starter-hoodie</a>를 활용하고 있다.</p>\n<p>여기에 CI (Continuous Integration)<sup id=\"fnref-2\"><a href=\"#fn-2\" class=\"footnote-ref\">2</a></sup> 코드는 이미 작성되어 있고, Netlify를 통한 배포 방식이 설명되어 있지만 Github Pages를 이용해 배포를 하고 있었다.\n매번 <code class=\"language-text\">$ npm run deploy-gh</code> 명령을 하기 귀찮아져 자동화 Workflow를 만들기로 결심한다.</p>\n<h3>GitHub Actions Workflow 설정</h3>\n<h4>1. GitHub Pages 자동 배포<sup id=\"fnref-3\"><a href=\"#fn-3\" class=\"footnote-ref\">3</a></sup><sup id=\"fnref-4\"><a href=\"#fn-4\" class=\"footnote-ref\">4</a></sup></h4>\n<ul>\n<li>\n<p>시도:</p>\n<ul>\n<li>\n<p>GitHub Pages에 자동으로 배포하기.</p>\n<details>\n<summary>접기/펼치기</summary>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Build and Deploy\n\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> main\n\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Checkout Repository\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v2\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Setup Node.js\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@v2\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">node-version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"14\"</span>\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Install Dependencies\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm install\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Build\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm run build\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Deploy to GitHub Pages\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> peaceiris/actions<span class=\"token punctuation\">-</span>gh<span class=\"token punctuation\">-</span>pages@v3\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">deploy_key</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.ACCESS_TOKEN <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n          <span class=\"token key atrule\">publish_dir</span><span class=\"token punctuation\">:</span> ./public\n          <span class=\"token key atrule\">publish_branch</span><span class=\"token punctuation\">:</span> gh<span class=\"token punctuation\">-</span>pages</code></pre></div>\n</li>\n</ul>\n</details>\n</li>\n<li>문제:</li>\n<li>\n<p>Workflow 설정 파일(deploy.yml)을 작성했지만 Node.js 버전이 낮아 Gatsby 빌드 중 오류가 발생했다.</p>\n<details>\n<summary>접기/펼치기</summary>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">error Gatsby requires Node.js <span class=\"token number\">18.0</span>.0 or higher <span class=\"token punctuation\">(</span>you have v14.21.3<span class=\"token punctuation\">)</span>.\nUpgrade Node to the latest stable release: https://gatsby.dev/upgrading-node-js\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> code ELIFECYCLE</code></pre></div>\n</details>\n</li>\n</ul>\n<h4>2. Node.js 버전 충돌</h4>\n<ul>\n<li>\n<p>문제:</p>\n<ul>\n<li>Workflow 설정에서는 14.21.3 버전이 지정되어 있었는데 Node.js의 버전 18.0.0 이상을 빌요로 하여 Gatsby 빌드 중 오류가 발생했다.</li>\n</ul>\n</li>\n<li>\n<p>시도:</p>\n<ul>\n<li>Node.js 버전(node-version)을 20.3.1로 업데이트하였다.</li>\n</ul>\n<details>\n<summary>접기/펼치기</summary>\n```yaml\nname: Build and Deploy\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    on:\n    push:\n    branches: - main\n\n    jobs:\n    deploy:\n    runs-on: ubuntu-latest\n\n          steps:\n            - name: Checkout Repository\n              uses: actions/checkout@v2\n\n            - name: Setup Node.js\n              uses: actions/setup-node@v2\n              with:\n                node-version: 20.3.1\n\n            - name: Install Dependencies\n              run: npm install\n\n            - name: Build\n              run: npm run build\n\n            - name: Deploy to GitHub Pages\n              uses: peaceiris/actions-gh-pages@v3\n              with:\n                deploy_key: ${{ secrets.ACCESS_TOKEN }}\n                publish_dir: ./public\n                publish_branch: gh-pages\n    ```</code></pre></div>\n</details>\n</li>\n<li>\n<p>해결:</p>\n<ul>\n<li>\n<p>Node.js 버전을 20.3.1로 업데이트하여 문제를 해결했지만 이후에 패키지 의존성 충돌 문제가 발생했다.</p>\n<details>\n<summary>접기/펼치기</summary>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Run <span class=\"token function\">npm</span> <span class=\"token function\">install</span>\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> code ERESOLVE\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> ERESOLVE could not resolve\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span>\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> While resolving: gatsby-remark-katex@3.10.0\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> Found: gatsby@5.13.3\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> node_modules/gatsby\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span>   gatsby@<span class=\"token string\">\"^5.11.0\"</span> from the root project\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span>   peer gatsby@<span class=\"token string\">\"^5.0.0-next\"</span> from babel-plugin-remove-graphql-queries@5.13.1\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span>   node_modules/babel-plugin-remove-graphql-queries\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span>     babel-plugin-remove-graphql-queries@<span class=\"token string\">\"^5.13.1\"</span> from gatsby@5.13.3\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span>     babel-plugin-remove-graphql-queries@<span class=\"token string\">\"^5.13.1\"</span> from gatsby-plugin-typescript@5.13.1\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span>     node_modules/gatsby-plugin-typescript\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span>       gatsby-plugin-typescript@<span class=\"token string\">\"^5.13.1\"</span> from gatsby@5.13.3\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span>   <span class=\"token number\">17</span> <span class=\"token function\">more</span> <span class=\"token punctuation\">(</span>gatsby-plugin-catch-links, gatsby-plugin-feed, <span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">)</span>\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span>\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> Could not resolve dependency:\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> peer gatsby@<span class=\"token string\">\"^2.0.0\"</span> from gatsby-remark-katex@3.10.0\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> node_modules/gatsby-remark-katex\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span>   gatsby-remark-katex@<span class=\"token string\">\"^3.5.0\"</span> from the root project\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span>\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> Conflicting peer dependency: gatsby@2.32.13\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> node_modules/gatsby\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span>   peer gatsby@<span class=\"token string\">\"^2.0.0\"</span> from gatsby-remark-katex@3.10.0\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span>   node_modules/gatsby-remark-katex\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span>     gatsby-remark-katex@<span class=\"token string\">\"^3.5.0\"</span> from the root project\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span>\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> Fix the upstream dependency conflict, or retry\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> this <span class=\"token builtin class-name\">command</span> with <span class=\"token parameter variable\">--force</span> or --legacy-peer-deps\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> to accept an incorrect <span class=\"token punctuation\">(</span>and potentially broken<span class=\"token punctuation\">)</span> dependency resolution.</code></pre></div>\n</li>\n</ul>\n</details>\n<h4>3. Node.js 패키지 의존성 충돌 및 GitHub 토큰 시크릿 등록</h4>\n<ul>\n<li>\n<p>시도:</p>\n<ul>\n<li>\n<p>패키지 의존성 충돌 문제를 --legacy-peer-deps 명령으로 해결하고 GitHub 토큰을 시크릿에 등록을 하기로 했다.</p>\n<details>\n<summary>접기/펼치기</summary>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Build and Deploy\n\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> main\n\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Checkout Repository\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v2\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Setup Node.js\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@v2\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">node-version</span><span class=\"token punctuation\">:</span> 20.3.1\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Install Dependencies\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm install <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>legacy<span class=\"token punctuation\">-</span>peer<span class=\"token punctuation\">-</span>deps\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Build\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm run build\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Deploy to GitHub Pages\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> peaceiris/actions<span class=\"token punctuation\">-</span>gh<span class=\"token punctuation\">-</span>pages@v3\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">deploy_key</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.ACCESS_TOKEN <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n          <span class=\"token key atrule\">publish_dir</span><span class=\"token punctuation\">:</span> ./public\n          <span class=\"token key atrule\">publish_branch</span><span class=\"token punctuation\">:</span> gh<span class=\"token punctuation\">-</span>pages</code></pre></div>\n</li>\n</ul>\n</details>\n<ul>\n<li>\n<p>해결:</p>\n<ul>\n<li>\n<p>프로필 - Settings - Developer Settings - Personal access tokens에서 생성한 토큰을 복사하여 저장소 secrets에 등록했다.</p>\n<details>\n<summary>접기/펼치기</summary>\n```bash\nRun peaceiris/actions-gh-pages@v3\n  with:\n    deploy_key: ***\n    publish_dir: ./public\n    publish_branch: gh-pages\n    allow_empty_commit: false\n    keep_files: false\n    force_orphan: false\n    enable_jekyll: false\n    disable_nojekyll: false\n    exclude_assets: .github\n[INFO] Usage https://github.com/peaceiris/actions-gh-pages#readme\nDump inputs\n  [INFO] DeployKey: true\n  [INFO] PublishBranch: gh-pages\n  [INFO] PublishDir: ./public\n  [INFO] DestinationDir:\n  [INFO] ExternalRepository:\n  [INFO] AllowEmptyCommit: false\n  [INFO] KeepFiles: false\n  [INFO] ForceOrphan: false\n  [INFO] UserName:\n  [INFO] UserEmail:\n  [INFO] CommitMessage:\n  [INFO] FullCommitMessage:\n  [INFO] TagName:\n  [INFO] TagMessage:\n  [INFO] EnableJekyll (DisableNoJekyll): false\n  [INFO] CNAME:\n  [INFO] ExcludeAssets .github\n<p>Setup auth token\n[INFO] setup SSH deploy key\n/usr/bin/chmod 700 /home/runner/.ssh\n[INFO] wrote /home/runner/.ssh/known<em>hosts\n/usr/bin/chmod 600 /home/runner/.ssh/known</em>hosts\n[INFO] wrote /home/runner/.ssh/github\n/usr/bin/chmod 600 /home/runner/.ssh/github\n[INFO] wrote /home/runner/.ssh/config\n/usr/bin/chmod 600 /home/runner/.ssh/config\n/usr/bin/ssh-add /home/runner/.ssh/github\nError loading key \"/home/runner/.ssh/github\": error in libcrypto\nError: Action failed with \"The process '/usr/bin/ssh-add' failed with exit code 1\"</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"></code></pre></div>\n</li>\n</ul>\n</details>\n</li>\n</ul>\n<h4>4. User authenticate using git config</h4>\n<ul>\n<li>\n<p>시도:</p>\n<ul>\n<li>token을 secret에 등록하였지만 token 인증에 실패하여 git config 명령을 통해 사용자를 등록하였다.</li>\n</ul>\n</li>\n<li>\n<p>문제:</p>\n<ul>\n<li>\n<p>SSH 인증은 Windows 환경에서는 적용되지 않는 것 같다.</p>\n<details>\n<summary>접기/펼치기</summary>\n```yaml\nname: Build and Deploy\n<p>on:\npush:\nbranches:\n- main</p>\n<p>jobs:\ndeploy:\nruns-on: ubuntu-latest</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">steps:\n  - name: Checkout Repository\n    uses: actions/checkout@v2\n\n  - name: Setup Node.js\n    uses: actions/setup-node@v2\n    with:\n      node-version: 20.3.1\n\n  - name: Install Dependencies\n    run: npm install --legacy-peer-deps\n\n  - name: Build\n    run: npm run build\n\n  - name: Deploy to GitHub Pages\n    env:\n      ACCESS_TOKEN: ${{ secrets.PAT }}\n    run: |\n      git config --global user.name \"USER NAME\"\n      git config --global user.email \"USER@EMAIL.COM\"\n      npx gh-pages -d ./public -b gh-pages -u $ACCESS_TOKEN</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;/details>\n- 문제\n  - git config 명령을 통해 사용자를 등록했지만 오류가 발생했다.\n  &lt;details>\n  &lt;summary>접기/펼치기&lt;/summary>\n```bash\nRun git config --global user.name \"USER NAME\"\n  git config --global user.name \"USER NAME\"\n  git config --global user.email \"USER@EMAIL.COM\"\n  npx gh-pages -d ./public -b gh-pages -u $ACCESS_TOKEN\n  shell: /usr/bin/bash -e {0}\n  env:\n    ACCESS_TOKEN: ***\nCould not parse name and email from user option \"***\" (format should be \"Your Name &lt;email@example.com>\")\nError: Process completed with exit code 1.\n```</code></pre></div>\n</li>\n</ul>\n</details>\n</li>\n</ul>\n<h4>5. User authenticate using token</h4>\n<ul>\n<li>\n<p>시도:</p>\n<ul>\n<li>\n<p>token으로 사용자 인증을 시도하였다.</p>\n<details>\n<summary>접기/펼치기</summary>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Build and Deploy\n\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> main\n\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Checkout Repository\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v2\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Setup Node.js\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@v2\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">node-version</span><span class=\"token punctuation\">:</span> 20.3.1\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Install Dependencies\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm install <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>legacy<span class=\"token punctuation\">-</span>peer<span class=\"token punctuation\">-</span>deps\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Build\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm run build\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Deploy to GitHub Pages\n        <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">ACCESS_TOKEN</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.PAT <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n          npx gh-pages -d ./public -b gh-pages -u $ACCESS_TOKEN</span></code></pre></div>\n</li>\n</ul>\n</details>\n- 문제:\n  - 같은 문제가 반복되었다.\n  <details>\n  <summary>접기/펼치기</summary>\n    ```bash\n    Run npx gh-pages -d ./public -b gh-pages -u $ACCESS_TOKEN\n      npx gh-pages -d ./public -b gh-pages -u $ACCESS_TOKEN\n      shell: /usr/bin/bash -e {0}\n      env:\n        ACCESS_TOKEN: ***\n    Could not parse name and email from user option \"***\" (format should be \"Your Name <email@example.com>\")\n    Error: Process completed with exit code 1.\n    ```\n</details>\n<h4>6. User authenticate using token 2</h4>\n<ul>\n<li>\n<p>시도:</p>\n<ul>\n<li>\n<p>토큰을 이용해 사용자 인증을 시도할때 옵션을 -u에서 -t로 변경해 토큰을 인식하도록 해주었다.</p>\n<details>\n<summary>접기/펼치기</summary>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Build and Deploy\n\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> main\n\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Checkout Repository\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v2\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Setup Node.js\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@v2\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">node-version</span><span class=\"token punctuation\">:</span> 20.3.1\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Install Dependencies\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm install <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>legacy<span class=\"token punctuation\">-</span>peer<span class=\"token punctuation\">-</span>deps\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Build\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm run build\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Deploy to GitHub Pages\n        <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">ACCESS_TOKEN</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.PAT <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n          npx gh-pages -d ./public -b gh-pages -t $ACCESS_TOKEN</span></code></pre></div>\n</li>\n</ul>\n</details>\n- 문제:\n<ul>\n<li>\n<p>git config 명령을 이용해 사용자의 신원을 설정하라는 오류(Author identity unknown)로 변경되었다.</p>\n<details>\n<summary>접기/펼치기</summary>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Run npx gh-pages <span class=\"token parameter variable\">-d</span> ./public <span class=\"token parameter variable\">-b</span> gh-pages <span class=\"token parameter variable\">-t</span> <span class=\"token variable\">$ACCESS_TOKEN</span>\n  npx gh-pages <span class=\"token parameter variable\">-d</span> ./public <span class=\"token parameter variable\">-b</span> gh-pages <span class=\"token parameter variable\">-t</span> <span class=\"token variable\">$ACCESS_TOKEN</span>\n  shell: /usr/bin/bash <span class=\"token parameter variable\">-e</span> <span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span>\n  env:\n    ACCESS_TOKEN: ***\nAuthor identity unknown\n\n*** Please tell me <span class=\"token function\">who</span> you are.\n\nRun\n\n  <span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> user.email <span class=\"token string\">\"you@example.com\"</span>\n  <span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> user.name <span class=\"token string\">\"Your Name\"</span>\n\nto <span class=\"token builtin class-name\">set</span> your account<span class=\"token string\">'s default identity.\nOmit --global to set the identity only in this repository.\n\nfatal: unable to auto-detect email address (got '</span>runner@fv-az1535-535.<span class=\"token punctuation\">(</span>none<span class=\"token punctuation\">)</span>'<span class=\"token punctuation\">)</span>\n\nError: Process completed with <span class=\"token builtin class-name\">exit</span> code <span class=\"token number\">1</span>.</code></pre></div>\n</li>\n</ul>\n</details>\n<h4>7. User authenticate using git config 2</h4>\n<ul>\n<li>\n<p>시도:</p>\n<ul>\n<li>\n<p>git config 명령을 사용해 사용자 정보를 인식할 수 있도록 해주었다.</p>\n<details>\n<summary>접기/펼치기</summary>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Build and Deploy\n\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> main\n\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Checkout Repository\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v2\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Setup Node.js\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@v2\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">node-version</span><span class=\"token punctuation\">:</span> 20.3.1\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Install Dependencies\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm install <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>legacy<span class=\"token punctuation\">-</span>peer<span class=\"token punctuation\">-</span>deps\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Build\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm run build\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Deploy to GitHub Pages\n        <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">ACCESS_TOKEN</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.PAT <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n          git config --global user.email \"USER@EMAIL.COM\"\n          git config --global user.name \"USER NAME\"\n          npx gh-pages -d ./public -b gh-pages -t $ACCESS_TOKEN</span></code></pre></div>\n</li>\n</ul>\n</details>\n<ul>\n<li>\n<p>문제:</p>\n<ul>\n<li>\n<p>Author identity unknown 오류는 배포 시 Git 사용자 정보를 설정해두지 않아 발생하는 오류로 Git이 커밋을 생성할 때 사용자의 정보를 필요로 하기 때문에 발생하는데 문제가 반복되었다.</p>\n<details>\n<summary>접기/펼치기</summary>\n```bash\nRun git config --global user.email \"USER@EMAIL.COM\"\n  git config --global user.email \"USER@EMAIL.COM\"\n  git config --global user.name \"USER NAME\"\n  npx gh-pages -d ./public -b gh-pages -t $ACCESS_TOKEN\n  shell: /usr/bin/bash -e {0}\n  env:\n    ACCESS_TOKEN: ***\nfatal: could not read Username for 'https://github.com': No such device or address\n<p>Error: Process completed with exit code 1.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"></code></pre></div>\n</li>\n</ul>\n</details>\n</li>\n</ul>\n<h4>8. User authenticate using git config 3</h4>\n<ul>\n<li>\n<p>시도:</p>\n<ul>\n<li>\n<p>HTTPS URL에 토큰을 추가하여 사용자를 인식할 수 있게 시도하였다.<sup id=\"fnref-5\"><a href=\"#fn-5\" class=\"footnote-ref\">5</a></sup></p>\n<details>\n<summary>접기/펼치기</summary>\n```yaml\nname: Build and Deploy\n</li>\n</ul>\n<p>on:\npush:\nbranches: - main</p>\n<p>jobs:\ndeploy:\nruns-on: ubuntu-latest</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  steps:\n    - name: Checkout Repository\n      uses: actions/checkout@v2\n\n    - name: Setup Node.js\n      uses: actions/setup-node@v2\n      with:\n        node-version: 20.3.1\n\n    - name: Install Dependencies\n      run: npm install --legacy-peer-deps\n\n    - name: Build\n      run: npm run build\n\n    - name: Deploy to GitHub Pages\n      env:\n        ACCESS_TOKEN: ${{ secrets.PAT }}\n      run: |\n        git config --global url.https://${{ secrets.PAT }}@github.com/.insteadOf https://github.com/\n        npx gh-pages -d ./public -b gh-pages -t $ACCESS_TOKEN</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"></code></pre></div>\n</li>\n</ul>\n</details>\n<ul>\n<li>\n<p>문제:</p>\n<ul>\n<li>\n<p>여전히 Author identity unknown 상태이다.</p>\n<details>\n<summary>접기/펼치기</summary>\n```bash\nRun git config --global url.https://***@github.com/.insteadOf https://github.com/\n  git config --global url.https://***@github.com/.insteadOf https://github.com/\n  npx gh-pages -d ./public -b gh-pages -t $ACCESS_TOKEN\n  shell: /usr/bin/bash -e {0}\n  env:\n    ACCESS_TOKEN: ***\nAuthor identity unknown\n<p>*** Please tell me who you are.</p>\n<p>Run</p>\n<p>git config --global user.email \"you@example.com\"\ngit config --global user.name \"Your Name\"</p>\n<p>to set your account's default identity.\nOmit --global to set the identity only in this repository.</p>\n<p>fatal: empty ident name (for <a href=\"mailto:runner@fv-az1118-461.jboa14ee0bjuvjv5ua334yvpdd.cx.internal.cloudapp.net\">runner@fv-az1118-461.jboa14ee0bjuvjv5ua334yvpdd.cx.internal.cloudapp.net</a>) not allowed</p>\n<p>Error: Process completed with exit code 1.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"></code></pre></div>\n</li>\n</ul>\n</details>\n</li>\n</ul>\n<h4>9. User authenticate using git config 4</h4>\n<ul>\n<li>\n<p>시도:</p>\n<ul>\n<li>\n<p>다시 git config 명령을 사용해 사용자 정보를 추가하였다.</p>\n<details>\n<summary>접기/펼치기</summary>\n```yaml\nname: Build and Deploy\n<p>on:\npush:\nbranches:\n- main</p>\n<p>jobs:\ndeploy:\nruns-on: ubuntu-latest</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">steps:\n  - name: Checkout Repository\n    uses: actions/checkout@v2\n\n  - name: Setup Node.js\n    uses: actions/setup-node@v2\n    with:\n      node-version: 20.3.1\n\n  - name: Install Dependencies\n    run: npm install --legacy-peer-deps\n\n  - name: Build\n    run: npm run build\n\n  - name: Deploy to GitHub Pages\n    env:\n      ACCESS_TOKEN: ${{ secrets.PAT }}\n    run: |\n      git config --global user.name \"USER NAME\"\n      git config --global user.email \"USER@EMAIL.COM\"\n      npx gh-pages -d ./public -b gh-pages -t $ACCESS_TOKEN</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;/details>\n- 문제:\n  - 이전에 나타났던 문제가 계속 나타나 눈물이 날 뻔 했다.\n  &lt;details>\n  &lt;summary>접기/펼치기&lt;/summary>\n```bash\nRun git config --global user.name \"USER NAME\"\n  git config --global user.name \"USER NAME\"\n  git config --global user.email \"USER@EMAIL.COM\"\n  npx gh-pages -d ./public -b gh-pages -t $ACCESS_TOKEN\n  shell: /usr/bin/bash -e {0}\n  env:\n    ACCESS_TOKEN: ***\nfatal: could not read Username for 'https://github.com': No such device or address\n```</code></pre></div>\n</li>\n</ul>\n</details>\n</li>\n</ul>\n<h4>10. User authenticate using git config 5</h4>\n<ul>\n<li>\n<p>시도:</p>\n<ul>\n<li>\n<p>혹시 토큰이 인식이 안되고 있나 의심스러워서 순서를 변경하여 다시 시도하였다.</p>\n<details>\n<summary>접기/펼치기</summary>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Build and Deploy\n\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> main\n\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">PAT</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.PAT <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Checkout Repository\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v2\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Setup Node.js\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@v2\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">node-version</span><span class=\"token punctuation\">:</span> 20.3.1\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Install Dependencies\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm install <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>legacy<span class=\"token punctuation\">-</span>peer<span class=\"token punctuation\">-</span>deps\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Build\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm run build\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Deploy to GitHub Pages\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n          git config --global url.https://$PAT@github.com/.insteadOf https://github.com/\n          npx gh-pages -d ./public -b gh-pages -t $PAT</span></code></pre></div>\n</li>\n</ul>\n</details>\n<ul>\n<li>\n<p>문제:</p>\n<ul>\n<li>\n<p>달라지지 않은 오류 메시지가 나와 눈물이 났다.</p>\n<details>\n<summary>접기/펼치기</summary>\n```bash\nRun git config --global user.name \"USER NAME\"\n  git config --global user.name \"USER NAME\"\n  git config --global user.email \"USER@EMAIL.COM\"\n  npx gh-pages -d ./public -b gh-pages -t $ACCESS_TOKEN\n  shell: /usr/bin/bash -e {0}\n  env:\n    ACCESS_TOKEN: ***\nfatal: could not read Username for 'https://github.com': No such device or address\n<p>Error: Process completed with exit code 1.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"></code></pre></div>\n</li>\n</ul>\n</details>\n</li>\n</ul>\n<h4>11. User authenticate using git config 6</h4>\n<ul>\n<li>\n<p>시도:</p>\n<ul>\n<li>\n<p>git config 명령을 빌드 과정에서 미리 해주면 될까 싶어 시도하였다.</p>\n<details>\n<summary>접기/펼치기</summary>\n```yaml\nname: Build and Deploy\n</li>\n</ul>\n<p>on:\npush:\nbranches: - main</p>\n<p>jobs:\ndeploy:\nruns-on: ubuntu-latest\nenv:\nPAT: ${{ secrets.PAT }}</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  steps:\n    - name: Checkout Repository\n      uses: actions/checkout@v2\n\n    - name: Setup Node.js\n      uses: actions/setup-node@v2\n      with:\n        node-version: 20.3.1\n\n    - name: Install Dependencies\n      run: npm install --legacy-peer-deps\n\n    - name: Build\n      run: |\n        git config --global url.https://$PAT@github.com/.insteadOf https://github.com/\n        npm run build\n\n    - name: Deploy to GitHub Pages\n      run: |\n        npx gh-pages -d ./public -b gh-pages -t $PAT</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"></code></pre></div>\n</li>\n</ul>\n</details>\n<ul>\n<li>\n<p>해결:</p>\n<ul>\n<li>git config 명령을 deploy 과정 이전에 진행해야 한다는 결론을 얻었다.</li>\n</ul>\n</li>\n<li>\n<p>문제:</p>\n<ul>\n<li>\n<p>여전히 Author identity unknow 문제가 있다.</p>\n<details>\n<summary>접기/펼치기</summary>\n```bash\nRun npx gh-pages -d ./public -b gh-pages -t $PAT\nnpx gh-pages -d ./public -b gh-pages -t $PAT\nshell: /usr/bin/bash -e {0}\nenv:\n  PAT: ***\nAuthor identity unknown\n</li>\n</ul>\n<p>*** Please tell me who you are.</p>\n<p>Run</p>\n<p>git config --global user.email \"you@example.com\"\ngit config --global user.name \"Your Name\"</p>\n<p>to set your account's default identity.\nOmit --global to set the identity only in this repository.</p>\n<p>fatal: unable to auto-detect email address (got 'runner@fv-az1385-401.(none)')</p>\n<p>Error: Process completed with exit code 1.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"></code></pre></div>\n</li>\n</ul>\n</details>\n<h4>12. User authenticate using git config 7</h4>\n<ul>\n<li>\n<p>시도:</p>\n<ul>\n<li>\n<p>git config 명령을 통한 사용자 정보 설정 단계를 별도로 만들어 주었다.</p>\n<details>\n<summary>접기/펼치기</summary>\n```yaml\nname: Build and Deploy\n</li>\n</ul>\n<p>on:\npush:\nbranches: - main</p>\n<p>jobs:\ndeploy:\nruns-on: ubuntu-latest\nenv:\nPAT: ${{ secrets.PAT }}</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  steps:\n    - name: Checkout Repository\n      uses: actions/checkout@v2\n\n    - name: Setup Node.js\n      uses: actions/setup-node@v2\n      with:\n        node-version: 20.3.1\n\n    - name: Install Dependencies\n      run: npm install --legacy-peer-deps\n\n    - name: Build\n      run: npm run build\n\n    - name: Set Git user information\n      run: git config --global url.https://$PAT@github.com/.insteadOf https://github.com/\n\n    - name: Deploy to GitHub Pages\n      run: |\n        npx gh-pages -d ./public -b gh-pages -t $PAT</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"></code></pre></div>\n</li>\n</ul>\n</details>\n<ul>\n<li>\n<p>문제:</p>\n<ul>\n<li>\n<p>다시 눈물이 났다.</p>\n<details>\n<summary>접기/펼치기</summary>\n```bash\nRun npx gh-pages -d ./public -b gh-pages -t $PAT\n  npx gh-pages -d ./public -b gh-pages -t $PAT\n  shell: /usr/bin/bash -e {0}\n  env:\n    PAT: ***\nAuthor identity unknown\n<p>*** Please tell me who you are.</p>\n<p>Run</p>\n<p>git config --global user.email \"you@example.com\"\ngit config --global user.name \"Your Name\"</p>\n<p>to set your account's default identity.\nOmit --global to set the identity only in this repository.</p>\n<p>fatal: empty ident name (for <a href=\"mailto:runner@fv-az914-157.2e4pmxhwlzfuhnev11cd0y0noa.phxx.internal.cloudapp.net\">runner@fv-az914-157.2e4pmxhwlzfuhnev11cd0y0noa.phxx.internal.cloudapp.net</a>) not allowed</p>\n<p>Error: Process completed with exit code 1.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"></code></pre></div>\n</li>\n</ul>\n</details>\n</li>\n</ul>\n<h4>13. User authenticate using git config 8</h4>\n<ul>\n<li>\n<p>시도:</p>\n<ul>\n<li>\n<p>사용자 정보 단계에서 가진 모든 정보를 알려주었다.</p>\n<details>\n<summary>접기/펼치기</summary>\n```yaml\nname: Build and Deploy\n</li>\n</ul>\n<p>on:\npush:\nbranches: - main</p>\n<p>jobs:\ndeploy:\nruns-on: ubuntu-latest\nenv:\nPAT: ${{ secrets.PAT }}</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  steps:\n    - name: Checkout Repository\n      uses: actions/checkout@v2\n\n    - name: Setup Node.js\n      uses: actions/setup-node@v2\n      with:\n        node-version: 20.3.1\n\n    - name: Install Dependencies\n      run: npm install --legacy-peer-deps\n\n    - name: Build\n      run: npm run build\n\n    - name: Set Git user information\n      run: |\n        git config --global user.email \"amysun125@gmail.com\"\n        git config --global user.name \"leekh8\"\n\n    - name: Deploy to GitHub Pages\n      run: |\n        git config --global url.https://$PAT@github.com/.insteadOf https://github.com/\n        npx gh-pages -d ./public -b gh-pages -t $PAT</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"></code></pre></div>\n</li>\n</ul>\n</details>\n<ul>\n<li>성공!</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Published</code></pre></div>\n<p><a href=\"https://docs.github.com/ko/enterprise-server@3.10/actions/learn-github-actions\">https://docs.github.com/ko/enterprise-server@3.10/actions/learn-github-actions</a>\n<sup id=\"fnref-2\"><a href=\"#fn-2\" class=\"footnote-ref\">2</a></sup>:\n<a href=\"https://docs.github.com/ko/enterprise-server@3.10/actions/automating-builds-and-tests/about-continuous-integration\">https://docs.github.com/ko/enterprise-server@3.10/actions/automating-builds-and-tests/about-continuous-integration</a>\n<sup id=\"fnref-3\"><a href=\"#fn-3\" class=\"footnote-ref\">3</a></sup>:\n<a href=\"https://docs.github.com/ko/enterprise-server@3.10/actions/examples/using-scripts-to-test-your-code-on-a-runner\">https://docs.github.com/ko/enterprise-server@3.10/actions/examples/using-scripts-to-test-your-code-on-a-runner</a>\n<sup id=\"fnref-4\"><a href=\"#fn-4\" class=\"footnote-ref\">4</a></sup>:\n<a href=\"https://docs.github.com/ko/enterprise-server@3.10/actions/using-workflows/workflow-syntax-for-github-actions\">https://docs.github.com/ko/enterprise-server@3.10/actions/using-workflows/workflow-syntax-for-github-actions</a>\n<sup id=\"fnref-5\"><a href=\"#fn-5\" class=\"footnote-ref\">5</a></sup>:\n<a href=\"https://github.com/orgs/community/discussions/26580\">https://github.com/orgs/community/discussions/26580</a></p>\n<div class=\"footnotes\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<a href=\"#fnref-1\" class=\"footnote-backref\">↩</a>\n</li>\n</ol>\n</div>","frontmatter":{"title":"🚀 GitHub Actions를 이용한 블로그 자동 배포 문제 해결 과정","date":"April 01, 2024","update":"April 04, 2024","tags":["GitHub Actions","Workflow","Deployment Automation","Personal Access Token","PAT","SSH Key","의존성 관리","Code N Solve"],"series":"Code N Solve"},"fields":{"slug":"/Code N Solve/","readingTime":{"minutes":15.945}}},"seriesList":{"edges":[{"node":{"id":"b1d501cc-893c-514f-8d6a-d70cd200cb5a","fields":{"slug":"/Code N Solve/"},"frontmatter":{"title":"🚀 GitHub Actions를 이용한 블로그 자동 배포 문제 해결 과정"}}}]},"previous":{"fields":{"slug":"/React-2-Props-State/"},"frontmatter":{"title":"📘React 기초 정리 2 "}},"next":null},"pageContext":{"id":"b1d501cc-893c-514f-8d6a-d70cd200cb5a","series":"Code N Solve","previousPostId":"0027d780-dc00-5deb-8468-93cd387eef09","nextPostId":null}},"staticQueryHashes":[],"slicesMap":{}}