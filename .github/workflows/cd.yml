name: CD

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PAT: ${{ secrets.PAT }}
      USEREMAIL: ${{secrets.USEREMAIL}}
      USERNAME: ${{secrets.USERNAME}}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci --legacy-peer-deps" >> $GITHUB_OUTPUT
          else
            echo "Unable to determine package manager"
            exit 1
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      - name: Set Playwright Browsers Path
        run: echo "PLAYWRIGHT_BROWSERS_PATH=$HOME/.cache/ms-playwright" >> $GITHUB_ENV

      - name: Install Project Dependencies and Playwright Browsers
        run: |
          ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
          npx playwright install chromium

      - name: Check Playwright Chromium Version
        id: check-chromium-version
        run: |
          CHROMIUM_DIR=$(ls -d $PLAYWRIGHT_BROWSERS_PATH/chromium-*/ | grep -o 'chromium-[0-9]*')
          echo "Chromium version: $CHROMIUM_DIR"
          echo "CHROMIUM_DIR=$CHROMIUM_DIR" >> $GITHUB_ENV

      - name: Verify Playwright Installation
        run: |
          ls -la $PLAYWRIGHT_BROWSERS_PATH/
          ls -la $PLAYWRIGHT_BROWSERS_PATH/$CHROMIUM_DIR/chrome-linux/

      - name: Build with Gatsby
        env:
          PREFIX_PATHS: "true"
        run: ${{ steps.detect-package-manager.outputs.manager }} run build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
