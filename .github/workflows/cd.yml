name: CD

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PAT: ${{ secrets.PAT }}
      USEREMAIL: ${{secrets.USEREMAIL}}
      USERNAME: ${{secrets.USERNAME}}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci --legacy-peer-deps" >> $GITHUB_OUTPUT
          else
            echo "Unable to determine package manager"
            exit 1
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      - name: Setup pnpm
        run: npm install -g pnpm

      - name: Set Playwright Browsers Path
        run: |
          echo "PLAYWRIGHT_BROWSERS_PATH=$HOME/.cache/ms-playwright" >> $GITHUB_ENV
          source $GITHUB_ENV

      - name: Install Project Dependencies and Playwright Browsers
        run: |
          ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
          pnpm dlx playwright-core install chromium

      - name: Verify Playwright Installation
        run: ls -la $PLAYWRIGHT_BROWSERS_PATH/chromium-*/chrome-linux/

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
        with:
          static_site_generator: gatsby

      # 캐시 활성화 필요시 사용
      # - name: Restore cache
      #   uses: actions/cache@v4
      #   with:
      #     path: |
      #       public
      #       .cache
      #     key: ${{ runner.os }}-gatsby-build-v2-${{ hashFiles('**/package-lock.json', '**/yarn.lock', 'gatsby-config.js') }}
      #     restore-keys: |
      #       ${{ runner.os }}-gatsby-build-

      - name: Build with Gatsby
        env:
          PREFIX_PATHS: "true"
        run: ${{ steps.detect-package-manager.outputs.manager }} run build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
