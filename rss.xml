<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[RSS Feed of leekh8's Blog]]></title><description><![CDATA[Hello :)]]></description><link>https://leekh8.github.io</link><generator>GatsbyJS</generator><lastBuildDate>Mon, 01 Jul 2024 12:06:33 GMT</lastBuildDate><item><title><![CDATA[🌟 MDGGU의 동작 원리 및 구현 방식]]></title><description><![CDATA[🌟 MDGGU의 동작 원리 및 구현 방식 🧩 MDGGU…]]></description><link>https://leekh8.github.io/5.3.1-프로그램-동작-구현/</link><guid isPermaLink="false">https://leekh8.github.io/5.3.1-프로그램-동작-구현/</guid><pubDate>Mon, 24 Jun 2024 00:00:00 GMT</pubDate><content:encoded>&lt;h2&gt;🌟 MDGGU의 동작 원리 및 구현 방식&lt;/h2&gt;
&lt;h3&gt;🧩 MDGGU 구성 요소&lt;/h3&gt;
&lt;p&gt;프론트엔드: 사용자와 직접 상호작용하는 부분
백엔드: 데이터 처리 및 비즈니스 로직을 담당하는 부분
데이터베이스: 데이터를 저장하고 관리하는 부분&lt;/p&gt;
&lt;h4&gt;🌐 프론트엔드&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;주요 기술&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;React.js: 사용자 인터페이스(UI)를 구성하는 라이브러리&lt;/li&gt;
&lt;li&gt;Axios: HTTP 클라이언트 라이브러리로, 백엔드와 통신할 때 사용&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;동작 원리&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;사용자 요청: 사용자가 브라우저에서 버튼을 클릭하거나 입력 폼을 제출하면 프론트엔드에서 이벤트가 발생&lt;/li&gt;
&lt;li&gt;API 호출: 이벤트 핸들러가 Axios를 사용해 백엔드 API로 HTTP 요청을 보냄&lt;/li&gt;
&lt;li&gt;응답 처리: 백엔드로부터 받은 응답 데이터를 화면에 렌더링하여 사용자에게 표시&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;🔙 백엔드&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;주요 기술&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Spring Boot: Java 기반의 백엔드 프레임워크&lt;/li&gt;
&lt;li&gt;Spring Security: 인증 및 인가를 위한 보안 프레임워크&lt;/li&gt;
&lt;li&gt;JPA (Java Persistence API): 데이터베이스와 상호작용하기 위한 표준 API&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;동작 원리&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;클라이언트 요청 처리: 프론트엔드에서 보낸 요청을 컨트롤러가 받음&lt;/li&gt;
&lt;li&gt;비즈니스 로직 실행: 서비스 계층에서 비즈니스 로직을 처리&lt;/li&gt;
&lt;li&gt;데이터베이스 연동: 리포지토리 계층을 통해 데이터베이스와 상호작용&lt;/li&gt;
&lt;li&gt;응답 반환: 처리된 결과를 JSON 형태로 프론트엔드에 반환&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;🗄️ 데이터베이스&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;주요 기술&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;PostgreSQL: 객체 관계형 데이터베이스 시스템&lt;/li&gt;
&lt;li&gt;MongoDB: 유연한 문서 저장을 위한 NoSQL 데이터베이스, 동적인 콘텐츠 관리에 적합&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;-&lt;strong&gt;동작 원리&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;데이터 저장: 엔티티 객체를 데이터베이스 테이블에 매핑하여 저장&lt;/li&gt;
&lt;li&gt;데이터 조회: 쿼리를 통해 필요한 데이터를 조회하고 객체로 변환하여 반환&lt;/li&gt;
&lt;li&gt;데이터 업데이트: 변경된 엔티티 객체를 데이터베이스에 반영&lt;/li&gt;
&lt;li&gt;데이터 삭제: 특정 엔티티 객체를 데이터베이스에서 삭제&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;🌟 프로그램의 전체 동작 흐름&lt;/h3&gt;
&lt;h4&gt;동작 구현 방식 (Mermaid 다이어그램)&lt;/h4&gt;
&lt;p&gt;&lt;svg aria-roledescription=&quot;flowchart-v2&quot; role=&quot;graphics-document document&quot; viewBox=&quot;-8 -8 381.625 583&quot; style=&quot;max-width: 381.625px;&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; id=&quot;mermaid-0&quot;&gt;&lt;style&gt;#mermaid-0{font-family:arial,sans-serif;font-size:16px;fill:#333;}#mermaid-0 .error-icon{fill:#552222;}#mermaid-0 .error-text{fill:#552222;stroke:#552222;}#mermaid-0 .edge-thickness-normal{stroke-width:2px;}#mermaid-0 .edge-thickness-thick{stroke-width:3.5px;}#mermaid-0 .edge-pattern-solid{stroke-dasharray:0;}#mermaid-0 .edge-pattern-dashed{stroke-dasharray:3;}#mermaid-0 .edge-pattern-dotted{stroke-dasharray:2;}#mermaid-0 .marker{fill:#333333;stroke:#333333;}#mermaid-0 .marker.cross{stroke:#333333;}#mermaid-0 svg{font-family:arial,sans-serif;font-size:16px;}#mermaid-0 .label{font-family:arial,sans-serif;color:#333;}#mermaid-0 .cluster-label text{fill:#333;}#mermaid-0 .cluster-label span,#mermaid-0 p{color:#333;}#mermaid-0 .label text,#mermaid-0 span,#mermaid-0 p{fill:#333;color:#333;}#mermaid-0 .node rect,#mermaid-0 .node circle,#mermaid-0 .node ellipse,#mermaid-0 .node polygon,#mermaid-0 .node path{fill:#ECECFF;stroke:#9370DB;stroke-width:1px;}#mermaid-0 .flowchart-label text{text-anchor:middle;}#mermaid-0 .node .katex path{fill:#000;stroke:#000;stroke-width:1px;}#mermaid-0 .node .label{text-align:center;}#mermaid-0 .node.clickable{cursor:pointer;}#mermaid-0 .arrowheadPath{fill:#333333;}#mermaid-0 .edgePath .path{stroke:#333333;stroke-width:2.0px;}#mermaid-0 .flowchart-link{stroke:#333333;fill:none;}#mermaid-0 .edgeLabel{background-color:#e8e8e8;text-align:center;}#mermaid-0 .edgeLabel rect{opacity:0.5;background-color:#e8e8e8;fill:#e8e8e8;}#mermaid-0 .labelBkg{background-color:rgba(232, 232, 232, 0.5);}#mermaid-0 .cluster rect{fill:#ffffde;stroke:#aaaa33;stroke-width:1px;}#mermaid-0 .cluster text{fill:#333;}#mermaid-0 .cluster span,#mermaid-0 p{color:#333;}#mermaid-0 div.mermaidTooltip{position:absolute;text-align:center;max-width:200px;padding:2px;font-family:arial,sans-serif;font-size:12px;background:hsl(80, 100%, 96.2745098039%);border:1px solid #aaaa33;border-radius:2px;pointer-events:none;z-index:100;}#mermaid-0 .flowchartTitleText{text-anchor:middle;font-size:18px;fill:#333;}#mermaid-0 :root{--mermaid-font-family:arial,sans-serif;}&lt;/style&gt;&lt;g&gt;&lt;marker orient=&quot;auto&quot; markerHeight=&quot;12&quot; markerWidth=&quot;12&quot; markerUnits=&quot;userSpaceOnUse&quot; refY=&quot;5&quot; refX=&quot;6&quot; viewBox=&quot;0 0 10 10&quot; class=&quot;marker flowchart&quot; id=&quot;mermaid-0_flowchart-pointEnd&quot;&gt;&lt;path style=&quot;stroke-width: 1; stroke-dasharray: 1, 0;&quot; class=&quot;arrowMarkerPath&quot; d=&quot;M 0 0 L 10 5 L 0 10 z&quot;&gt;&lt;/path&gt;&lt;/marker&gt;&lt;marker orient=&quot;auto&quot; markerHeight=&quot;12&quot; markerWidth=&quot;12&quot; markerUnits=&quot;userSpaceOnUse&quot; refY=&quot;5&quot; refX=&quot;4.5&quot; viewBox=&quot;0 0 10 10&quot; class=&quot;marker flowchart&quot; id=&quot;mermaid-0_flowchart-pointStart&quot;&gt;&lt;path style=&quot;stroke-width: 1; stroke-dasharray: 1, 0;&quot; class=&quot;arrowMarkerPath&quot; d=&quot;M 0 5 L 10 10 L 10 0 z&quot;&gt;&lt;/path&gt;&lt;/marker&gt;&lt;marker orient=&quot;auto&quot; markerHeight=&quot;11&quot; markerWidth=&quot;11&quot; markerUnits=&quot;userSpaceOnUse&quot; refY=&quot;5&quot; refX=&quot;11&quot; viewBox=&quot;0 0 10 10&quot; class=&quot;marker flowchart&quot; id=&quot;mermaid-0_flowchart-circleEnd&quot;&gt;&lt;circle style=&quot;stroke-width: 1; stroke-dasharray: 1, 0;&quot; class=&quot;arrowMarkerPath&quot; r=&quot;5&quot; cy=&quot;5&quot; cx=&quot;5&quot;&gt;&lt;/circle&gt;&lt;/marker&gt;&lt;marker orient=&quot;auto&quot; markerHeight=&quot;11&quot; markerWidth=&quot;11&quot; markerUnits=&quot;userSpaceOnUse&quot; refY=&quot;5&quot; refX=&quot;-1&quot; viewBox=&quot;0 0 10 10&quot; class=&quot;marker flowchart&quot; id=&quot;mermaid-0_flowchart-circleStart&quot;&gt;&lt;circle style=&quot;stroke-width: 1; stroke-dasharray: 1, 0;&quot; class=&quot;arrowMarkerPath&quot; r=&quot;5&quot; cy=&quot;5&quot; cx=&quot;5&quot;&gt;&lt;/circle&gt;&lt;/marker&gt;&lt;marker orient=&quot;auto&quot; markerHeight=&quot;11&quot; markerWidth=&quot;11&quot; markerUnits=&quot;userSpaceOnUse&quot; refY=&quot;5.2&quot; refX=&quot;12&quot; viewBox=&quot;0 0 11 11&quot; class=&quot;marker cross flowchart&quot; id=&quot;mermaid-0_flowchart-crossEnd&quot;&gt;&lt;path style=&quot;stroke-width: 2; stroke-dasharray: 1, 0;&quot; class=&quot;arrowMarkerPath&quot; d=&quot;M 1,1 l 9,9 M 10,1 l -9,9&quot;&gt;&lt;/path&gt;&lt;/marker&gt;&lt;marker orient=&quot;auto&quot; markerHeight=&quot;11&quot; markerWidth=&quot;11&quot; markerUnits=&quot;userSpaceOnUse&quot; refY=&quot;5.2&quot; refX=&quot;-1&quot; viewBox=&quot;0 0 11 11&quot; class=&quot;marker cross flowchart&quot; id=&quot;mermaid-0_flowchart-crossStart&quot;&gt;&lt;path style=&quot;stroke-width: 2; stroke-dasharray: 1, 0;&quot; class=&quot;arrowMarkerPath&quot; d=&quot;M 1,1 l 9,9 M 10,1 l -9,9&quot;&gt;&lt;/path&gt;&lt;/marker&gt;&lt;g class=&quot;root&quot;&gt;&lt;g class=&quot;clusters&quot;&gt;&lt;/g&gt;&lt;g class=&quot;edgePaths&quot;&gt;&lt;path marker-end=&quot;url(#mermaid-0_flowchart-pointEnd)&quot; style=&quot;fill:none;&quot; class=&quot;edge-thickness-normal edge-pattern-solid flowchart-link LS-A LE-B&quot; id=&quot;L-A-B-0&quot; d=&quot;M175.57,66L172.741,74.417C169.912,82.833,164.253,99.667,163.971,115.663C163.69,131.659,168.786,146.818,171.334,154.397L173.882,161.976&quot;&gt;&lt;/path&gt;&lt;path marker-end=&quot;url(#mermaid-0_flowchart-pointEnd)&quot; style=&quot;fill:none;&quot; class=&quot;edge-thickness-normal edge-pattern-solid flowchart-link LS-B LE-C&quot; id=&quot;L-B-C-0&quot; d=&quot;M169.596,233L165.243,241.417C160.889,249.833,152.183,266.667,151.777,282.715C151.371,298.764,159.266,314.028,163.214,321.66L167.161,329.292&quot;&gt;&lt;/path&gt;&lt;path marker-end=&quot;url(#mermaid-0_flowchart-pointEnd)&quot; style=&quot;fill:none;&quot; class=&quot;edge-thickness-normal edge-pattern-solid flowchart-link LS-C LE-D&quot; id=&quot;L-C-D-0&quot; d=&quot;M158.172,383.642L139.094,394.785C120.016,405.928,81.859,428.214,66.344,446.973C50.828,465.733,57.953,480.966,61.515,488.583L65.078,496.199&quot;&gt;&lt;/path&gt;&lt;path marker-end=&quot;url(#mermaid-0_flowchart-pointEnd)&quot; style=&quot;fill:none;&quot; class=&quot;edge-thickness-normal edge-pattern-solid flowchart-link LS-C LE-E&quot; id=&quot;L-C-E-0&quot; d=&quot;M212.294,400L218.831,408.417C225.368,416.833,238.442,433.667,248.541,449.7C258.64,465.733,265.765,480.966,269.328,488.583L272.89,496.199&quot;&gt;&lt;/path&gt;&lt;path marker-end=&quot;url(#mermaid-0_flowchart-pointEnd)&quot; style=&quot;fill:none;&quot; class=&quot;edge-thickness-normal edge-pattern-solid flowchart-link LS-D LE-C&quot; id=&quot;L-D-C-0&quot; d=&quot;M98.193,501L102.129,492.583C106.066,484.167,113.939,467.333,123.871,451.198C133.803,435.062,145.793,419.624,151.788,411.905L157.783,404.186&quot;&gt;&lt;/path&gt;&lt;path marker-end=&quot;url(#mermaid-0_flowchart-pointEnd)&quot; style=&quot;fill:none;&quot; class=&quot;edge-thickness-normal edge-pattern-solid flowchart-link LS-E LE-C&quot; id=&quot;L-E-C-0&quot; d=&quot;M306.005,501L309.942,492.583C313.878,484.167,321.752,467.333,307.373,448.219C292.994,429.105,256.364,407.71,238.048,397.012L219.733,386.315&quot;&gt;&lt;/path&gt;&lt;path marker-end=&quot;url(#mermaid-0_flowchart-pointEnd)&quot; style=&quot;fill:none;&quot; class=&quot;edge-thickness-normal edge-pattern-solid flowchart-link LS-C LE-B&quot; id=&quot;L-C-B-0&quot; d=&quot;M203.732,334L208.085,325.583C212.439,317.167,221.145,300.333,221.551,284.285C221.957,268.236,214.062,252.972,210.114,245.34L206.167,237.708&quot;&gt;&lt;/path&gt;&lt;path marker-end=&quot;url(#mermaid-0_flowchart-pointEnd)&quot; style=&quot;fill:none;&quot; class=&quot;edge-thickness-normal edge-pattern-solid flowchart-link LS-B LE-A&quot; id=&quot;L-B-A-0&quot; d=&quot;M197.758,167L200.587,158.583C203.417,150.167,209.075,133.333,209.357,117.337C209.638,101.341,204.542,86.182,201.995,78.603L199.447,71.024&quot;&gt;&lt;/path&gt;&lt;/g&gt;&lt;g class=&quot;edgeLabels&quot;&gt;&lt;g transform=&quot;translate(158.59375, 116.5)&quot; class=&quot;edgeLabel&quot;&gt;&lt;g transform=&quot;translate(-18.0703125, -25.5)&quot; class=&quot;label&quot;&gt;&lt;foreignObject style=&quot;width: 36.1406px; height: 51px;&quot; height=&quot;51&quot; width=&quot;36.140625&quot;&gt;&lt;div style=&quot;display: table-cell; white-space: nowrap; max-width: 200px;&quot; class=&quot;labelBkg&quot; xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;
    &lt;span class=&quot;nodeLabel&quot;&gt;&lt;p&gt;요청 📩&lt;/p&gt;&lt;/span&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;/g&gt;&lt;/g&gt;&lt;g transform=&quot;translate(143.4765625, 283.5)&quot; class=&quot;edgeLabel&quot;&gt;&lt;g transform=&quot;translate(-33.1875, -25.5)&quot; class=&quot;label&quot;&gt;&lt;foreignObject style=&quot;width: 66.375px; height: 51px;&quot; height=&quot;51&quot; width=&quot;66.375&quot;&gt;&lt;div style=&quot;display: table-cell; white-space: nowrap; max-width: 200px;&quot; class=&quot;labelBkg&quot; xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;
    &lt;span class=&quot;nodeLabel&quot;&gt;&lt;p&gt;API 요청 🔄&lt;/p&gt;&lt;/span&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;/g&gt;&lt;/g&gt;&lt;g transform=&quot;translate(43.703125, 450.5)&quot; class=&quot;edgeLabel&quot;&gt;&lt;g transform=&quot;translate(-29.0546875, -25.5)&quot; class=&quot;label&quot;&gt;&lt;foreignObject style=&quot;width: 58.1094px; height: 51px;&quot; height=&quot;51&quot; width=&quot;58.109375&quot;&gt;&lt;div style=&quot;display: table-cell; white-space: nowrap; max-width: 200px;&quot; class=&quot;labelBkg&quot; xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;
    &lt;span class=&quot;nodeLabel&quot;&gt;&lt;p&gt;데이터 요청 🗄️&lt;/p&gt;&lt;/span&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;/g&gt;&lt;/g&gt;&lt;g transform=&quot;translate(251.515625, 450.5)&quot; class=&quot;edgeLabel&quot;&gt;&lt;g transform=&quot;translate(-29.0546875, -25.5)&quot; class=&quot;label&quot;&gt;&lt;foreignObject style=&quot;width: 58.1094px; height: 51px;&quot; height=&quot;51&quot; width=&quot;58.109375&quot;&gt;&lt;div style=&quot;display: table-cell; white-space: nowrap; max-width: 200px;&quot; class=&quot;labelBkg&quot; xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;
    &lt;span class=&quot;nodeLabel&quot;&gt;&lt;p&gt;데이터 요청 🗄️&lt;/p&gt;&lt;/span&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;/g&gt;&lt;/g&gt;&lt;g transform=&quot;translate(121.8125, 450.5)&quot; class=&quot;edgeLabel&quot;&gt;&lt;g transform=&quot;translate(-29.0546875, -25.5)&quot; class=&quot;label&quot;&gt;&lt;foreignObject style=&quot;width: 58.1094px; height: 51px;&quot; height=&quot;51&quot; width=&quot;58.109375&quot;&gt;&lt;div style=&quot;display: table-cell; white-space: nowrap; max-width: 200px;&quot; class=&quot;labelBkg&quot; xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;
    &lt;span class=&quot;nodeLabel&quot;&gt;&lt;p&gt;데이터 응답 📤&lt;/p&gt;&lt;/span&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;/g&gt;&lt;/g&gt;&lt;g transform=&quot;translate(329.625, 450.5)&quot; class=&quot;edgeLabel&quot;&gt;&lt;g transform=&quot;translate(-29.0546875, -25.5)&quot; class=&quot;label&quot;&gt;&lt;foreignObject style=&quot;width: 58.1094px; height: 51px;&quot; height=&quot;51&quot; width=&quot;58.109375&quot;&gt;&lt;div style=&quot;display: table-cell; white-space: nowrap; max-width: 200px;&quot; class=&quot;labelBkg&quot; xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;
    &lt;span class=&quot;nodeLabel&quot;&gt;&lt;p&gt;데이터 응답 📤&lt;/p&gt;&lt;/span&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;/g&gt;&lt;/g&gt;&lt;g transform=&quot;translate(229.8515625, 283.5)&quot; class=&quot;edgeLabel&quot;&gt;&lt;g transform=&quot;translate(-33.1875, -25.5)&quot; class=&quot;label&quot;&gt;&lt;foreignObject style=&quot;width: 66.375px; height: 51px;&quot; height=&quot;51&quot; width=&quot;66.375&quot;&gt;&lt;div style=&quot;display: table-cell; white-space: nowrap; max-width: 200px;&quot; class=&quot;labelBkg&quot; xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;
    &lt;span class=&quot;nodeLabel&quot;&gt;&lt;p&gt;API 응답 📬&lt;/p&gt;&lt;/span&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;/g&gt;&lt;/g&gt;&lt;g transform=&quot;translate(214.734375, 116.5)&quot; class=&quot;edgeLabel&quot;&gt;&lt;g transform=&quot;translate(-18.0703125, -25.5)&quot; class=&quot;label&quot;&gt;&lt;foreignObject style=&quot;width: 36.1406px; height: 51px;&quot; height=&quot;51&quot; width=&quot;36.140625&quot;&gt;&lt;div style=&quot;display: table-cell; white-space: nowrap; max-width: 200px;&quot; class=&quot;labelBkg&quot; xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;
    &lt;span class=&quot;nodeLabel&quot;&gt;&lt;p&gt;응답 📡&lt;/p&gt;&lt;/span&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;g class=&quot;nodes&quot;&gt;&lt;g transform=&quot;translate(186.6640625, 33)&quot; data-id=&quot;A&quot; data-node=&quot;true&quot; id=&quot;flowchart-A-0&quot; class=&quot;node default default flowchart-label&quot;&gt;&lt;rect height=&quot;66&quot; width=&quot;56.984375&quot; y=&quot;-33&quot; x=&quot;-28.4921875&quot; ry=&quot;0&quot; rx=&quot;0&quot; style=&quot;&quot; class=&quot;basic label-container&quot;&gt;&lt;/rect&gt;&lt;g transform=&quot;translate(-20.9921875, -25.5)&quot; style=&quot;&quot; class=&quot;label&quot;&gt;&lt;rect&gt;&lt;/rect&gt;&lt;foreignObject style=&quot;width: 41.9844px; height: 51px;&quot; height=&quot;51&quot; width=&quot;41.984375&quot;&gt;&lt;div style=&quot;display: table-cell; white-space: nowrap; max-width: 200px;&quot; xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;
    &lt;span class=&quot;nodeLabel markdown-node-label&quot;&gt;&lt;p&gt;사용자 🧑‍💻&lt;/p&gt;&lt;/span&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;/g&gt;&lt;/g&gt;&lt;g transform=&quot;translate(186.6640625, 200)&quot; data-id=&quot;B&quot; data-node=&quot;true&quot; id=&quot;flowchart-B-1&quot; class=&quot;node default default flowchart-label&quot;&gt;&lt;rect height=&quot;66&quot; width=&quot;68.671875&quot; y=&quot;-33&quot; x=&quot;-34.3359375&quot; ry=&quot;0&quot; rx=&quot;0&quot; style=&quot;&quot; class=&quot;basic label-container&quot;&gt;&lt;/rect&gt;&lt;g transform=&quot;translate(-26.8359375, -25.5)&quot; style=&quot;&quot; class=&quot;label&quot;&gt;&lt;rect&gt;&lt;/rect&gt;&lt;foreignObject style=&quot;width: 53.6719px; height: 51px;&quot; height=&quot;51&quot; width=&quot;53.671875&quot;&gt;&lt;div style=&quot;display: table-cell; white-space: nowrap; max-width: 200px;&quot; xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;
    &lt;span class=&quot;nodeLabel markdown-node-label&quot;&gt;&lt;p&gt;프론트엔드 🌐&lt;/p&gt;&lt;/span&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;/g&gt;&lt;/g&gt;&lt;g transform=&quot;translate(186.6640625, 367)&quot; data-id=&quot;C&quot; data-node=&quot;true&quot; id=&quot;flowchart-C-3&quot; class=&quot;node default default flowchart-label&quot;&gt;&lt;rect height=&quot;66&quot; width=&quot;56.984375&quot; y=&quot;-33&quot; x=&quot;-28.4921875&quot; ry=&quot;0&quot; rx=&quot;0&quot; style=&quot;&quot; class=&quot;basic label-container&quot;&gt;&lt;/rect&gt;&lt;g transform=&quot;translate(-20.9921875, -25.5)&quot; style=&quot;&quot; class=&quot;label&quot;&gt;&lt;rect&gt;&lt;/rect&gt;&lt;foreignObject style=&quot;width: 41.9844px; height: 51px;&quot; height=&quot;51&quot; width=&quot;41.984375&quot;&gt;&lt;div style=&quot;display: table-cell; white-space: nowrap; max-width: 200px;&quot; xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;
    &lt;span class=&quot;nodeLabel markdown-node-label&quot;&gt;&lt;p&gt;백엔드 🛠️&lt;/p&gt;&lt;/span&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;/g&gt;&lt;/g&gt;&lt;g transform=&quot;translate(82.7578125, 534)&quot; data-id=&quot;D&quot; data-node=&quot;true&quot; id=&quot;flowchart-D-5&quot; class=&quot;node default default flowchart-label&quot;&gt;&lt;rect height=&quot;66&quot; width=&quot;165.515625&quot; y=&quot;-33&quot; x=&quot;-82.7578125&quot; ry=&quot;0&quot; rx=&quot;0&quot; style=&quot;&quot; class=&quot;basic label-container&quot;&gt;&lt;/rect&gt;&lt;g transform=&quot;translate(-75.2578125, -25.5)&quot; style=&quot;&quot; class=&quot;label&quot;&gt;&lt;rect&gt;&lt;/rect&gt;&lt;foreignObject style=&quot;width: 150.516px; height: 51px;&quot; height=&quot;51&quot; width=&quot;150.515625&quot;&gt;&lt;div style=&quot;display: table-cell; white-space: nowrap; max-width: 200px;&quot; xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;
    &lt;span class=&quot;nodeLabel markdown-node-label&quot;&gt;&lt;p&gt;PostgreSQL 데이터베이스 🐘&lt;/p&gt;&lt;/span&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;/g&gt;&lt;/g&gt;&lt;g transform=&quot;translate(290.5703125, 534)&quot; data-id=&quot;E&quot; data-node=&quot;true&quot; id=&quot;flowchart-E-7&quot; class=&quot;node default default flowchart-label&quot;&gt;&lt;rect height=&quot;66&quot; width=&quot;150.109375&quot; y=&quot;-33&quot; x=&quot;-75.0546875&quot; ry=&quot;0&quot; rx=&quot;0&quot; style=&quot;&quot; class=&quot;basic label-container&quot;&gt;&lt;/rect&gt;&lt;g transform=&quot;translate(-67.5546875, -25.5)&quot; style=&quot;&quot; class=&quot;label&quot;&gt;&lt;rect&gt;&lt;/rect&gt;&lt;foreignObject style=&quot;width: 135.109px; height: 51px;&quot; height=&quot;51&quot; width=&quot;135.109375&quot;&gt;&lt;div style=&quot;display: table-cell; white-space: nowrap; max-width: 200px;&quot; xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;
    &lt;span class=&quot;nodeLabel markdown-node-label&quot;&gt;&lt;p&gt;MongoDB 데이터베이스 🍃&lt;/p&gt;&lt;/span&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;🌐 다이어그램 요소 설명&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;사용자 (A)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;역할: 웹 애플리케이션을 사용하는 최종 사용자&lt;/li&gt;
&lt;li&gt;행동: 버튼 클릭, 폼 제출 등 다양한 인터랙션을 통해 애플리케이션과 상호작용&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;프론트엔드 (B)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;역할: 사용자가 보는 웹 페이지 또는 사용자 인터페이스(UI)&lt;/li&gt;
&lt;li&gt;기술: React.js, Axios 등&lt;/li&gt;
&lt;li&gt;행동: 사용자의 요청을 받아 API 요청을 백엔드로 전송&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;백엔드 (C)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;역할: 비즈니스 로직을 처리하고 데이터베이스와 상호작용하는 서버 측 애플리케이션&lt;/li&gt;
&lt;li&gt;기술: Spring Boot, Spring Security 등&lt;/li&gt;
&lt;li&gt;행동: 프론트엔드로부터 API 요청을 받아 처리하고, 데이터베이스에 필요한 요청을 보낸 후 결과를 프론트엔드에 반환&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PostgreSQL 데이터베이스 (D)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;역할: 관계형 데이터를 저장하고 관리하는 데이터베이스 시스템&lt;/li&gt;
&lt;li&gt;기술: PostgreSQL&lt;/li&gt;
&lt;li&gt;행동: 백엔드에서 오는 데이터 요청을 처리하고, 필요한 데이터를 반환&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&quot;5&quot;&gt;
&lt;li&gt;MongoDB 데이터베이스 (E)&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;역할: 유연한 문서 저장을 위한 NoSQL 데이터베이스로, 동적인 콘텐츠 관리에 적합&lt;/li&gt;
&lt;li&gt;기술: MongoDB&lt;/li&gt;
&lt;li&gt;행동: 백엔드에서 오는 데이터 요청을 처리하고, 필요한 데이터를 반환&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;📝 동작 순서&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;사용자 요청: 사용자가 웹 애플리케이션에서 특정 동작을 수행하면 프론트엔드에서 이벤트가 발생&lt;/li&gt;
&lt;li&gt;API 요청: 프론트엔드가 백엔드로 API 요청을 보냄&lt;/li&gt;
&lt;li&gt;요청 처리 (백엔드): 백엔드는 요청을 받아 비즈니스 로직을 처리한 후, 필요 시 데이터베이스에 요청을 보냄&lt;/li&gt;
&lt;li&gt;데이터베이스 요청:
&lt;ul&gt;
&lt;li&gt;PostgreSQL: 관계형 데이터베이스에 대한 쿼리를 수행&lt;/li&gt;
&lt;li&gt;MongoDB: 문서 기반 데이터베이스에 대한 쿼리를 수행&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;데이터베이스 응답: 데이터베이스는 요청된 데이터를 백엔드로 반환&lt;/li&gt;
&lt;li&gt;API 응답: 백엔드는 처리된 결과를 프론트엔드에 반환&lt;/li&gt;
&lt;li&gt;UI 업데이트: 프론트엔드는 받은 데이터를 바탕으로 사용자 인터페이스를 업데이트&lt;/li&gt;
&lt;/ol&gt;</content:encoded></item><item><title><![CDATA[🚀 Gatsby 블로그 검색 엔진 배포]]></title><description><![CDATA[Code N Solve 📘: Gatsby 블로그 배포 Netlify를 이용해 배포하는 것은 편하지만 직접 해보는 것이 더 재미있겠다고 느껴졌다. Gatsby를 이용한 웹사이트의 배포 과정과 검색 엔진 최적화(SEO…]]></description><link>https://leekh8.github.io/Expose-Blog/</link><guid isPermaLink="false">https://leekh8.github.io/Expose-Blog/</guid><pubDate>Thu, 25 Apr 2024 00:00:00 GMT</pubDate><content:encoded>&lt;h2&gt;Code N Solve 📘: Gatsby 블로그 배포&lt;/h2&gt;
&lt;p&gt;Netlify를 이용해 배포하는 것은 편하지만 직접 해보는 것이 더 재미있겠다고 느껴졌다.&lt;sup id=&quot;fnref-1&quot;&gt;&lt;a href=&quot;#fn-1&quot; class=&quot;footnote-ref&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;Gatsby를 이용한 웹사이트의 배포 과정과 검색 엔진 최적화(SEO) 설정에 대해 정리해보자.&lt;/p&gt;
&lt;h2&gt;검색 엔진 최적화 (SEO) 설정&lt;/h2&gt;
&lt;h3&gt;검색 엔진 최적화 (SEO)란? 🤔&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;SEO는 웹사이트가 검색 엔진에서 보다 잘 노출되도록 최적화하는 작업이다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;아래는 Gatsby 블로그에서 중요한 SEO 설정들이다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;메타 태그 추가&lt;/strong&gt;: 페이지 내용을 검색 엔진에 설명해주는 메타 태그를 추가한다.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SEO 플러그인 설치&lt;/strong&gt;: &lt;code class=&quot;language-text&quot;&gt;gatsby-plugin-react-helmet&lt;/code&gt; 플러그인을 사용하여 각 페이지의 &lt;code class=&quot;language-text&quot;&gt;&amp;lt;head&gt;&lt;/code&gt; 태그 내에서 SEO 관련 설정을 관리한다.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;메타 데이터 관리&lt;/strong&gt;: GraphQL을 사용하여 페이지에 필요한 데이터를 추출하고, 페이지별로 적절히 배치한다.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;sitemap 생성&lt;/strong&gt;: &lt;code class=&quot;language-text&quot;&gt;gatsby-plugin-sitemap&lt;/code&gt; 플러그인을 사용하여 사이트 맵을 자동으로 생성하여 검색 엔진이 사이트를 더 쉽게 크롤링할 수 있게 한다.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;정적 파일 최적화&lt;/strong&gt;: &lt;code class=&quot;language-text&quot;&gt;gatsby-image&lt;/code&gt; 플러그인을 사용하여 이미지 파일을 최적화하여 로딩 시간을 단축한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;검색 엔진&lt;/h2&gt;
&lt;h3&gt;1. Google Search Console&lt;sup id=&quot;fnref-2&quot;&gt;&lt;a href=&quot;#fn-2&quot; class=&quot;footnote-ref&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;도메인 (Domain property)&lt;/strong&gt;: 모든 서브도메인과 프로토콜, 포트를 포함한 데이터를 볼 수 있다. DNS 레코드를 수정하여 소유권 인증이 필요하다.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;URL 접두어 (URL-prefix property)&lt;/strong&gt;: 특정 URL 형식에 대해서만 데이터를 볼 수 있다. 다양한 방법(HTML 태그, Google Analytics 등)으로 소유권 인증이 가능하다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;2. Naver Webmaster Tools&lt;sup id=&quot;fnref-3&quot;&gt;&lt;a href=&quot;#fn-3&quot; class=&quot;footnote-ref&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;간단하게 HTML 파일을 업로드하여 소유권 인증을 진행할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;GitHub Pages 배포 시 고려사항&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;GitHub Pages의 도메인은 GitHub에 의해 관리되기 때문에 DNS 설정이 불가능하다.&lt;/li&gt;
&lt;li&gt;따라서 URL 방식의 소유권 인증이 더 적합할 것 같다.&lt;/li&gt;
&lt;li&gt;root directory에 HTML 파일은 build가 안되어서 &lt;code class=&quot;language-text&quot;&gt;static&lt;/code&gt; directory에 넣으면 build가 가능하다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Gatsby의 SEO 친화적 구조&lt;sup id=&quot;fnref-4&quot;&gt;&lt;a href=&quot;#fn-4&quot; class=&quot;footnote-ref&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Gatsby는 React 기반의 정적 사이트 생성기로, 빠른 로딩 시간과 SEO 친화적 구조를 갖고 있다.&lt;sup id=&quot;fnref-5&quot;&gt;&lt;a href=&quot;#fn-5&quot; class=&quot;footnote-ref&quot;&gt;5&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;속도와 성능&lt;/strong&gt;: Gatsby는 빌드 시간에 필요한 리소스를 최적화하고, 사전 렌더링 및 코드 분할을 자동으로 처리한다.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;플러그인 시스템&lt;/strong&gt;: Gatsby는 다양한 플러그인을 제공하여 SEO, 이미지 최적화, 사이트맵 생성 등을 간편하게 할 수 있다.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;데이터 관리&lt;/strong&gt;: Gatsby는 GraphQL을 사용하여 데이터를 관리하고 페이지에 필요한 데이터만을 추출할 수 있도록 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;footnotes&quot;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&quot;fn-1&quot;&gt;&lt;a href=&quot;https://junia3.github.io/blog/search&quot;&gt;https://junia3.github.io/blog/search&lt;/a&gt;&lt;a href=&quot;#fnref-1&quot; class=&quot;footnote-backref&quot;&gt;↩&lt;/a&gt;&lt;/li&gt;
&lt;li id=&quot;fn-2&quot;&gt;&lt;a href=&quot;https://search.google.com/search-console/about&quot;&gt;https://search.google.com/search-console/about&lt;/a&gt;&lt;a href=&quot;#fnref-2&quot; class=&quot;footnote-backref&quot;&gt;↩&lt;/a&gt;&lt;/li&gt;
&lt;li id=&quot;fn-3&quot;&gt;&lt;a href=&quot;https://searchadvisor.naver.com/console/board&quot;&gt;https://searchadvisor.naver.com/console/board&lt;/a&gt;&lt;a href=&quot;#fnref-3&quot; class=&quot;footnote-backref&quot;&gt;↩&lt;/a&gt;&lt;/li&gt;
&lt;li id=&quot;fn-4&quot;&gt;&lt;a href=&quot;https://v3.gatsbyjs.com/docs/how-to/adding-common-features/seo/&quot;&gt;https://v3.gatsbyjs.com/docs/how-to/adding-common-features/seo/&lt;/a&gt;&lt;a href=&quot;#fnref-4&quot; class=&quot;footnote-backref&quot;&gt;↩&lt;/a&gt;&lt;/li&gt;
&lt;li id=&quot;fn-5&quot;&gt;&lt;a href=&quot;https://salt.agency/blog/gatsby-seo-the-good-good-and-good-step-by-step-guide/&quot;&gt;https://salt.agency/blog/gatsby-seo-the-good-good-and-good-step-by-step-guide/&lt;/a&gt;&lt;a href=&quot;#fnref-5&quot; class=&quot;footnote-backref&quot;&gt;↩&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content:encoded></item><item><title><![CDATA[🚀 GitHub Actions를 이용한 블로그 자동 배포 문제 해결 과정]]></title><description><![CDATA[Code N Solve 📘 GitHub Actions를 이용한 문제 해결과 배포 자동화 🚀 GitHub Actions…]]></description><link>https://leekh8.github.io/Github-actions-trouble-shooting/</link><guid isPermaLink="false">https://leekh8.github.io/Github-actions-trouble-shooting/</guid><pubDate>Mon, 01 Apr 2024 00:00:00 GMT</pubDate><content:encoded>&lt;h2&gt;Code N Solve 📘&lt;/h2&gt;
&lt;h2&gt;GitHub Actions&lt;sup id=&quot;fnref-1&quot;&gt;&lt;a href=&quot;#fn-1&quot; class=&quot;footnote-ref&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;를 이용한 문제 해결과 배포 자동화 🚀&lt;/h2&gt;
&lt;p&gt;GitHub Actions는 개발 프로세스를 자동화하여 빌드, 테스트, 배포 등을 수행할 수 있는 강력한 도구이다.
하지만 올바른 설정 없이는 원하는 대로 작동하지 않을 수 있다.
Deployment 자동화를 위해 GitHub Actions의 Workflow를 설정할 때 겪은 몇 가지 문제와 이를 해결하는 방법에 대해 이야기해보자.&lt;/p&gt;
&lt;h2&gt;Blog Deployment 자동화&lt;/h2&gt;
&lt;p&gt;현재 블로그 테마는 &lt;a href=&quot;https://github.com/devHudi/gatsby-starter-hoodie?tab=readme-ov-file&quot;&gt;gatsby-starter-hoodie&lt;/a&gt;를 활용하고 있다.&lt;/p&gt;
&lt;p&gt;여기에 CI (Continuous Integration)&lt;sup id=&quot;fnref-2&quot;&gt;&lt;a href=&quot;#fn-2&quot; class=&quot;footnote-ref&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; 코드는 이미 작성되어 있고, Netlify를 통한 배포 방식이 설명되어 있지만 Github Pages를 이용해 배포를 하고 있었다.
매번 &lt;code class=&quot;language-text&quot;&gt;$ npm run deploy-gh&lt;/code&gt; 명령을 하기 귀찮아져 자동화 Workflow를 만들기로 결심한다.&lt;/p&gt;
&lt;h2&gt;GitHub Actions Workflow 설정&lt;/h2&gt;
&lt;h3&gt;1. GitHub Pages 자동 배포&lt;sup id=&quot;fnref-3&quot;&gt;&lt;a href=&quot;#fn-3&quot; class=&quot;footnote-ref&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;sup id=&quot;fnref-4&quot;&gt;&lt;a href=&quot;#fn-4&quot; class=&quot;footnote-ref&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;시도:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;GitHub Pages에 자동으로 배포하기.&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;접기/펼치기&lt;/summary&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;```yaml
name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: &quot;14&quot;

      - name: Install Dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          deploy_key: ${{ secrets.ACCESS_TOKEN }}
          publish_dir: ./public
          publish_branch: gh-pages
```&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;문제:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Workflow 설정 파일(deploy.yml)을 작성했지만 Node.js 버전이 낮아 Gatsby 빌드 중 오류가 발생했다.&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;접기/펼치기&lt;/summary&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;```bash
error Gatsby requires Node.js 18.0.0 or higher (you have v14.21.3).
Upgrade Node to the latest stable release: https://gatsby.dev/upgrading-node-js
npm ERR! code ELIFECYCLE
```&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;2. Node.js 버전 충돌&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;문제:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Workflow 설정에서는 14.21.3 버전이 지정되어 있었는데 Node.js의 버전 18.0.0 이상을 빌요로 하여 Gatsby 빌드 중 오류가 발생했다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;시도:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Node.js 버전(node-version)을 20.3.1로 업데이트하였다.&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;접기/펼치기&lt;/summary&gt;
```yaml
name: Build and Deploy
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;    on:
    push:
    branches: - main

    jobs:
    deploy:
    runs-on: ubuntu-latest

          steps:
            - name: Checkout Repository
              uses: actions/checkout@v2

            - name: Setup Node.js
              uses: actions/setup-node@v2
              with:
                node-version: 20.3.1

            - name: Install Dependencies
              run: npm install

            - name: Build
              run: npm run build

            - name: Deploy to GitHub Pages
              uses: peaceiris/actions-gh-pages@v3
              with:
                deploy_key: ${{ secrets.ACCESS_TOKEN }}
                publish_dir: ./public
                publish_branch: gh-pages
    ```&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;해결:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Node.js 버전을 20.3.1로 업데이트하여 문제를 해결했지만 이후에 패키지 의존성 충돌 문제가 발생했다.
&lt;details&gt;
&lt;summary&gt;접기/펼치기&lt;/summary&gt;
  ```bash
  Run npm install
  npm ERR! code ERESOLVE
  npm ERR! ERESOLVE could not resolve
  npm ERR!
  npm ERR! While resolving: gatsby-remark-katex@3.10.0
  npm ERR! Found: gatsby@5.13.3
  npm ERR! node_modules/gatsby
  npm ERR!   gatsby@&quot;^5.11.0&quot; from the root project
  npm ERR!   peer gatsby@&quot;^5.0.0-next&quot; from babel-plugin-remove-graphql-queries@5.13.1
  npm ERR!   node_modules/babel-plugin-remove-graphql-queries
  npm ERR!     babel-plugin-remove-graphql-queries@&quot;^5.13.1&quot; from gatsby@5.13.3
  npm ERR!     babel-plugin-remove-graphql-queries@&quot;^5.13.1&quot; from gatsby-plugin-typescript@5.13.1
  npm ERR!     node_modules/gatsby-plugin-typescript
  npm ERR!       gatsby-plugin-typescript@&quot;^5.13.1&quot; from gatsby@5.13.3
  npm ERR!   17 more (gatsby-plugin-catch-links, gatsby-plugin-feed, ...)
  npm ERR!
  npm ERR! Could not resolve dependency:
  npm ERR! peer gatsby@&quot;^2.0.0&quot; from gatsby-remark-katex@3.10.0
  npm ERR! node_modules/gatsby-remark-katex
  npm ERR!   gatsby-remark-katex@&quot;^3.5.0&quot; from the root project
  npm ERR!
  npm ERR! Conflicting peer dependency: gatsby@2.32.13
  npm ERR! node_modules/gatsby
  npm ERR!   peer gatsby@&quot;^2.0.0&quot; from gatsby-remark-katex@3.10.0
  npm ERR!   node_modules/gatsby-remark-katex
  npm ERR!     gatsby-remark-katex@&quot;^3.5.0&quot; from the root project
  npm ERR!
  npm ERR! Fix the upstream dependency conflict, or retry
  npm ERR! this command with --force or --legacy-peer-deps
  npm ERR! to accept an incorrect (and potentially broken) dependency resolution.
  ```
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;h3&gt;3. Node.js 패키지 의존성 충돌 및 GitHub 토큰 시크릿 등록&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;시도:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;패키지 의존성 충돌 문제를 --legacy-peer-deps 명령으로 해결하고 GitHub 토큰을 시크릿에 등록을 하기로 했다.&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;접기/펼치기&lt;/summary&gt;
  ```yaml
    name: Build and Deploy
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;on:
push:
branches: - main

jobs:
deploy:
runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20.3.1

      - name: Install Dependencies
        run: npm install --legacy-peer-deps

      - name: Build
        run: npm run build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          deploy_key: ${{ secrets.ACCESS_TOKEN }}
          publish_dir: ./public
          publish_branch: gh-pages

```&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;해결:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;프로필 - Settings - Developer Settings - Personal access tokens에서 생성한 토큰을 복사하여 저장소 secrets에 등록했다.&lt;/p&gt;
  &lt;details&gt;
  &lt;summary&gt;접기/펼치기&lt;/summary&gt;
    ```bash
    Run peaceiris/actions-gh-pages@v3
      with:
        deploy_key: ***
        publish_dir: ./public
        publish_branch: gh-pages
        allow_empty_commit: false
        keep_files: false
        force_orphan: false
        enable_jekyll: false
        disable_nojekyll: false
        exclude_assets: .github
    [INFO] Usage https://github.com/peaceiris/actions-gh-pages#readme
    Dump inputs
      [INFO] DeployKey: true
      [INFO] PublishBranch: gh-pages
      [INFO] PublishDir: ./public
      [INFO] DestinationDir:
      [INFO] ExternalRepository:
      [INFO] AllowEmptyCommit: false
      [INFO] KeepFiles: false
      [INFO] ForceOrphan: false
      [INFO] UserName:
      [INFO] UserEmail:
      [INFO] CommitMessage:
      [INFO] FullCommitMessage:
      [INFO] TagName:
      [INFO] TagMessage:
      [INFO] EnableJekyll (DisableNoJekyll): false
      [INFO] CNAME:
      [INFO] ExcludeAssets .github
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;Setup auth token
[INFO] setup SSH deploy key
/usr/bin/chmod 700 /home/runner/.ssh
[INFO] wrote /home/runner/.ssh/known_hosts
/usr/bin/chmod 600 /home/runner/.ssh/known_hosts
[INFO] wrote /home/runner/.ssh/github
/usr/bin/chmod 600 /home/runner/.ssh/github
[INFO] wrote /home/runner/.ssh/config
/usr/bin/chmod 600 /home/runner/.ssh/config
/usr/bin/ssh-add /home/runner/.ssh/github
Error loading key &quot;/home/runner/.ssh/github&quot;: error in libcrypto
Error: Action failed with &quot;The process &apos;/usr/bin/ssh-add&apos; failed with exit code 1&quot;

````&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;4. User authenticate using git config&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;시도:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;token을 secret에 등록하였지만 token 인증에 실패하여 git config 명령을 통해 사용자를 등록하였다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;문제:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;SSH 인증은 Windows 환경에서는 적용되지 않는 것 같다.&lt;/p&gt;
  &lt;details&gt;
  &lt;summary&gt;접기/펼치기&lt;/summary&gt;
    ```yaml
    name: Build and Deploy
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20.3.1

      - name: Install Dependencies
        run: npm install --legacy-peer-deps

      - name: Build
        run: npm run build

      - name: Deploy to GitHub Pages
        env:
          ACCESS_TOKEN: ${{ secrets.PAT }}
        run: |
          git config --global user.name &quot;USER NAME&quot;
          git config --global user.email &quot;USER@EMAIL.COM&quot;
          npx gh-pages -d ./public -b gh-pages -u $ACCESS_TOKEN
```

&amp;lt;/details&gt;
- 문제
  - git config 명령을 통해 사용자를 등록했지만 오류가 발생했다.
  &amp;lt;details&gt;
  &amp;lt;summary&gt;접기/펼치기&amp;lt;/summary&gt;
```bash
Run git config --global user.name &quot;USER NAME&quot;
  git config --global user.name &quot;USER NAME&quot;
  git config --global user.email &quot;USER@EMAIL.COM&quot;
  npx gh-pages -d ./public -b gh-pages -u $ACCESS_TOKEN
  shell: /usr/bin/bash -e {0}
  env:
    ACCESS_TOKEN: ***
Could not parse name and email from user option &quot;***&quot; (format should be &quot;Your Name &amp;lt;email@example.com&gt;&quot;)
Error: Process completed with exit code 1.
```&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;5. User authenticate using token&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;시도:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;token으로 사용자 인증을 시도하였다.&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;접기/펼치기&lt;/summary&gt;
  ```yaml
    name: Build and Deploy
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;on:
push:
branches: - main

jobs:
deploy:
runs-on: ubuntu-latest

  steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 20.3.1

    - name: Install Dependencies
      run: npm install --legacy-peer-deps

    - name: Build
      run: npm run build

    - name: Deploy to GitHub Pages
      env:
        ACCESS_TOKEN: ${{ secrets.PAT }}
      run: |
        npx gh-pages -d ./public -b gh-pages -u $ACCESS_TOKEN

```&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;문제:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;같은 문제가 반복되었다.&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;접기/펼치기&lt;/summary&gt;
  ```bash
  Run npx gh-pages -d ./public -b gh-pages -u $ACCESS_TOKEN
    npx gh-pages -d ./public -b gh-pages -u $ACCESS_TOKEN
    shell: /usr/bin/bash -e {0}
    env:
      ACCESS_TOKEN: ***
  Could not parse name and email from user option &quot;***&quot; (format should be &quot;Your Name &lt;email@example.com&gt;&quot;)
  Error: Process completed with exit code 1.
  ```
&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;6. User authenticate using token 2&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;시도:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;토큰을 이용해 사용자 인증을 시도할때 옵션을 -u에서 -t로 변경해 토큰을 인식하도록 해주었다.&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;접기/펼치기&lt;/summary&gt;
  ```yaml
    name: Build and Deploy
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;on:
push:
branches: - main

jobs:
deploy:
runs-on: ubuntu-latest

  steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 20.3.1

    - name: Install Dependencies
      run: npm install --legacy-peer-deps

    - name: Build
      run: npm run build

    - name: Deploy to GitHub Pages
      env:
        ACCESS_TOKEN: ${{ secrets.PAT }}
      run: |
        npx gh-pages -d ./public -b gh-pages -t $ACCESS_TOKEN
```&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;문제:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;git config 명령을 이용해 사용자의 신원을 설정하라는 오류(Author identity unknown)로 변경되었다.&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;접기/펼치기&lt;/summary&gt;
    ```bash
    Run npx gh-pages -d ./public -b gh-pages -t $ACCESS_TOKEN
      npx gh-pages -d ./public -b gh-pages -t $ACCESS_TOKEN
      shell: /usr/bin/bash -e {0}
      env:
        ACCESS_TOKEN: ***
    Author identity unknown
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;*** Please tell me who you are.

Run

  git config --global user.email &quot;you@example.com&quot;
  git config --global user.name &quot;Your Name&quot;

to set your account&apos;s default identity.
Omit --global to set the identity only in this repository.

fatal: unable to auto-detect email address (got &apos;runner@fv-az1535-535.(none)&apos;)

Error: Process completed with exit code 1.
```&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;h3&gt;7. User authenticate using git config 2&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;시도:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;git config 명령을 사용해 사용자 정보를 인식할 수 있도록 해주었다.&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;접기/펼치기&lt;/summary&gt;
  ```yaml
    name: Build and Deploy
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;on:
push:
branches: - main

jobs:
deploy:
runs-on: ubuntu-latest

  steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 20.3.1

    - name: Install Dependencies
      run: npm install --legacy-peer-deps

    - name: Build
      run: npm run build

    - name: Deploy to GitHub Pages
      env:
        ACCESS_TOKEN: ${{ secrets.PAT }}
      run: |
        git config --global user.email &quot;USER@EMAIL.COM&quot;
        git config --global user.name &quot;USER NAME&quot;
        npx gh-pages -d ./public -b gh-pages -t $ACCESS_TOKEN

```&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;문제:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Author identity unknown 오류는 배포 시 Git 사용자 정보를 설정해두지 않아 발생하는 오류로 Git이 커밋을 생성할 때 사용자의 정보를 필요로 하기 때문에 발생하는데 문제가 반복되었다.&lt;/p&gt;
  &lt;details&gt;
  &lt;summary&gt;접기/펼치기&lt;/summary&gt;
    ```bash
    Run git config --global user.email &quot;USER@EMAIL.COM&quot;
      git config --global user.email &quot;USER@EMAIL.COM&quot;
      git config --global user.name &quot;USER NAME&quot;
      npx gh-pages -d ./public -b gh-pages -t $ACCESS_TOKEN
      shell: /usr/bin/bash -e {0}
      env:
        ACCESS_TOKEN: ***
    fatal: could not read Username for &apos;https://github.com&apos;: No such device or address
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;Error: Process completed with exit code 1.

```&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;8. User authenticate using git config 3&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;시도:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;HTTPS URL에 토큰을 추가하여 사용자를 인식할 수 있게 시도하였다.&lt;sup id=&quot;fnref-5&quot;&gt;&lt;a href=&quot;#fn-5&quot; class=&quot;footnote-ref&quot;&gt;5&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;접기/펼치기&lt;/summary&gt;
  ```yaml
      name: Build and Deploy
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;  on:
    push:
      branches:
        - main

  jobs:
    deploy:
      runs-on: ubuntu-latest

      steps:
        - name: Checkout Repository
          uses: actions/checkout@v2

        - name: Setup Node.js
          uses: actions/setup-node@v2
          with:
            node-version: 20.3.1

        - name: Install Dependencies
          run: npm install --legacy-peer-deps

        - name: Build
          run: npm run build

        - name: Deploy to GitHub Pages
          env:
            ACCESS_TOKEN: ${{ secrets.PAT }}
          run: |
            git config --global url.https://${{ secrets.PAT }}@github.com/.insteadOf https://github.com/
            npx gh-pages -d ./public -b gh-pages -t $ACCESS_TOKEN

```&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;문제:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;여전히 Author identity unknown 상태이다.&lt;/p&gt;
  &lt;details&gt;
  &lt;summary&gt;접기/펼치기&lt;/summary&gt;
    ```bash
    Run git config --global url.https://***@github.com/.insteadOf https://github.com/
      git config --global url.https://***@github.com/.insteadOf https://github.com/
      npx gh-pages -d ./public -b gh-pages -t $ACCESS_TOKEN
      shell: /usr/bin/bash -e {0}
      env:
        ACCESS_TOKEN: ***
    Author identity unknown
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;\*\*\* Please tell me who you are.

Run

git config --global user.email &quot;you@example.com&quot;
git config --global user.name &quot;Your Name&quot;

to set your account&apos;s default identity.
Omit --global to set the identity only in this repository.

fatal: empty ident name (for &amp;lt;runner@fv-az1118-461.jboa14ee0bjuvjv5ua334yvpdd.cx.internal.cloudapp.net&gt;) not allowed

Error: Process completed with exit code 1.

```&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;9. User authenticate using git config 4&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;시도:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;다시 git config 명령을 사용해 사용자 정보를 추가하였다.&lt;/p&gt;
  &lt;details&gt;
  &lt;summary&gt;접기/펼치기&lt;/summary&gt;
    ```yaml
    name: Build and Deploy
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20.3.1

      - name: Install Dependencies
        run: npm install --legacy-peer-deps

      - name: Build
        run: npm run build

      - name: Deploy to GitHub Pages
        env:
          ACCESS_TOKEN: ${{ secrets.PAT }}
        run: |
          git config --global user.name &quot;USER NAME&quot;
          git config --global user.email &quot;USER@EMAIL.COM&quot;
          npx gh-pages -d ./public -b gh-pages -t $ACCESS_TOKEN
```

&amp;lt;/details&gt;

- 문제:
  - 이전에 나타났던 문제가 계속 나타나 눈물이 날 뻔 했다.

  &amp;lt;details&gt;
  &amp;lt;summary&gt;접기/펼치기&amp;lt;/summary&gt;
    ```bash
    Run git config --global user.name &quot;USER NAME&quot;
      git config --global user.name &quot;USER NAME&quot;
      git config --global user.email &quot;USER@EMAIL.COM&quot;
      npx gh-pages -d ./public -b gh-pages -t $ACCESS_TOKEN
      shell: /usr/bin/bash -e {0}
      env:
        ACCESS_TOKEN: ***
    fatal: could not read Username for &apos;https://github.com&apos;: No such device or address
    ```&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;10. User authenticate using git config 5&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;시도:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;혹시 토큰이 인식이 안되고 있나 의심스러워서 순서를 변경하여 다시 시도하였다.&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;접기/펼치기&lt;/summary&gt;
  ```yaml
    name: Build and Deploy
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;on:
push:
branches: - main

jobs:
deploy:
runs-on: ubuntu-latest
env:
PAT: ${{ secrets.PAT }}

  steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 20.3.1

    - name: Install Dependencies
      run: npm install --legacy-peer-deps

    - name: Build
      run: npm run build

    - name: Deploy to GitHub Pages
      run: |
        git config --global url.https://$PAT@github.com/.insteadOf https://github.com/
        npx gh-pages -d ./public -b gh-pages -t $PAT

```&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;문제:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;달라지지 않은 오류 메시지가 나와 눈물이 났다.&lt;/p&gt;
  &lt;details&gt;
  &lt;summary&gt;접기/펼치기&lt;/summary&gt;
    ```bash
    Run git config --global user.name &quot;USER NAME&quot;
      git config --global user.name &quot;USER NAME&quot;
      git config --global user.email &quot;USER@EMAIL.COM&quot;
      npx gh-pages -d ./public -b gh-pages -t $ACCESS_TOKEN
      shell: /usr/bin/bash -e {0}
      env:
        ACCESS_TOKEN: ***
    fatal: could not read Username for &apos;https://github.com&apos;: No such device or address
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;Error: Process completed with exit code 1.
```&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;11. User authenticate using git config 6&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;시도:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;git config 명령을 빌드 과정에서 미리 해주면 될까 싶어 시도하였다.&lt;/p&gt;
  &lt;details&gt;
  &lt;summary&gt;접기/펼치기&lt;/summary&gt;
    ```yaml
    name: Build and Deploy
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;on:
push:
branches: - main

jobs:
deploy:
runs-on: ubuntu-latest
env:
PAT: ${{ secrets.PAT }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20.3.1

      - name: Install Dependencies
        run: npm install --legacy-peer-deps

      - name: Build
        run: |
          git config --global url.https://$PAT@github.com/.insteadOf https://github.com/
          npm run build

      - name: Deploy to GitHub Pages
        run: |
          npx gh-pages -d ./public -b gh-pages -t $PAT

```&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;해결:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;git config 명령을 deploy 과정 이전에 진행해야 한다는 결론을 얻었다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;문제:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;여전히 Author identity unknow 문제가 있다.&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;접기/펼치기&lt;/summary&gt;
  ```bash
    Run npx gh-pages -d ./public -b gh-pages -t $PAT
      npx gh-pages -d ./public -b gh-pages -t $PAT
      shell: /usr/bin/bash -e {0}
      env:
        PAT: ***
    Author identity unknown
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;\*\*\* Please tell me who you are.

Run

git config --global user.email &quot;you@example.com&quot;
git config --global user.name &quot;Your Name&quot;

to set your account&apos;s default identity.
Omit --global to set the identity only in this repository.

fatal: unable to auto-detect email address (got &apos;runner@fv-az1385-401.(none)&apos;)

Error: Process completed with exit code 1.

```&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;h3&gt;12. User authenticate using git config 7&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;시도:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;git config 명령을 통한 사용자 정보 설정 단계를 별도로 만들어 주었다.&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;접기/펼치기&lt;/summary&gt;
  ```yaml
    name: Build and Deploy
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;on:
push:
branches: - main

jobs:
deploy:
runs-on: ubuntu-latest
env:
PAT: ${{ secrets.PAT }}

  steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 20.3.1

    - name: Install Dependencies
      run: npm install --legacy-peer-deps

    - name: Build
      run: npm run build

    - name: Set Git user information
      run: git config --global url.https://$PAT@github.com/.insteadOf https://github.com/

    - name: Deploy to GitHub Pages
      run: |
        npx gh-pages -d ./public -b gh-pages -t $PAT

```&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;문제:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;다시 눈물이 났다.&lt;/p&gt;
  &lt;details&gt;
  &lt;summary&gt;접기/펼치기&lt;/summary&gt;
    ```bash
      Run npx gh-pages -d ./public -b gh-pages -t $PAT
        npx gh-pages -d ./public -b gh-pages -t $PAT
        shell: /usr/bin/bash -e {0}
        env:
          PAT: ***
      Author identity unknown
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;  \*\*\* Please tell me who you are.

  Run

  git config --global user.email &quot;you@example.com&quot;
  git config --global user.name &quot;Your Name&quot;

  to set your account&apos;s default identity.
  Omit --global to set the identity only in this repository.

  fatal: empty ident name (for &amp;lt;runner@fv-az914-157.2e4pmxhwlzfuhnev11cd0y0noa.phxx.internal.cloudapp.net&gt;) not allowed

  Error: Process completed with exit code 1.

```&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;13. User authenticate using git config 8&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;시도:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;사용자 정보 단계에서 가진 모든 정보를 알려주었다.&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;접기/펼치기&lt;/summary&gt;
  ```yaml
    name: Build and Deploy
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;on:
push:
branches: - main

jobs:
deploy:
runs-on: ubuntu-latest
env:
PAT: ${{ secrets.PAT }}

  steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 20.3.1

    - name: Install Dependencies
      run: npm install --legacy-peer-deps

    - name: Build
      run: npm run build

    - name: Set Git user information
      run: |
        git config --global user.email &quot;amysun125@gmail.com&quot;
        git config --global user.name &quot;leekh8&quot;

    - name: Deploy to GitHub Pages
      run: |
        git config --global url.https://$PAT@github.com/.insteadOf https://github.com/
        npx gh-pages -d ./public -b gh-pages -t $PAT

```&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;ul&gt;
&lt;li&gt;성공!&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;  Published&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;footnotes&quot;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&quot;fn-1&quot;&gt;&lt;a href=&quot;https://docs.github.com/ko/enterprise-server@3.10/actions/learn-github-actions&quot;&gt;https://docs.github.com/ko/enterprise-server@3.10/actions/learn-github-actions&lt;/a&gt;&lt;a href=&quot;#fnref-1&quot; class=&quot;footnote-backref&quot;&gt;↩&lt;/a&gt;&lt;/li&gt;
&lt;li id=&quot;fn-2&quot;&gt;&lt;a href=&quot;https://docs.github.com/ko/enterprise-server@3.10/actions/automating-builds-and-tests/about-continuous-integration&quot;&gt;https://docs.github.com/ko/enterprise-server@3.10/actions/automating-builds-and-tests/about-continuous-integration&lt;/a&gt;&lt;a href=&quot;#fnref-2&quot; class=&quot;footnote-backref&quot;&gt;↩&lt;/a&gt;&lt;/li&gt;
&lt;li id=&quot;fn-3&quot;&gt;&lt;a href=&quot;https://docs.github.com/ko/enterprise-server@3.10/actions/examples/using-scripts-to-test-your-code-on-a-runner&quot;&gt;https://docs.github.com/ko/enterprise-server@3.10/actions/examples/using-scripts-to-test-your-code-on-a-runner&lt;/a&gt;&lt;a href=&quot;#fnref-3&quot; class=&quot;footnote-backref&quot;&gt;↩&lt;/a&gt;&lt;/li&gt;
&lt;li id=&quot;fn-4&quot;&gt;&lt;a href=&quot;https://docs.github.com/ko/enterprise-server@3.10/actions/using-workflows/workflow-syntax-for-github-actions&quot;&gt;https://docs.github.com/ko/enterprise-server@3.10/actions/using-workflows/workflow-syntax-for-github-actions&lt;/a&gt;&lt;a href=&quot;#fnref-4&quot; class=&quot;footnote-backref&quot;&gt;↩&lt;/a&gt;&lt;/li&gt;
&lt;li id=&quot;fn-5&quot;&gt;&lt;a href=&quot;https://github.com/orgs/community/discussions/26580&quot;&gt;https://github.com/orgs/community/discussions/26580&lt;/a&gt;&lt;a href=&quot;#fnref-5&quot; class=&quot;footnote-backref&quot;&gt;↩&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content:encoded></item><item><title><![CDATA[📘React 기초 정리 3 ]]></title><description><![CDATA[React 기초 정리 📘 Props와 State: React 컴포넌트의 핵심 이해하기 🚀 React를 사용하여 멋진 웹 애플리케이션을 만들기 위해 반드시 알아야 할 두 가지 개념, Props와 State에 대해 자세히 알아보자. 📦 Props…]]></description><link>https://leekh8.github.io/React-3-Props-State/</link><guid isPermaLink="false">https://leekh8.github.io/React-3-Props-State/</guid><pubDate>Fri, 05 May 2023 00:00:00 GMT</pubDate><content:encoded>&lt;h2&gt;React 기초 정리 📘&lt;/h2&gt;
&lt;h2&gt;Props와 State: React 컴포넌트의 핵심 이해하기 🚀&lt;/h2&gt;
&lt;p&gt;React를 사용하여 멋진 웹 애플리케이션을 만들기 위해 반드시 알아야 할 두 가지 개념, Props와 State에 대해 자세히 알아보자.&lt;sup id=&quot;fnref-1&quot;&gt;&lt;a href=&quot;#fn-1&quot; class=&quot;footnote-ref&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;h3&gt;📦 Props란? 🤔&lt;/h3&gt;
&lt;p&gt;Props는 properties의 줄임말로, 컴포넌트 간에 데이터를 전달할 때 사용하는 입력값이다.
부모 컴포넌트로부터 자식 컴포넌트로 데이터를 넘겨줄 수 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;기본 사용법 🛠️&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;&lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// 컴포넌트 생성&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;Welcome&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token parameter&quot;&gt;props&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;Hello, &lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;props&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt; 🌟&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// 컴포넌트 사용&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;App&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Welcome&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Amy&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Welcome&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Andy&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Welcome&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Sapiens&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Props는 읽기 전용.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;컴포넌트 내에서 Props를 변경하려고 하면 안 된다. 🚫&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;&lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// 잘못된 예&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;Welcome&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token parameter&quot;&gt;props&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; greeting &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Sir &quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; props&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name &lt;span class=&quot;token comment&quot;&gt;// 이렇게 사용하세요!&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;Hello, &lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;greeting&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;🎨 JSX와 HTML의 차이점&lt;/h3&gt;
&lt;p&gt;JSX에서는 HTML과 다르게 작성되는 속성들이 있다.
예를 들어, class는 className으로, for는 htmlFor로 사용된다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CamelCase 사용 🐫
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;div tabIndex=&quot;0&quot;&gt;&amp;lt;/div&gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;data-와 aria- 속성은 그대로 사용 ✅
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;div aria-label=&quot;Close&quot; data-testid=&quot;close-button&quot;&gt;&amp;lt;/div&gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;💾 State란? 🤔&lt;/h3&gt;
&lt;p&gt;State는 컴포넌트 내부에서 관리되는 데이터이다.
사용자의 상호작용에 따라 동적으로 데이터를 변경할 수 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;기본 사용법 🛠️&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;&lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; useState &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;react&quot;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Counter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;count&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; setCount&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;useState&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;You clicked &lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;count&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt; times 🔥&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;token script language-javascript&quot;&gt;&lt;span class=&quot;token script-punctuation punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;setCount&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;count &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;Click me&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;State 값을 직접 변경하지 않고, 반드시 setState 함수(여기서는 setCount)를 사용해야 한다. 🔄&lt;sup id=&quot;fnref-2&quot;&gt;&lt;a href=&quot;#fn-2&quot; class=&quot;footnote-ref&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;이렇게 Props와 State를 이해하고 활용하면, React에서 더욱 동적이고 반응적인 웹 애플리케이션을 만들 수 있다! 🌈&lt;/p&gt;
&lt;h3&gt;State를 변경하는 두 가지 방법과 Object를 갖는 State를 만들 때 주의할 점 🛠️&lt;/h3&gt;
&lt;p&gt;React에서 State를 관리하는 방법은 매우 중요하다.
특히, State가 객체를 포함할 때는 더욱 주의해야 한다.
State를 변경하는 두 가지 방법과 객체를 포함하는 State를 만들 때 주의해야 할 점을 살펴보자.&lt;/p&gt;
&lt;h4&gt;State 변경 방법&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;setState 내에 변경할 값 넣기&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;&lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;count&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; setCount&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;useState&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;setCount&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;count &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;가장 기본적인 방법으로, 직접 변경할 값을 setState에 넣어준다.&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;setState에 함수 넣기&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;함수가 반환하는 값으로 State 변경&lt;/li&gt;
&lt;li&gt;현재 값을 기반으로 State를 변경하고자 하는 경우, 함수 넣기 방법을 권장&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;&lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;count&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; setCount&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;useState&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;setCount&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;current&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; current &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Object를 갖는 State 만들 때 주의할 점 🛠️&lt;/h4&gt;
&lt;p&gt;Object를 값으로 갖는 State도 가능하지만, React가 State의 변경을 감지하지 못하는 경우가 있다.
예를 들어, Object 내부의 속성만 변경되고 Object 자체는 변경되지 않았기 때문이다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;&lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;user&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; setUser&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;useState&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token literal-property property&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;sapiens&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token literal-property property&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;setUser&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;current&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  current&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;age &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;29&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; current
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;위와 같이 사용하면, React는 user Object의 변경을 감지하지 못한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;이를 해결하기 위해서는, 기존 Object의 내용을 새로운 Object에 담고 변경해야 한다.
즉, 새로운 Object를 생성하여 반환해야 React가 State의 변경을 감지할 수 있다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;&lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;user&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; setUser&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;useState&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token literal-property property&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;sapiens&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token literal-property property&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;setUser&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;current&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; newUser &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;current &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  newUser&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;age &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;29&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; newUser
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;이 방법을 사용하면, user의 age가 변경되었을 때 React가 이를 감지하고 UI를 업데이트할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;React에서 State를 효과적으로 관리하는 것은 애플리케이션의 성능과 유지 보수성에 큰 영향을 미친다.
특히, Object를 포함하는 State를 다룰 때는 불변성(Immutability)을 유지하는 것이 중요하다.
이를 통해 예측 가능한 State 관리와 성능 최적화를 달성할 수 있다. 🚀&lt;sup id=&quot;fnref-3&quot;&gt;&lt;a href=&quot;#fn-3&quot; class=&quot;footnote-ref&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&quot;fn-1&quot;&gt;&lt;a href=&quot;https://legacy.reactjs.org/docs/components-and-props.html&quot;&gt;https://legacy.reactjs.org/docs/components-and-props.html&lt;/a&gt;&lt;a href=&quot;#fnref-1&quot; class=&quot;footnote-backref&quot;&gt;↩&lt;/a&gt;&lt;/li&gt;
&lt;li id=&quot;fn-2&quot;&gt;&lt;a href=&quot;https://www.geeksforgeeks.org/reactjs-setstate/&quot;&gt;https://www.geeksforgeeks.org/reactjs-setstate/&lt;/a&gt;&lt;a href=&quot;#fnref-2&quot; class=&quot;footnote-backref&quot;&gt;↩&lt;/a&gt;&lt;/li&gt;
&lt;li id=&quot;fn-3&quot;&gt;&lt;a href=&quot;https://ko.legacy.reactjs.org/docs/state-and-lifecycle.html&quot;&gt;https://ko.legacy.reactjs.org/docs/state-and-lifecycle.html&lt;/a&gt;&lt;a href=&quot;#fnref-3&quot; class=&quot;footnote-backref&quot;&gt;↩&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content:encoded></item><item><title><![CDATA[📘React 기초 정리 2 ]]></title><description><![CDATA[React 기초 정리 📘 Props와 State: React 컴포넌트의 핵심 이해하기 🚀 React를 사용하여 멋진 웹 애플리케이션을 만들기 위해 반드시 알아야 할 두 가지 개념, Props와 State에 대해 자세히 알아보자. 📦 Props…]]></description><link>https://leekh8.github.io/React-2-Props-State/</link><guid isPermaLink="false">https://leekh8.github.io/React-2-Props-State/</guid><pubDate>Tue, 02 May 2023 00:00:00 GMT</pubDate><content:encoded>&lt;h2&gt;React 기초 정리 📘&lt;/h2&gt;
&lt;h2&gt;Props와 State: React 컴포넌트의 핵심 이해하기 🚀&lt;/h2&gt;
&lt;p&gt;React를 사용하여 멋진 웹 애플리케이션을 만들기 위해 반드시 알아야 할 두 가지 개념, Props와 State에 대해 자세히 알아보자.&lt;sup id=&quot;fnref-1&quot;&gt;&lt;a href=&quot;#fn-1&quot; class=&quot;footnote-ref&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;h3&gt;📦 Props란? 🤔&lt;/h3&gt;
&lt;p&gt;Props는 properties의 줄임말로, 컴포넌트 간에 데이터를 전달할 때 사용하는 입력값이다.
부모 컴포넌트로부터 자식 컴포넌트로 데이터를 넘겨줄 수 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;기본 사용법 🛠️&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;&lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// 컴포넌트 생성&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;Welcome&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token parameter&quot;&gt;props&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;Hello, &lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;props&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt; 🌟&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// 컴포넌트 사용&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;App&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Welcome&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Amy&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Welcome&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Andy&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Welcome&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Sapiens&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Props는 읽기 전용.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;컴포넌트 내에서 Props를 변경하려고 하면 안 된다. 🚫&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;&lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// 잘못된 예&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;Welcome&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token parameter&quot;&gt;props&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; greeting &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Sir &quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; props&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name &lt;span class=&quot;token comment&quot;&gt;// 이렇게 사용하세요!&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;Hello, &lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;greeting&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;🎨 JSX와 HTML의 차이점&lt;/h3&gt;
&lt;p&gt;JSX에서는 HTML과 다르게 작성되는 속성들이 있다.
예를 들어, class는 className으로, for는 htmlFor로 사용된다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CamelCase 사용 🐫
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;div tabIndex=&quot;0&quot;&gt;&amp;lt;/div&gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;data-와 aria- 속성은 그대로 사용 ✅
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;div aria-label=&quot;Close&quot; data-testid=&quot;close-button&quot;&gt;&amp;lt;/div&gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;💾 State란? 🤔&lt;/h3&gt;
&lt;p&gt;State는 컴포넌트 내부에서 관리되는 데이터이다.
사용자의 상호작용에 따라 동적으로 데이터를 변경할 수 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;기본 사용법 🛠️&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;&lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; useState &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;react&quot;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Counter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;count&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; setCount&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;useState&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;You clicked &lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;count&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt; times 🔥&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;token script language-javascript&quot;&gt;&lt;span class=&quot;token script-punctuation punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;setCount&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;count &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;Click me&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;State 값을 직접 변경하지 않고, 반드시 setState 함수(여기서는 setCount)를 사용해야 한다. 🔄&lt;sup id=&quot;fnref-2&quot;&gt;&lt;a href=&quot;#fn-2&quot; class=&quot;footnote-ref&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;이렇게 Props와 State를 이해하고 활용하면, React에서 더욱 동적이고 반응적인 웹 애플리케이션을 만들 수 있다! 🌈&lt;/p&gt;
&lt;h3&gt;State를 변경하는 두 가지 방법과 Object를 갖는 State를 만들 때 주의할 점 🛠️&lt;/h3&gt;
&lt;p&gt;React에서 State를 관리하는 방법은 매우 중요하다.
특히, State가 객체를 포함할 때는 더욱 주의해야 한다.
State를 변경하는 두 가지 방법과 객체를 포함하는 State를 만들 때 주의해야 할 점을 살펴보자.&lt;/p&gt;
&lt;h4&gt;State 변경 방법&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;setState 내에 변경할 값 넣기&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;&lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;count&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; setCount&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;useState&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;setCount&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;count &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;가장 기본적인 방법으로, 직접 변경할 값을 setState에 넣어준다.&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;setState에 함수 넣기&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;함수가 반환하는 값으로 State 변경&lt;/li&gt;
&lt;li&gt;현재 값을 기반으로 State를 변경하고자 하는 경우, 함수 넣기 방법을 권장&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;&lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;count&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; setCount&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;useState&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;setCount&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;current&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; current &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Object를 갖는 State 만들 때 주의할 점 🛠️&lt;/h4&gt;
&lt;p&gt;Object를 값으로 갖는 State도 가능하지만, React가 State의 변경을 감지하지 못하는 경우가 있다.
예를 들어, Object 내부의 속성만 변경되고 Object 자체는 변경되지 않았기 때문이다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;&lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;user&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; setUser&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;useState&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token literal-property property&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;sapiens&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token literal-property property&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;setUser&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;current&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  current&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;age &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;29&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; current
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;위와 같이 사용하면, React는 user Object의 변경을 감지하지 못한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;이를 해결하기 위해서는, 기존 Object의 내용을 새로운 Object에 담고 변경해야 한다.
즉, 새로운 Object를 생성하여 반환해야 React가 State의 변경을 감지할 수 있다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;&lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;user&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; setUser&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;useState&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token literal-property property&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;sapiens&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token literal-property property&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;setUser&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;current&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; newUser &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;current &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  newUser&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;age &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;29&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; newUser
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;이 방법을 사용하면, user의 age가 변경되었을 때 React가 이를 감지하고 UI를 업데이트할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;React에서 State를 효과적으로 관리하는 것은 애플리케이션의 성능과 유지 보수성에 큰 영향을 미친다.
특히, Object를 포함하는 State를 다룰 때는 불변성(Immutability)을 유지하는 것이 중요하다.
이를 통해 예측 가능한 State 관리와 성능 최적화를 달성할 수 있다. 🚀&lt;sup id=&quot;fnref-3&quot;&gt;&lt;a href=&quot;#fn-3&quot; class=&quot;footnote-ref&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&quot;fn-1&quot;&gt;&lt;a href=&quot;https://legacy.reactjs.org/docs/components-and-props.html&quot;&gt;https://legacy.reactjs.org/docs/components-and-props.html&lt;/a&gt;&lt;a href=&quot;#fnref-1&quot; class=&quot;footnote-backref&quot;&gt;↩&lt;/a&gt;&lt;/li&gt;
&lt;li id=&quot;fn-2&quot;&gt;&lt;a href=&quot;https://www.geeksforgeeks.org/reactjs-setstate/&quot;&gt;https://www.geeksforgeeks.org/reactjs-setstate/&lt;/a&gt;&lt;a href=&quot;#fnref-2&quot; class=&quot;footnote-backref&quot;&gt;↩&lt;/a&gt;&lt;/li&gt;
&lt;li id=&quot;fn-3&quot;&gt;&lt;a href=&quot;https://ko.legacy.reactjs.org/docs/state-and-lifecycle.html&quot;&gt;https://ko.legacy.reactjs.org/docs/state-and-lifecycle.html&lt;/a&gt;&lt;a href=&quot;#fnref-3&quot; class=&quot;footnote-backref&quot;&gt;↩&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content:encoded></item><item><title><![CDATA[📘React 기초 정리 ]]></title><description><![CDATA[React 기초 정리 📘 React는 웹 프론트엔드 개발에 혁신을 가져온 JavaScript 라이브러리.
사용자 인터페이스를 구축하기 위해 개발되었으며, 컴포넌트 기반의 개발을 가능하게 한다. React의 기본 개념과 왜 React…]]></description><link>https://leekh8.github.io/React-1-SPA-Component-State-CRA/</link><guid isPermaLink="false">https://leekh8.github.io/React-1-SPA-Component-State-CRA/</guid><pubDate>Mon, 01 May 2023 00:00:00 GMT</pubDate><content:encoded>&lt;h2&gt;React 기초 정리 📘&lt;/h2&gt;
&lt;p&gt;React는 웹 프론트엔드 개발에 혁신을 가져온 JavaScript 라이브러리.
사용자 인터페이스를 구축하기 위해 개발되었으며, 컴포넌트 기반의 개발을 가능하게 한다.&lt;/p&gt;
&lt;p&gt;React의 기본 개념과 왜 React를 배워야 하는지, React의 특징, JSX의 활용, SPA의 개념, JSX와 일반 JavaScript의 차이점, Component의 개념과 활용, Component의 데이터 관리 방법등에 대해 알아보자.&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;https://react.dev/&quot;&gt;React&lt;/a&gt;란? 🤔&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;정의: React는 사용자 인터페이스를 구축하기 위한 JavaScript 라이브러리. Facebook에서 개발하였고, 컴포넌트 기반의 개발을 지향한다.&lt;sup id=&quot;fnref-1&quot;&gt;&lt;a href=&quot;#fn-1&quot; class=&quot;footnote-ref&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;특징:
&lt;ul&gt;
&lt;li&gt;Component: 독립적인 단위로 쪼개어 구현되며, 레고 블럭처럼 여러 컴포넌트들을 조립하여 한 페이지를 완성한다.&lt;/li&gt;
&lt;li&gt;Virtual DOM: 가상의 DOM을 메모리에 저장하고, 실제 DOM과 동기화하는 프로그래밍 개념. 이를 통해 성능을 향상시킨다.&lt;/li&gt;
&lt;li&gt;JSX: JavaScript 내에서 HTML과 유사한 문법을 사용하여 UI를 표현한다. 이로 인해 개발자는 보다 직관적으로 UI를 구성할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;SPA (Single Page Application)와 전통적인 사이트 비교 🔄&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;전통적인 사이트: 페이지 변경이 필요할 때마다 서버에 요청하여 새로운 HTML을 받아오는 방식.
이 과정에서 페이지 전체를 새로 불러온다.&lt;/p&gt;
&lt;p&gt;&lt;svg aria-roledescription=&quot;sequence&quot; role=&quot;graphics-document document&quot; viewBox=&quot;-50 -10 450 347&quot; style=&quot;max-width: 450px;&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; id=&quot;mermaid-0&quot;&gt;&lt;g&gt;&lt;rect class=&quot;actor actor-bottom&quot; ry=&quot;3&quot; rx=&quot;3&quot; name=&quot;Server&quot; height=&quot;65&quot; width=&quot;150&quot; stroke=&quot;#666&quot; fill=&quot;#eaeaea&quot; y=&quot;261&quot; x=&quot;200&quot;&gt;&lt;/rect&gt;&lt;text style=&quot;text-anchor: middle; font-size: 16px; font-weight: 400; font-family: arial, sans-serif;&quot; class=&quot;actor&quot; alignment-baseline=&quot;central&quot; dominant-baseline=&quot;central&quot; y=&quot;293.5&quot; x=&quot;275&quot;&gt;&lt;tspan dy=&quot;0&quot; x=&quot;275&quot;&gt;Server&lt;/tspan&gt;&lt;/text&gt;&lt;/g&gt;&lt;g&gt;&lt;rect class=&quot;actor actor-bottom&quot; ry=&quot;3&quot; rx=&quot;3&quot; name=&quot;Client&quot; height=&quot;65&quot; width=&quot;150&quot; stroke=&quot;#666&quot; fill=&quot;#eaeaea&quot; y=&quot;261&quot; x=&quot;0&quot;&gt;&lt;/rect&gt;&lt;text style=&quot;text-anchor: middle; font-size: 16px; font-weight: 400; font-family: arial, sans-serif;&quot; class=&quot;actor&quot; alignment-baseline=&quot;central&quot; dominant-baseline=&quot;central&quot; y=&quot;293.5&quot; x=&quot;75&quot;&gt;&lt;tspan dy=&quot;0&quot; x=&quot;75&quot;&gt;Client&lt;/tspan&gt;&lt;/text&gt;&lt;/g&gt;&lt;g&gt;&lt;line stroke=&quot;#999&quot; stroke-width=&quot;0.5px&quot; class=&quot;200&quot; y2=&quot;261&quot; x2=&quot;275&quot; y1=&quot;5&quot; x1=&quot;275&quot; id=&quot;actor1&quot;&gt;&lt;/line&gt;&lt;g id=&quot;root-1&quot;&gt;&lt;rect class=&quot;actor actor-top&quot; ry=&quot;3&quot; rx=&quot;3&quot; name=&quot;Server&quot; height=&quot;65&quot; width=&quot;150&quot; stroke=&quot;#666&quot; fill=&quot;#eaeaea&quot; y=&quot;0&quot; x=&quot;200&quot;&gt;&lt;/rect&gt;&lt;text style=&quot;text-anchor: middle; font-size: 16px; font-weight: 400; font-family: arial, sans-serif;&quot; class=&quot;actor&quot; alignment-baseline=&quot;central&quot; dominant-baseline=&quot;central&quot; y=&quot;32.5&quot; x=&quot;275&quot;&gt;&lt;tspan dy=&quot;0&quot; x=&quot;275&quot;&gt;Server&lt;/tspan&gt;&lt;/text&gt;&lt;/g&gt;&lt;/g&gt;&lt;g&gt;&lt;line stroke=&quot;#999&quot; stroke-width=&quot;0.5px&quot; class=&quot;200&quot; y2=&quot;261&quot; x2=&quot;75&quot; y1=&quot;5&quot; x1=&quot;75&quot; id=&quot;actor0&quot;&gt;&lt;/line&gt;&lt;g id=&quot;root-0&quot;&gt;&lt;rect class=&quot;actor actor-top&quot; ry=&quot;3&quot; rx=&quot;3&quot; name=&quot;Client&quot; height=&quot;65&quot; width=&quot;150&quot; stroke=&quot;#666&quot; fill=&quot;#eaeaea&quot; y=&quot;0&quot; x=&quot;0&quot;&gt;&lt;/rect&gt;&lt;text style=&quot;text-anchor: middle; font-size: 16px; font-weight: 400; font-family: arial, sans-serif;&quot; class=&quot;actor&quot; alignment-baseline=&quot;central&quot; dominant-baseline=&quot;central&quot; y=&quot;32.5&quot; x=&quot;75&quot;&gt;&lt;tspan dy=&quot;0&quot; x=&quot;75&quot;&gt;Client&lt;/tspan&gt;&lt;/text&gt;&lt;/g&gt;&lt;/g&gt;&lt;style&gt;#mermaid-0{font-family:arial,sans-serif;font-size:16px;fill:#333;}#mermaid-0 .error-icon{fill:#552222;}#mermaid-0 .error-text{fill:#552222;stroke:#552222;}#mermaid-0 .edge-thickness-normal{stroke-width:2px;}#mermaid-0 .edge-thickness-thick{stroke-width:3.5px;}#mermaid-0 .edge-pattern-solid{stroke-dasharray:0;}#mermaid-0 .edge-pattern-dashed{stroke-dasharray:3;}#mermaid-0 .edge-pattern-dotted{stroke-dasharray:2;}#mermaid-0 .marker{fill:#333333;stroke:#333333;}#mermaid-0 .marker.cross{stroke:#333333;}#mermaid-0 svg{font-family:arial,sans-serif;font-size:16px;}#mermaid-0 .actor{stroke:hsl(259.6261682243, 59.7765363128%, 87.9019607843%);fill:#ECECFF;}#mermaid-0 text.actor&gt;tspan{fill:black;stroke:none;}#mermaid-0 .actor-line{stroke:grey;}#mermaid-0 .messageLine0{stroke-width:1.5;stroke-dasharray:none;stroke:#333;}#mermaid-0 .messageLine1{stroke-width:1.5;stroke-dasharray:2,2;stroke:#333;}#mermaid-0 #arrowhead path{fill:#333;stroke:#333;}#mermaid-0 .sequenceNumber{fill:white;}#mermaid-0 #sequencenumber{fill:#333;}#mermaid-0 #crosshead path{fill:#333;stroke:#333;}#mermaid-0 .messageText{fill:#333;stroke:none;}#mermaid-0 .labelBox{stroke:hsl(259.6261682243, 59.7765363128%, 87.9019607843%);fill:#ECECFF;}#mermaid-0 .labelText,#mermaid-0 .labelText&gt;tspan{fill:black;stroke:none;}#mermaid-0 .loopText,#mermaid-0 .loopText&gt;tspan{fill:black;stroke:none;}#mermaid-0 .loopLine{stroke-width:2px;stroke-dasharray:2,2;stroke:hsl(259.6261682243, 59.7765363128%, 87.9019607843%);fill:hsl(259.6261682243, 59.7765363128%, 87.9019607843%);}#mermaid-0 .note{stroke:#aaaa33;fill:#fff5ad;}#mermaid-0 .noteText,#mermaid-0 .noteText&gt;tspan{fill:black;stroke:none;}#mermaid-0 .activation0{fill:#f4f4f4;stroke:#666;}#mermaid-0 .activation1{fill:#f4f4f4;stroke:#666;}#mermaid-0 .activation2{fill:#f4f4f4;stroke:#666;}#mermaid-0 .actorPopupMenu{position:absolute;}#mermaid-0 .actorPopupMenuPanel{position:absolute;fill:#ECECFF;box-shadow:0px 8px 16px 0px rgba(0,0,0,0.2);filter:drop-shadow(3px 5px 2px rgb(0 0 0 / 0.4));}#mermaid-0 .actor-man line{stroke:hsl(259.6261682243, 59.7765363128%, 87.9019607843%);fill:#ECECFF;}#mermaid-0 .actor-man circle,#mermaid-0 line{stroke:hsl(259.6261682243, 59.7765363128%, 87.9019607843%);fill:#ECECFF;stroke-width:2px;}#mermaid-0 :root{--mermaid-font-family:arial,sans-serif;}&lt;/style&gt;&lt;g&gt;&lt;/g&gt;&lt;defs&gt;&lt;symbol height=&quot;24&quot; width=&quot;24&quot; id=&quot;computer&quot;&gt;&lt;path d=&quot;M2 2v13h20v-13h-20zm18 11h-16v-9h16v9zm-10.228 6l.466-1h3.524l.467 1h-4.457zm14.228 3h-24l2-6h2.104l-1.33 4h18.45l-1.297-4h2.073l2 6zm-5-10h-14v-7h14v7z&quot; transform=&quot;scale(.5)&quot;&gt;&lt;/path&gt;&lt;/symbol&gt;&lt;/defs&gt;&lt;defs&gt;&lt;symbol clip-rule=&quot;evenodd&quot; fill-rule=&quot;evenodd&quot; id=&quot;database&quot;&gt;&lt;path d=&quot;M12.258.001l.256.004.255.005.253.008.251.01.249.012.247.015.246.016.242.019.241.02.239.023.236.024.233.027.231.028.229.031.225.032.223.034.22.036.217.038.214.04.211.041.208.043.205.045.201.046.198.048.194.05.191.051.187.053.183.054.18.056.175.057.172.059.168.06.163.061.16.063.155.064.15.066.074.033.073.033.071.034.07.034.069.035.068.035.067.035.066.035.064.036.064.036.062.036.06.036.06.037.058.037.058.037.055.038.055.038.053.038.052.038.051.039.05.039.048.039.047.039.045.04.044.04.043.04.041.04.04.041.039.041.037.041.036.041.034.041.033.042.032.042.03.042.029.042.027.042.026.043.024.043.023.043.021.043.02.043.018.044.017.043.015.044.013.044.012.044.011.045.009.044.007.045.006.045.004.045.002.045.001.045v17l-.001.045-.002.045-.004.045-.006.045-.007.045-.009.044-.011.045-.012.044-.013.044-.015.044-.017.043-.018.044-.02.043-.021.043-.023.043-.024.043-.026.043-.027.042-.029.042-.03.042-.032.042-.033.042-.034.041-.036.041-.037.041-.039.041-.04.041-.041.04-.043.04-.044.04-.045.04-.047.039-.048.039-.05.039-.051.039-.052.038-.053.038-.055.038-.055.038-.058.037-.058.037-.06.037-.06.036-.062.036-.064.036-.064.036-.066.035-.067.035-.068.035-.069.035-.07.034-.071.034-.073.033-.074.033-.15.066-.155.064-.16.063-.163.061-.168.06-.172.059-.175.057-.18.056-.183.054-.187.053-.191.051-.194.05-.198.048-.201.046-.205.045-.208.043-.211.041-.214.04-.217.038-.22.036-.223.034-.225.032-.229.031-.231.028-.233.027-.236.024-.239.023-.241.02-.242.019-.246.016-.247.015-.249.012-.251.01-.253.008-.255.005-.256.004-.258.001-.258-.001-.256-.004-.255-.005-.253-.008-.251-.01-.249-.012-.247-.015-.245-.016-.243-.019-.241-.02-.238-.023-.236-.024-.234-.027-.231-.028-.228-.031-.226-.032-.223-.034-.22-.036-.217-.038-.214-.04-.211-.041-.208-.043-.204-.045-.201-.046-.198-.048-.195-.05-.19-.051-.187-.053-.184-.054-.179-.056-.176-.057-.172-.059-.167-.06-.164-.061-.159-.063-.155-.064-.151-.066-.074-.033-.072-.033-.072-.034-.07-.034-.069-.035-.068-.035-.067-.035-.066-.035-.064-.036-.063-.036-.062-.036-.061-.036-.06-.037-.058-.037-.057-.037-.056-.038-.055-.038-.053-.038-.052-.038-.051-.039-.049-.039-.049-.039-.046-.039-.046-.04-.044-.04-.043-.04-.041-.04-.04-.041-.039-.041-.037-.041-.036-.041-.034-.041-.033-.042-.032-.042-.03-.042-.029-.042-.027-.042-.026-.043-.024-.043-.023-.043-.021-.043-.02-.043-.018-.044-.017-.043-.015-.044-.013-.044-.012-.044-.011-.045-.009-.044-.007-.045-.006-.045-.004-.045-.002-.045-.001-.045v-17l.001-.045.002-.045.004-.045.006-.045.007-.045.009-.044.011-.045.012-.044.013-.044.015-.044.017-.043.018-.044.02-.043.021-.043.023-.043.024-.043.026-.043.027-.042.029-.042.03-.042.032-.042.033-.042.034-.041.036-.041.037-.041.039-.041.04-.041.041-.04.043-.04.044-.04.046-.04.046-.039.049-.039.049-.039.051-.039.052-.038.053-.038.055-.038.056-.038.057-.037.058-.037.06-.037.061-.036.062-.036.063-.036.064-.036.066-.035.067-.035.068-.035.069-.035.07-.034.072-.034.072-.033.074-.033.151-.066.155-.064.159-.063.164-.061.167-.06.172-.059.176-.057.179-.056.184-.054.187-.053.19-.051.195-.05.198-.048.201-.046.204-.045.208-.043.211-.041.214-.04.217-.038.22-.036.223-.034.226-.032.228-.031.231-.028.234-.027.236-.024.238-.023.241-.02.243-.019.245-.016.247-.015.249-.012.251-.01.253-.008.255-.005.256-.004.258-.001.258.001zm-9.258 20.499v.01l.001.021.003.021.004.022.005.021.006.022.007.022.009.023.01.022.011.023.012.023.013.023.015.023.016.024.017.023.018.024.019.024.021.024.022.025.023.024.024.025.052.049.056.05.061.051.066.051.07.051.075.051.079.052.084.052.088.052.092.052.097.052.102.051.105.052.11.052.114.051.119.051.123.051.127.05.131.05.135.05.139.048.144.049.147.047.152.047.155.047.16.045.163.045.167.043.171.043.176.041.178.041.183.039.187.039.19.037.194.035.197.035.202.033.204.031.209.03.212.029.216.027.219.025.222.024.226.021.23.02.233.018.236.016.24.015.243.012.246.01.249.008.253.005.256.004.259.001.26-.001.257-.004.254-.005.25-.008.247-.011.244-.012.241-.014.237-.016.233-.018.231-.021.226-.021.224-.024.22-.026.216-.027.212-.028.21-.031.205-.031.202-.034.198-.034.194-.036.191-.037.187-.039.183-.04.179-.04.175-.042.172-.043.168-.044.163-.045.16-.046.155-.046.152-.047.148-.048.143-.049.139-.049.136-.05.131-.05.126-.05.123-.051.118-.052.114-.051.11-.052.106-.052.101-.052.096-.052.092-.052.088-.053.083-.051.079-.052.074-.052.07-.051.065-.051.06-.051.056-.05.051-.05.023-.024.023-.025.021-.024.02-.024.019-.024.018-.024.017-.024.015-.023.014-.024.013-.023.012-.023.01-.023.01-.022.008-.022.006-.022.006-.022.004-.022.004-.021.001-.021.001-.021v-4.127l-.077.055-.08.053-.083.054-.085.053-.087.052-.09.052-.093.051-.095.05-.097.05-.1.049-.102.049-.105.048-.106.047-.109.047-.111.046-.114.045-.115.045-.118.044-.12.043-.122.042-.124.042-.126.041-.128.04-.13.04-.132.038-.134.038-.135.037-.138.037-.139.035-.142.035-.143.034-.144.033-.147.032-.148.031-.15.03-.151.03-.153.029-.154.027-.156.027-.158.026-.159.025-.161.024-.162.023-.163.022-.165.021-.166.02-.167.019-.169.018-.169.017-.171.016-.173.015-.173.014-.175.013-.175.012-.177.011-.178.01-.179.008-.179.008-.181.006-.182.005-.182.004-.184.003-.184.002h-.37l-.184-.002-.184-.003-.182-.004-.182-.005-.181-.006-.179-.008-.179-.008-.178-.01-.176-.011-.176-.012-.175-.013-.173-.014-.172-.015-.171-.016-.17-.017-.169-.018-.167-.019-.166-.02-.165-.021-.163-.022-.162-.023-.161-.024-.159-.025-.157-.026-.156-.027-.155-.027-.153-.029-.151-.03-.15-.03-.148-.031-.146-.032-.145-.033-.143-.034-.141-.035-.14-.035-.137-.037-.136-.037-.134-.038-.132-.038-.13-.04-.128-.04-.126-.041-.124-.042-.122-.042-.12-.044-.117-.043-.116-.045-.113-.045-.112-.046-.109-.047-.106-.047-.105-.048-.102-.049-.1-.049-.097-.05-.095-.05-.093-.052-.09-.051-.087-.052-.085-.053-.083-.054-.08-.054-.077-.054v4.127zm0-5.654v.011l.001.021.003.021.004.021.005.022.006.022.007.022.009.022.01.022.011.023.012.023.013.023.015.024.016.023.017.024.018.024.019.024.021.024.022.024.023.025.024.024.052.05.056.05.061.05.066.051.07.051.075.052.079.051.084.052.088.052.092.052.097.052.102.052.105.052.11.051.114.051.119.052.123.05.127.051.131.05.135.049.139.049.144.048.147.048.152.047.155.046.16.045.163.045.167.044.171.042.176.042.178.04.183.04.187.038.19.037.194.036.197.034.202.033.204.032.209.03.212.028.216.027.219.025.222.024.226.022.23.02.233.018.236.016.24.014.243.012.246.01.249.008.253.006.256.003.259.001.26-.001.257-.003.254-.006.25-.008.247-.01.244-.012.241-.015.237-.016.233-.018.231-.02.226-.022.224-.024.22-.025.216-.027.212-.029.21-.03.205-.032.202-.033.198-.035.194-.036.191-.037.187-.039.183-.039.179-.041.175-.042.172-.043.168-.044.163-.045.16-.045.155-.047.152-.047.148-.048.143-.048.139-.05.136-.049.131-.05.126-.051.123-.051.118-.051.114-.052.11-.052.106-.052.101-.052.096-.052.092-.052.088-.052.083-.052.079-.052.074-.051.07-.052.065-.051.06-.05.056-.051.051-.049.023-.025.023-.024.021-.025.02-.024.019-.024.018-.024.017-.024.015-.023.014-.023.013-.024.012-.022.01-.023.01-.023.008-.022.006-.022.006-.022.004-.021.004-.022.001-.021.001-.021v-4.139l-.077.054-.08.054-.083.054-.085.052-.087.053-.09.051-.093.051-.095.051-.097.05-.1.049-.102.049-.105.048-.106.047-.109.047-.111.046-.114.045-.115.044-.118.044-.12.044-.122.042-.124.042-.126.041-.128.04-.13.039-.132.039-.134.038-.135.037-.138.036-.139.036-.142.035-.143.033-.144.033-.147.033-.148.031-.15.03-.151.03-.153.028-.154.028-.156.027-.158.026-.159.025-.161.024-.162.023-.163.022-.165.021-.166.02-.167.019-.169.018-.169.017-.171.016-.173.015-.173.014-.175.013-.175.012-.177.011-.178.009-.179.009-.179.007-.181.007-.182.005-.182.004-.184.003-.184.002h-.37l-.184-.002-.184-.003-.182-.004-.182-.005-.181-.007-.179-.007-.179-.009-.178-.009-.176-.011-.176-.012-.175-.013-.173-.014-.172-.015-.171-.016-.17-.017-.169-.018-.167-.019-.166-.02-.165-.021-.163-.022-.162-.023-.161-.024-.159-.025-.157-.026-.156-.027-.155-.028-.153-.028-.151-.03-.15-.03-.148-.031-.146-.033-.145-.033-.143-.033-.141-.035-.14-.036-.137-.036-.136-.037-.134-.038-.132-.039-.13-.039-.128-.04-.126-.041-.124-.042-.122-.043-.12-.043-.117-.044-.116-.044-.113-.046-.112-.046-.109-.046-.106-.047-.105-.048-.102-.049-.1-.049-.097-.05-.095-.051-.093-.051-.09-.051-.087-.053-.085-.052-.083-.054-.08-.054-.077-.054v4.139zm0-5.666v.011l.001.02.003.022.004.021.005.022.006.021.007.022.009.023.01.022.011.023.012.023.013.023.015.023.016.024.017.024.018.023.019.024.021.025.022.024.023.024.024.025.052.05.056.05.061.05.066.051.07.051.075.052.079.051.084.052.088.052.092.052.097.052.102.052.105.051.11.052.114.051.119.051.123.051.127.05.131.05.135.05.139.049.144.048.147.048.152.047.155.046.16.045.163.045.167.043.171.043.176.042.178.04.183.04.187.038.19.037.194.036.197.034.202.033.204.032.209.03.212.028.216.027.219.025.222.024.226.021.23.02.233.018.236.017.24.014.243.012.246.01.249.008.253.006.256.003.259.001.26-.001.257-.003.254-.006.25-.008.247-.01.244-.013.241-.014.237-.016.233-.018.231-.02.226-.022.224-.024.22-.025.216-.027.212-.029.21-.03.205-.032.202-.033.198-.035.194-.036.191-.037.187-.039.183-.039.179-.041.175-.042.172-.043.168-.044.163-.045.16-.045.155-.047.152-.047.148-.048.143-.049.139-.049.136-.049.131-.051.126-.05.123-.051.118-.052.114-.051.11-.052.106-.052.101-.052.096-.052.092-.052.088-.052.083-.052.079-.052.074-.052.07-.051.065-.051.06-.051.056-.05.051-.049.023-.025.023-.025.021-.024.02-.024.019-.024.018-.024.017-.024.015-.023.014-.024.013-.023.012-.023.01-.022.01-.023.008-.022.006-.022.006-.022.004-.022.004-.021.001-.021.001-.021v-4.153l-.077.054-.08.054-.083.053-.085.053-.087.053-.09.051-.093.051-.095.051-.097.05-.1.049-.102.048-.105.048-.106.048-.109.046-.111.046-.114.046-.115.044-.118.044-.12.043-.122.043-.124.042-.126.041-.128.04-.13.039-.132.039-.134.038-.135.037-.138.036-.139.036-.142.034-.143.034-.144.033-.147.032-.148.032-.15.03-.151.03-.153.028-.154.028-.156.027-.158.026-.159.024-.161.024-.162.023-.163.023-.165.021-.166.02-.167.019-.169.018-.169.017-.171.016-.173.015-.173.014-.175.013-.175.012-.177.01-.178.01-.179.009-.179.007-.181.006-.182.006-.182.004-.184.003-.184.001-.185.001-.185-.001-.184-.001-.184-.003-.182-.004-.182-.006-.181-.006-.179-.007-.179-.009-.178-.01-.176-.01-.176-.012-.175-.013-.173-.014-.172-.015-.171-.016-.17-.017-.169-.018-.167-.019-.166-.02-.165-.021-.163-.023-.162-.023-.161-.024-.159-.024-.157-.026-.156-.027-.155-.028-.153-.028-.151-.03-.15-.03-.148-.032-.146-.032-.145-.033-.143-.034-.141-.034-.14-.036-.137-.036-.136-.037-.134-.038-.132-.039-.13-.039-.128-.041-.126-.041-.124-.041-.122-.043-.12-.043-.117-.044-.116-.044-.113-.046-.112-.046-.109-.046-.106-.048-.105-.048-.102-.048-.1-.05-.097-.049-.095-.051-.093-.051-.09-.052-.087-.052-.085-.053-.083-.053-.08-.054-.077-.054v4.153zm8.74-8.179l-.257.004-.254.005-.25.008-.247.011-.244.012-.241.014-.237.016-.233.018-.231.021-.226.022-.224.023-.22.026-.216.027-.212.028-.21.031-.205.032-.202.033-.198.034-.194.036-.191.038-.187.038-.183.04-.179.041-.175.042-.172.043-.168.043-.163.045-.16.046-.155.046-.152.048-.148.048-.143.048-.139.049-.136.05-.131.05-.126.051-.123.051-.118.051-.114.052-.11.052-.106.052-.101.052-.096.052-.092.052-.088.052-.083.052-.079.052-.074.051-.07.052-.065.051-.06.05-.056.05-.051.05-.023.025-.023.024-.021.024-.02.025-.019.024-.018.024-.017.023-.015.024-.014.023-.013.023-.012.023-.01.023-.01.022-.008.022-.006.023-.006.021-.004.022-.004.021-.001.021-.001.021.001.021.001.021.004.021.004.022.006.021.006.023.008.022.01.022.01.023.012.023.013.023.014.023.015.024.017.023.018.024.019.024.02.025.021.024.023.024.023.025.051.05.056.05.06.05.065.051.07.052.074.051.079.052.083.052.088.052.092.052.096.052.101.052.106.052.11.052.114.052.118.051.123.051.126.051.131.05.136.05.139.049.143.048.148.048.152.048.155.046.16.046.163.045.168.043.172.043.175.042.179.041.183.04.187.038.191.038.194.036.198.034.202.033.205.032.21.031.212.028.216.027.22.026.224.023.226.022.231.021.233.018.237.016.241.014.244.012.247.011.25.008.254.005.257.004.26.001.26-.001.257-.004.254-.005.25-.008.247-.011.244-.012.241-.014.237-.016.233-.018.231-.021.226-.022.224-.023.22-.026.216-.027.212-.028.21-.031.205-.032.202-.033.198-.034.194-.036.191-.038.187-.038.183-.04.179-.041.175-.042.172-.043.168-.043.163-.045.16-.046.155-.046.152-.048.148-.048.143-.048.139-.049.136-.05.131-.05.126-.051.123-.051.118-.051.114-.052.11-.052.106-.052.101-.052.096-.052.092-.052.088-.052.083-.052.079-.052.074-.051.07-.052.065-.051.06-.05.056-.05.051-.05.023-.025.023-.024.021-.024.02-.025.019-.024.018-.024.017-.023.015-.024.014-.023.013-.023.012-.023.01-.023.01-.022.008-.022.006-.023.006-.021.004-.022.004-.021.001-.021.001-.021-.001-.021-.001-.021-.004-.021-.004-.022-.006-.021-.006-.023-.008-.022-.01-.022-.01-.023-.012-.023-.013-.023-.014-.023-.015-.024-.017-.023-.018-.024-.019-.024-.02-.025-.021-.024-.023-.024-.023-.025-.051-.05-.056-.05-.06-.05-.065-.051-.07-.052-.074-.051-.079-.052-.083-.052-.088-.052-.092-.052-.096-.052-.101-.052-.106-.052-.11-.052-.114-.052-.118-.051-.123-.051-.126-.051-.131-.05-.136-.05-.139-.049-.143-.048-.148-.048-.152-.048-.155-.046-.16-.046-.163-.045-.168-.043-.172-.043-.175-.042-.179-.041-.183-.04-.187-.038-.191-.038-.194-.036-.198-.034-.202-.033-.205-.032-.21-.031-.212-.028-.216-.027-.22-.026-.224-.023-.226-.022-.231-.021-.233-.018-.237-.016-.241-.014-.244-.012-.247-.011-.25-.008-.254-.005-.257-.004-.26-.001-.26.001z&quot; transform=&quot;scale(.5)&quot;&gt;&lt;/path&gt;&lt;/symbol&gt;&lt;/defs&gt;&lt;defs&gt;&lt;symbol height=&quot;24&quot; width=&quot;24&quot; id=&quot;clock&quot;&gt;&lt;path d=&quot;M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm5.848 12.459c.202.038.202.333.001.372-1.907.361-6.045 1.111-6.547 1.111-.719 0-1.301-.582-1.301-1.301 0-.512.77-5.447 1.125-7.445.034-.192.312-.181.343.014l.985 6.238 5.394 1.011z&quot; transform=&quot;scale(.5)&quot;&gt;&lt;/path&gt;&lt;/symbol&gt;&lt;/defs&gt;&lt;defs&gt;&lt;marker orient=&quot;auto&quot; markerHeight=&quot;12&quot; markerWidth=&quot;12&quot; markerUnits=&quot;userSpaceOnUse&quot; refY=&quot;5&quot; refX=&quot;7.9&quot; id=&quot;arrowhead&quot;&gt;&lt;path d=&quot;M 0 0 L 10 5 L 0 10 z&quot;&gt;&lt;/path&gt;&lt;/marker&gt;&lt;/defs&gt;&lt;defs&gt;&lt;marker refY=&quot;4.5&quot; refX=&quot;4&quot; orient=&quot;auto&quot; markerHeight=&quot;8&quot; markerWidth=&quot;15&quot; id=&quot;crosshead&quot;&gt;&lt;path style=&quot;stroke-dasharray: 0, 0;&quot; d=&quot;M 1,2 L 6,7 M 6,2 L 1,7&quot; stroke-width=&quot;1pt&quot; stroke=&quot;#000000&quot; fill=&quot;none&quot;&gt;&lt;/path&gt;&lt;/marker&gt;&lt;/defs&gt;&lt;defs&gt;&lt;marker orient=&quot;auto&quot; markerHeight=&quot;28&quot; markerWidth=&quot;20&quot; refY=&quot;7&quot; refX=&quot;15.5&quot; id=&quot;filled-head&quot;&gt;&lt;path d=&quot;M 18,7 L9,13 L14,7 L9,1 Z&quot;&gt;&lt;/path&gt;&lt;/marker&gt;&lt;/defs&gt;&lt;defs&gt;&lt;marker orient=&quot;auto&quot; markerHeight=&quot;40&quot; markerWidth=&quot;60&quot; refY=&quot;15&quot; refX=&quot;15&quot; id=&quot;sequencenumber&quot;&gt;&lt;circle r=&quot;6&quot; cy=&quot;15&quot; cx=&quot;15&quot;&gt;&lt;/circle&gt;&lt;/marker&gt;&lt;/defs&gt;&lt;g&gt;&lt;/g&gt;&lt;g&gt;&lt;/g&gt;&lt;g&gt;&lt;/g&gt;&lt;g&gt;&lt;/g&gt;&lt;text style=&quot;font-family: arial, sans-serif; font-size: 16px; font-weight: 400;&quot; dy=&quot;1em&quot; class=&quot;messageText&quot; alignment-baseline=&quot;middle&quot; dominant-baseline=&quot;middle&quot; text-anchor=&quot;middle&quot; y=&quot;80&quot; x=&quot;172&quot;&gt;최초 접속 요청&lt;/text&gt;&lt;line style=&quot;fill: none;&quot; marker-end=&quot;url(#arrowhead)&quot; stroke=&quot;none&quot; stroke-width=&quot;2&quot; class=&quot;messageLine0&quot; y2=&quot;109&quot; x2=&quot;267&quot; y1=&quot;109&quot; x1=&quot;76&quot;&gt;&lt;/line&gt;&lt;text style=&quot;font-family: arial, sans-serif; font-size: 16px; font-weight: 400;&quot; dy=&quot;1em&quot; class=&quot;messageText&quot; alignment-baseline=&quot;middle&quot; dominant-baseline=&quot;middle&quot; text-anchor=&quot;middle&quot; y=&quot;124&quot; x=&quot;177&quot;&gt;HTML 전달&lt;/text&gt;&lt;line style=&quot;stroke-dasharray: 3, 3; fill: none;&quot; marker-end=&quot;url(#arrowhead)&quot; stroke=&quot;none&quot; stroke-width=&quot;2&quot; class=&quot;messageLine1&quot; y2=&quot;153&quot; x2=&quot;83&quot; y1=&quot;153&quot; x1=&quot;270&quot;&gt;&lt;/line&gt;&lt;text style=&quot;font-family: arial, sans-serif; font-size: 16px; font-weight: 400;&quot; dy=&quot;1em&quot; class=&quot;messageText&quot; alignment-baseline=&quot;middle&quot; dominant-baseline=&quot;middle&quot; text-anchor=&quot;middle&quot; y=&quot;168&quot; x=&quot;174&quot;&gt;데이터 전달 (Form Post)&lt;/text&gt;&lt;line style=&quot;fill: none;&quot; marker-end=&quot;url(#arrowhead)&quot; stroke=&quot;none&quot; stroke-width=&quot;2&quot; class=&quot;messageLine0&quot; y2=&quot;197&quot; x2=&quot;267&quot; y1=&quot;197&quot; x1=&quot;80&quot;&gt;&lt;/line&gt;&lt;text style=&quot;font-family: arial, sans-serif; font-size: 16px; font-weight: 400;&quot; dy=&quot;1em&quot; class=&quot;messageText&quot; alignment-baseline=&quot;middle&quot; dominant-baseline=&quot;middle&quot; text-anchor=&quot;middle&quot; y=&quot;212&quot; x=&quot;177&quot;&gt;HTML 전달&lt;/text&gt;&lt;line style=&quot;stroke-dasharray: 3, 3; fill: none;&quot; marker-end=&quot;url(#arrowhead)&quot; stroke=&quot;none&quot; stroke-width=&quot;2&quot; class=&quot;messageLine1&quot; y2=&quot;241&quot; x2=&quot;83&quot; y1=&quot;241&quot; x1=&quot;270&quot;&gt;&lt;/line&gt;&lt;/svg&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SPA: 초기 로딩 시 서버로부터 HTML을 받아온 후, 이후의 페이지 변경은 AJAX 통신을 통해 필요한 데이터만 JSON 형태로 받아와서 클라이언트에서 렌더링한다.
이 방식은 React를 포함한 현대적인 JavaScript 프레임워크/라이브러리에서 널리 사용된다.&lt;/p&gt;
&lt;p&gt;&lt;svg aria-roledescription=&quot;sequence&quot; role=&quot;graphics-document document&quot; viewBox=&quot;-50 -10 450 347&quot; style=&quot;max-width: 450px;&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; id=&quot;mermaid-1&quot;&gt;&lt;g&gt;&lt;rect class=&quot;actor actor-bottom&quot; ry=&quot;3&quot; rx=&quot;3&quot; name=&quot;Server&quot; height=&quot;65&quot; width=&quot;150&quot; stroke=&quot;#666&quot; fill=&quot;#eaeaea&quot; y=&quot;261&quot; x=&quot;200&quot;&gt;&lt;/rect&gt;&lt;text style=&quot;text-anchor: middle; font-size: 16px; font-weight: 400; font-family: arial, sans-serif;&quot; class=&quot;actor&quot; alignment-baseline=&quot;central&quot; dominant-baseline=&quot;central&quot; y=&quot;293.5&quot; x=&quot;275&quot;&gt;&lt;tspan dy=&quot;0&quot; x=&quot;275&quot;&gt;Server&lt;/tspan&gt;&lt;/text&gt;&lt;/g&gt;&lt;g&gt;&lt;rect class=&quot;actor actor-bottom&quot; ry=&quot;3&quot; rx=&quot;3&quot; name=&quot;Client&quot; height=&quot;65&quot; width=&quot;150&quot; stroke=&quot;#666&quot; fill=&quot;#eaeaea&quot; y=&quot;261&quot; x=&quot;0&quot;&gt;&lt;/rect&gt;&lt;text style=&quot;text-anchor: middle; font-size: 16px; font-weight: 400; font-family: arial, sans-serif;&quot; class=&quot;actor&quot; alignment-baseline=&quot;central&quot; dominant-baseline=&quot;central&quot; y=&quot;293.5&quot; x=&quot;75&quot;&gt;&lt;tspan dy=&quot;0&quot; x=&quot;75&quot;&gt;Client&lt;/tspan&gt;&lt;/text&gt;&lt;/g&gt;&lt;g&gt;&lt;line stroke=&quot;#999&quot; stroke-width=&quot;0.5px&quot; class=&quot;200&quot; y2=&quot;261&quot; x2=&quot;275&quot; y1=&quot;5&quot; x1=&quot;275&quot; id=&quot;actor3&quot;&gt;&lt;/line&gt;&lt;g id=&quot;root-3&quot;&gt;&lt;rect class=&quot;actor actor-top&quot; ry=&quot;3&quot; rx=&quot;3&quot; name=&quot;Server&quot; height=&quot;65&quot; width=&quot;150&quot; stroke=&quot;#666&quot; fill=&quot;#eaeaea&quot; y=&quot;0&quot; x=&quot;200&quot;&gt;&lt;/rect&gt;&lt;text style=&quot;text-anchor: middle; font-size: 16px; font-weight: 400; font-family: arial, sans-serif;&quot; class=&quot;actor&quot; alignment-baseline=&quot;central&quot; dominant-baseline=&quot;central&quot; y=&quot;32.5&quot; x=&quot;275&quot;&gt;&lt;tspan dy=&quot;0&quot; x=&quot;275&quot;&gt;Server&lt;/tspan&gt;&lt;/text&gt;&lt;/g&gt;&lt;/g&gt;&lt;g&gt;&lt;line stroke=&quot;#999&quot; stroke-width=&quot;0.5px&quot; class=&quot;200&quot; y2=&quot;261&quot; x2=&quot;75&quot; y1=&quot;5&quot; x1=&quot;75&quot; id=&quot;actor2&quot;&gt;&lt;/line&gt;&lt;g id=&quot;root-2&quot;&gt;&lt;rect class=&quot;actor actor-top&quot; ry=&quot;3&quot; rx=&quot;3&quot; name=&quot;Client&quot; height=&quot;65&quot; width=&quot;150&quot; stroke=&quot;#666&quot; fill=&quot;#eaeaea&quot; y=&quot;0&quot; x=&quot;0&quot;&gt;&lt;/rect&gt;&lt;text style=&quot;text-anchor: middle; font-size: 16px; font-weight: 400; font-family: arial, sans-serif;&quot; class=&quot;actor&quot; alignment-baseline=&quot;central&quot; dominant-baseline=&quot;central&quot; y=&quot;32.5&quot; x=&quot;75&quot;&gt;&lt;tspan dy=&quot;0&quot; x=&quot;75&quot;&gt;Client&lt;/tspan&gt;&lt;/text&gt;&lt;/g&gt;&lt;/g&gt;&lt;style&gt;#mermaid-1{font-family:arial,sans-serif;font-size:16px;fill:#333;}#mermaid-1 .error-icon{fill:#552222;}#mermaid-1 .error-text{fill:#552222;stroke:#552222;}#mermaid-1 .edge-thickness-normal{stroke-width:2px;}#mermaid-1 .edge-thickness-thick{stroke-width:3.5px;}#mermaid-1 .edge-pattern-solid{stroke-dasharray:0;}#mermaid-1 .edge-pattern-dashed{stroke-dasharray:3;}#mermaid-1 .edge-pattern-dotted{stroke-dasharray:2;}#mermaid-1 .marker{fill:#333333;stroke:#333333;}#mermaid-1 .marker.cross{stroke:#333333;}#mermaid-1 svg{font-family:arial,sans-serif;font-size:16px;}#mermaid-1 .actor{stroke:hsl(259.6261682243, 59.7765363128%, 87.9019607843%);fill:#ECECFF;}#mermaid-1 text.actor&gt;tspan{fill:black;stroke:none;}#mermaid-1 .actor-line{stroke:grey;}#mermaid-1 .messageLine0{stroke-width:1.5;stroke-dasharray:none;stroke:#333;}#mermaid-1 .messageLine1{stroke-width:1.5;stroke-dasharray:2,2;stroke:#333;}#mermaid-1 #arrowhead path{fill:#333;stroke:#333;}#mermaid-1 .sequenceNumber{fill:white;}#mermaid-1 #sequencenumber{fill:#333;}#mermaid-1 #crosshead path{fill:#333;stroke:#333;}#mermaid-1 .messageText{fill:#333;stroke:none;}#mermaid-1 .labelBox{stroke:hsl(259.6261682243, 59.7765363128%, 87.9019607843%);fill:#ECECFF;}#mermaid-1 .labelText,#mermaid-1 .labelText&gt;tspan{fill:black;stroke:none;}#mermaid-1 .loopText,#mermaid-1 .loopText&gt;tspan{fill:black;stroke:none;}#mermaid-1 .loopLine{stroke-width:2px;stroke-dasharray:2,2;stroke:hsl(259.6261682243, 59.7765363128%, 87.9019607843%);fill:hsl(259.6261682243, 59.7765363128%, 87.9019607843%);}#mermaid-1 .note{stroke:#aaaa33;fill:#fff5ad;}#mermaid-1 .noteText,#mermaid-1 .noteText&gt;tspan{fill:black;stroke:none;}#mermaid-1 .activation0{fill:#f4f4f4;stroke:#666;}#mermaid-1 .activation1{fill:#f4f4f4;stroke:#666;}#mermaid-1 .activation2{fill:#f4f4f4;stroke:#666;}#mermaid-1 .actorPopupMenu{position:absolute;}#mermaid-1 .actorPopupMenuPanel{position:absolute;fill:#ECECFF;box-shadow:0px 8px 16px 0px rgba(0,0,0,0.2);filter:drop-shadow(3px 5px 2px rgb(0 0 0 / 0.4));}#mermaid-1 .actor-man line{stroke:hsl(259.6261682243, 59.7765363128%, 87.9019607843%);fill:#ECECFF;}#mermaid-1 .actor-man circle,#mermaid-1 line{stroke:hsl(259.6261682243, 59.7765363128%, 87.9019607843%);fill:#ECECFF;stroke-width:2px;}#mermaid-1 :root{--mermaid-font-family:arial,sans-serif;}&lt;/style&gt;&lt;g&gt;&lt;/g&gt;&lt;defs&gt;&lt;symbol height=&quot;24&quot; width=&quot;24&quot; id=&quot;computer&quot;&gt;&lt;path d=&quot;M2 2v13h20v-13h-20zm18 11h-16v-9h16v9zm-10.228 6l.466-1h3.524l.467 1h-4.457zm14.228 3h-24l2-6h2.104l-1.33 4h18.45l-1.297-4h2.073l2 6zm-5-10h-14v-7h14v7z&quot; transform=&quot;scale(.5)&quot;&gt;&lt;/path&gt;&lt;/symbol&gt;&lt;/defs&gt;&lt;defs&gt;&lt;symbol clip-rule=&quot;evenodd&quot; fill-rule=&quot;evenodd&quot; id=&quot;database&quot;&gt;&lt;path d=&quot;M12.258.001l.256.004.255.005.253.008.251.01.249.012.247.015.246.016.242.019.241.02.239.023.236.024.233.027.231.028.229.031.225.032.223.034.22.036.217.038.214.04.211.041.208.043.205.045.201.046.198.048.194.05.191.051.187.053.183.054.18.056.175.057.172.059.168.06.163.061.16.063.155.064.15.066.074.033.073.033.071.034.07.034.069.035.068.035.067.035.066.035.064.036.064.036.062.036.06.036.06.037.058.037.058.037.055.038.055.038.053.038.052.038.051.039.05.039.048.039.047.039.045.04.044.04.043.04.041.04.04.041.039.041.037.041.036.041.034.041.033.042.032.042.03.042.029.042.027.042.026.043.024.043.023.043.021.043.02.043.018.044.017.043.015.044.013.044.012.044.011.045.009.044.007.045.006.045.004.045.002.045.001.045v17l-.001.045-.002.045-.004.045-.006.045-.007.045-.009.044-.011.045-.012.044-.013.044-.015.044-.017.043-.018.044-.02.043-.021.043-.023.043-.024.043-.026.043-.027.042-.029.042-.03.042-.032.042-.033.042-.034.041-.036.041-.037.041-.039.041-.04.041-.041.04-.043.04-.044.04-.045.04-.047.039-.048.039-.05.039-.051.039-.052.038-.053.038-.055.038-.055.038-.058.037-.058.037-.06.037-.06.036-.062.036-.064.036-.064.036-.066.035-.067.035-.068.035-.069.035-.07.034-.071.034-.073.033-.074.033-.15.066-.155.064-.16.063-.163.061-.168.06-.172.059-.175.057-.18.056-.183.054-.187.053-.191.051-.194.05-.198.048-.201.046-.205.045-.208.043-.211.041-.214.04-.217.038-.22.036-.223.034-.225.032-.229.031-.231.028-.233.027-.236.024-.239.023-.241.02-.242.019-.246.016-.247.015-.249.012-.251.01-.253.008-.255.005-.256.004-.258.001-.258-.001-.256-.004-.255-.005-.253-.008-.251-.01-.249-.012-.247-.015-.245-.016-.243-.019-.241-.02-.238-.023-.236-.024-.234-.027-.231-.028-.228-.031-.226-.032-.223-.034-.22-.036-.217-.038-.214-.04-.211-.041-.208-.043-.204-.045-.201-.046-.198-.048-.195-.05-.19-.051-.187-.053-.184-.054-.179-.056-.176-.057-.172-.059-.167-.06-.164-.061-.159-.063-.155-.064-.151-.066-.074-.033-.072-.033-.072-.034-.07-.034-.069-.035-.068-.035-.067-.035-.066-.035-.064-.036-.063-.036-.062-.036-.061-.036-.06-.037-.058-.037-.057-.037-.056-.038-.055-.038-.053-.038-.052-.038-.051-.039-.049-.039-.049-.039-.046-.039-.046-.04-.044-.04-.043-.04-.041-.04-.04-.041-.039-.041-.037-.041-.036-.041-.034-.041-.033-.042-.032-.042-.03-.042-.029-.042-.027-.042-.026-.043-.024-.043-.023-.043-.021-.043-.02-.043-.018-.044-.017-.043-.015-.044-.013-.044-.012-.044-.011-.045-.009-.044-.007-.045-.006-.045-.004-.045-.002-.045-.001-.045v-17l.001-.045.002-.045.004-.045.006-.045.007-.045.009-.044.011-.045.012-.044.013-.044.015-.044.017-.043.018-.044.02-.043.021-.043.023-.043.024-.043.026-.043.027-.042.029-.042.03-.042.032-.042.033-.042.034-.041.036-.041.037-.041.039-.041.04-.041.041-.04.043-.04.044-.04.046-.04.046-.039.049-.039.049-.039.051-.039.052-.038.053-.038.055-.038.056-.038.057-.037.058-.037.06-.037.061-.036.062-.036.063-.036.064-.036.066-.035.067-.035.068-.035.069-.035.07-.034.072-.034.072-.033.074-.033.151-.066.155-.064.159-.063.164-.061.167-.06.172-.059.176-.057.179-.056.184-.054.187-.053.19-.051.195-.05.198-.048.201-.046.204-.045.208-.043.211-.041.214-.04.217-.038.22-.036.223-.034.226-.032.228-.031.231-.028.234-.027.236-.024.238-.023.241-.02.243-.019.245-.016.247-.015.249-.012.251-.01.253-.008.255-.005.256-.004.258-.001.258.001zm-9.258 20.499v.01l.001.021.003.021.004.022.005.021.006.022.007.022.009.023.01.022.011.023.012.023.013.023.015.023.016.024.017.023.018.024.019.024.021.024.022.025.023.024.024.025.052.049.056.05.061.051.066.051.07.051.075.051.079.052.084.052.088.052.092.052.097.052.102.051.105.052.11.052.114.051.119.051.123.051.127.05.131.05.135.05.139.048.144.049.147.047.152.047.155.047.16.045.163.045.167.043.171.043.176.041.178.041.183.039.187.039.19.037.194.035.197.035.202.033.204.031.209.03.212.029.216.027.219.025.222.024.226.021.23.02.233.018.236.016.24.015.243.012.246.01.249.008.253.005.256.004.259.001.26-.001.257-.004.254-.005.25-.008.247-.011.244-.012.241-.014.237-.016.233-.018.231-.021.226-.021.224-.024.22-.026.216-.027.212-.028.21-.031.205-.031.202-.034.198-.034.194-.036.191-.037.187-.039.183-.04.179-.04.175-.042.172-.043.168-.044.163-.045.16-.046.155-.046.152-.047.148-.048.143-.049.139-.049.136-.05.131-.05.126-.05.123-.051.118-.052.114-.051.11-.052.106-.052.101-.052.096-.052.092-.052.088-.053.083-.051.079-.052.074-.052.07-.051.065-.051.06-.051.056-.05.051-.05.023-.024.023-.025.021-.024.02-.024.019-.024.018-.024.017-.024.015-.023.014-.024.013-.023.012-.023.01-.023.01-.022.008-.022.006-.022.006-.022.004-.022.004-.021.001-.021.001-.021v-4.127l-.077.055-.08.053-.083.054-.085.053-.087.052-.09.052-.093.051-.095.05-.097.05-.1.049-.102.049-.105.048-.106.047-.109.047-.111.046-.114.045-.115.045-.118.044-.12.043-.122.042-.124.042-.126.041-.128.04-.13.04-.132.038-.134.038-.135.037-.138.037-.139.035-.142.035-.143.034-.144.033-.147.032-.148.031-.15.03-.151.03-.153.029-.154.027-.156.027-.158.026-.159.025-.161.024-.162.023-.163.022-.165.021-.166.02-.167.019-.169.018-.169.017-.171.016-.173.015-.173.014-.175.013-.175.012-.177.011-.178.01-.179.008-.179.008-.181.006-.182.005-.182.004-.184.003-.184.002h-.37l-.184-.002-.184-.003-.182-.004-.182-.005-.181-.006-.179-.008-.179-.008-.178-.01-.176-.011-.176-.012-.175-.013-.173-.014-.172-.015-.171-.016-.17-.017-.169-.018-.167-.019-.166-.02-.165-.021-.163-.022-.162-.023-.161-.024-.159-.025-.157-.026-.156-.027-.155-.027-.153-.029-.151-.03-.15-.03-.148-.031-.146-.032-.145-.033-.143-.034-.141-.035-.14-.035-.137-.037-.136-.037-.134-.038-.132-.038-.13-.04-.128-.04-.126-.041-.124-.042-.122-.042-.12-.044-.117-.043-.116-.045-.113-.045-.112-.046-.109-.047-.106-.047-.105-.048-.102-.049-.1-.049-.097-.05-.095-.05-.093-.052-.09-.051-.087-.052-.085-.053-.083-.054-.08-.054-.077-.054v4.127zm0-5.654v.011l.001.021.003.021.004.021.005.022.006.022.007.022.009.022.01.022.011.023.012.023.013.023.015.024.016.023.017.024.018.024.019.024.021.024.022.024.023.025.024.024.052.05.056.05.061.05.066.051.07.051.075.052.079.051.084.052.088.052.092.052.097.052.102.052.105.052.11.051.114.051.119.052.123.05.127.051.131.05.135.049.139.049.144.048.147.048.152.047.155.046.16.045.163.045.167.044.171.042.176.042.178.04.183.04.187.038.19.037.194.036.197.034.202.033.204.032.209.03.212.028.216.027.219.025.222.024.226.022.23.02.233.018.236.016.24.014.243.012.246.01.249.008.253.006.256.003.259.001.26-.001.257-.003.254-.006.25-.008.247-.01.244-.012.241-.015.237-.016.233-.018.231-.02.226-.022.224-.024.22-.025.216-.027.212-.029.21-.03.205-.032.202-.033.198-.035.194-.036.191-.037.187-.039.183-.039.179-.041.175-.042.172-.043.168-.044.163-.045.16-.045.155-.047.152-.047.148-.048.143-.048.139-.05.136-.049.131-.05.126-.051.123-.051.118-.051.114-.052.11-.052.106-.052.101-.052.096-.052.092-.052.088-.052.083-.052.079-.052.074-.051.07-.052.065-.051.06-.05.056-.051.051-.049.023-.025.023-.024.021-.025.02-.024.019-.024.018-.024.017-.024.015-.023.014-.023.013-.024.012-.022.01-.023.01-.023.008-.022.006-.022.006-.022.004-.021.004-.022.001-.021.001-.021v-4.139l-.077.054-.08.054-.083.054-.085.052-.087.053-.09.051-.093.051-.095.051-.097.05-.1.049-.102.049-.105.048-.106.047-.109.047-.111.046-.114.045-.115.044-.118.044-.12.044-.122.042-.124.042-.126.041-.128.04-.13.039-.132.039-.134.038-.135.037-.138.036-.139.036-.142.035-.143.033-.144.033-.147.033-.148.031-.15.03-.151.03-.153.028-.154.028-.156.027-.158.026-.159.025-.161.024-.162.023-.163.022-.165.021-.166.02-.167.019-.169.018-.169.017-.171.016-.173.015-.173.014-.175.013-.175.012-.177.011-.178.009-.179.009-.179.007-.181.007-.182.005-.182.004-.184.003-.184.002h-.37l-.184-.002-.184-.003-.182-.004-.182-.005-.181-.007-.179-.007-.179-.009-.178-.009-.176-.011-.176-.012-.175-.013-.173-.014-.172-.015-.171-.016-.17-.017-.169-.018-.167-.019-.166-.02-.165-.021-.163-.022-.162-.023-.161-.024-.159-.025-.157-.026-.156-.027-.155-.028-.153-.028-.151-.03-.15-.03-.148-.031-.146-.033-.145-.033-.143-.033-.141-.035-.14-.036-.137-.036-.136-.037-.134-.038-.132-.039-.13-.039-.128-.04-.126-.041-.124-.042-.122-.043-.12-.043-.117-.044-.116-.044-.113-.046-.112-.046-.109-.046-.106-.047-.105-.048-.102-.049-.1-.049-.097-.05-.095-.051-.093-.051-.09-.051-.087-.053-.085-.052-.083-.054-.08-.054-.077-.054v4.139zm0-5.666v.011l.001.02.003.022.004.021.005.022.006.021.007.022.009.023.01.022.011.023.012.023.013.023.015.023.016.024.017.024.018.023.019.024.021.025.022.024.023.024.024.025.052.05.056.05.061.05.066.051.07.051.075.052.079.051.084.052.088.052.092.052.097.052.102.052.105.051.11.052.114.051.119.051.123.051.127.05.131.05.135.05.139.049.144.048.147.048.152.047.155.046.16.045.163.045.167.043.171.043.176.042.178.04.183.04.187.038.19.037.194.036.197.034.202.033.204.032.209.03.212.028.216.027.219.025.222.024.226.021.23.02.233.018.236.017.24.014.243.012.246.01.249.008.253.006.256.003.259.001.26-.001.257-.003.254-.006.25-.008.247-.01.244-.013.241-.014.237-.016.233-.018.231-.02.226-.022.224-.024.22-.025.216-.027.212-.029.21-.03.205-.032.202-.033.198-.035.194-.036.191-.037.187-.039.183-.039.179-.041.175-.042.172-.043.168-.044.163-.045.16-.045.155-.047.152-.047.148-.048.143-.049.139-.049.136-.049.131-.051.126-.05.123-.051.118-.052.114-.051.11-.052.106-.052.101-.052.096-.052.092-.052.088-.052.083-.052.079-.052.074-.052.07-.051.065-.051.06-.051.056-.05.051-.049.023-.025.023-.025.021-.024.02-.024.019-.024.018-.024.017-.024.015-.023.014-.024.013-.023.012-.023.01-.022.01-.023.008-.022.006-.022.006-.022.004-.022.004-.021.001-.021.001-.021v-4.153l-.077.054-.08.054-.083.053-.085.053-.087.053-.09.051-.093.051-.095.051-.097.05-.1.049-.102.048-.105.048-.106.048-.109.046-.111.046-.114.046-.115.044-.118.044-.12.043-.122.043-.124.042-.126.041-.128.04-.13.039-.132.039-.134.038-.135.037-.138.036-.139.036-.142.034-.143.034-.144.033-.147.032-.148.032-.15.03-.151.03-.153.028-.154.028-.156.027-.158.026-.159.024-.161.024-.162.023-.163.023-.165.021-.166.02-.167.019-.169.018-.169.017-.171.016-.173.015-.173.014-.175.013-.175.012-.177.01-.178.01-.179.009-.179.007-.181.006-.182.006-.182.004-.184.003-.184.001-.185.001-.185-.001-.184-.001-.184-.003-.182-.004-.182-.006-.181-.006-.179-.007-.179-.009-.178-.01-.176-.01-.176-.012-.175-.013-.173-.014-.172-.015-.171-.016-.17-.017-.169-.018-.167-.019-.166-.02-.165-.021-.163-.023-.162-.023-.161-.024-.159-.024-.157-.026-.156-.027-.155-.028-.153-.028-.151-.03-.15-.03-.148-.032-.146-.032-.145-.033-.143-.034-.141-.034-.14-.036-.137-.036-.136-.037-.134-.038-.132-.039-.13-.039-.128-.041-.126-.041-.124-.041-.122-.043-.12-.043-.117-.044-.116-.044-.113-.046-.112-.046-.109-.046-.106-.048-.105-.048-.102-.048-.1-.05-.097-.049-.095-.051-.093-.051-.09-.052-.087-.052-.085-.053-.083-.053-.08-.054-.077-.054v4.153zm8.74-8.179l-.257.004-.254.005-.25.008-.247.011-.244.012-.241.014-.237.016-.233.018-.231.021-.226.022-.224.023-.22.026-.216.027-.212.028-.21.031-.205.032-.202.033-.198.034-.194.036-.191.038-.187.038-.183.04-.179.041-.175.042-.172.043-.168.043-.163.045-.16.046-.155.046-.152.048-.148.048-.143.048-.139.049-.136.05-.131.05-.126.051-.123.051-.118.051-.114.052-.11.052-.106.052-.101.052-.096.052-.092.052-.088.052-.083.052-.079.052-.074.051-.07.052-.065.051-.06.05-.056.05-.051.05-.023.025-.023.024-.021.024-.02.025-.019.024-.018.024-.017.023-.015.024-.014.023-.013.023-.012.023-.01.023-.01.022-.008.022-.006.023-.006.021-.004.022-.004.021-.001.021-.001.021.001.021.001.021.004.021.004.022.006.021.006.023.008.022.01.022.01.023.012.023.013.023.014.023.015.024.017.023.018.024.019.024.02.025.021.024.023.024.023.025.051.05.056.05.06.05.065.051.07.052.074.051.079.052.083.052.088.052.092.052.096.052.101.052.106.052.11.052.114.052.118.051.123.051.126.051.131.05.136.05.139.049.143.048.148.048.152.048.155.046.16.046.163.045.168.043.172.043.175.042.179.041.183.04.187.038.191.038.194.036.198.034.202.033.205.032.21.031.212.028.216.027.22.026.224.023.226.022.231.021.233.018.237.016.241.014.244.012.247.011.25.008.254.005.257.004.26.001.26-.001.257-.004.254-.005.25-.008.247-.011.244-.012.241-.014.237-.016.233-.018.231-.021.226-.022.224-.023.22-.026.216-.027.212-.028.21-.031.205-.032.202-.033.198-.034.194-.036.191-.038.187-.038.183-.04.179-.041.175-.042.172-.043.168-.043.163-.045.16-.046.155-.046.152-.048.148-.048.143-.048.139-.049.136-.05.131-.05.126-.051.123-.051.118-.051.114-.052.11-.052.106-.052.101-.052.096-.052.092-.052.088-.052.083-.052.079-.052.074-.051.07-.052.065-.051.06-.05.056-.05.051-.05.023-.025.023-.024.021-.024.02-.025.019-.024.018-.024.017-.023.015-.024.014-.023.013-.023.012-.023.01-.023.01-.022.008-.022.006-.023.006-.021.004-.022.004-.021.001-.021.001-.021-.001-.021-.001-.021-.004-.021-.004-.022-.006-.021-.006-.023-.008-.022-.01-.022-.01-.023-.012-.023-.013-.023-.014-.023-.015-.024-.017-.023-.018-.024-.019-.024-.02-.025-.021-.024-.023-.024-.023-.025-.051-.05-.056-.05-.06-.05-.065-.051-.07-.052-.074-.051-.079-.052-.083-.052-.088-.052-.092-.052-.096-.052-.101-.052-.106-.052-.11-.052-.114-.052-.118-.051-.123-.051-.126-.051-.131-.05-.136-.05-.139-.049-.143-.048-.148-.048-.152-.048-.155-.046-.16-.046-.163-.045-.168-.043-.172-.043-.175-.042-.179-.041-.183-.04-.187-.038-.191-.038-.194-.036-.198-.034-.202-.033-.205-.032-.21-.031-.212-.028-.216-.027-.22-.026-.224-.023-.226-.022-.231-.021-.233-.018-.237-.016-.241-.014-.244-.012-.247-.011-.25-.008-.254-.005-.257-.004-.26-.001-.26.001z&quot; transform=&quot;scale(.5)&quot;&gt;&lt;/path&gt;&lt;/symbol&gt;&lt;/defs&gt;&lt;defs&gt;&lt;symbol height=&quot;24&quot; width=&quot;24&quot; id=&quot;clock&quot;&gt;&lt;path d=&quot;M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm5.848 12.459c.202.038.202.333.001.372-1.907.361-6.045 1.111-6.547 1.111-.719 0-1.301-.582-1.301-1.301 0-.512.77-5.447 1.125-7.445.034-.192.312-.181.343.014l.985 6.238 5.394 1.011z&quot; transform=&quot;scale(.5)&quot;&gt;&lt;/path&gt;&lt;/symbol&gt;&lt;/defs&gt;&lt;defs&gt;&lt;marker orient=&quot;auto&quot; markerHeight=&quot;12&quot; markerWidth=&quot;12&quot; markerUnits=&quot;userSpaceOnUse&quot; refY=&quot;5&quot; refX=&quot;7.9&quot; id=&quot;arrowhead&quot;&gt;&lt;path d=&quot;M 0 0 L 10 5 L 0 10 z&quot;&gt;&lt;/path&gt;&lt;/marker&gt;&lt;/defs&gt;&lt;defs&gt;&lt;marker refY=&quot;4.5&quot; refX=&quot;4&quot; orient=&quot;auto&quot; markerHeight=&quot;8&quot; markerWidth=&quot;15&quot; id=&quot;crosshead&quot;&gt;&lt;path style=&quot;stroke-dasharray: 0, 0;&quot; d=&quot;M 1,2 L 6,7 M 6,2 L 1,7&quot; stroke-width=&quot;1pt&quot; stroke=&quot;#000000&quot; fill=&quot;none&quot;&gt;&lt;/path&gt;&lt;/marker&gt;&lt;/defs&gt;&lt;defs&gt;&lt;marker orient=&quot;auto&quot; markerHeight=&quot;28&quot; markerWidth=&quot;20&quot; refY=&quot;7&quot; refX=&quot;15.5&quot; id=&quot;filled-head&quot;&gt;&lt;path d=&quot;M 18,7 L9,13 L14,7 L9,1 Z&quot;&gt;&lt;/path&gt;&lt;/marker&gt;&lt;/defs&gt;&lt;defs&gt;&lt;marker orient=&quot;auto&quot; markerHeight=&quot;40&quot; markerWidth=&quot;60&quot; refY=&quot;15&quot; refX=&quot;15&quot; id=&quot;sequencenumber&quot;&gt;&lt;circle r=&quot;6&quot; cy=&quot;15&quot; cx=&quot;15&quot;&gt;&lt;/circle&gt;&lt;/marker&gt;&lt;/defs&gt;&lt;g&gt;&lt;/g&gt;&lt;g&gt;&lt;/g&gt;&lt;g&gt;&lt;/g&gt;&lt;g&gt;&lt;/g&gt;&lt;text style=&quot;font-family: arial, sans-serif; font-size: 16px; font-weight: 400;&quot; dy=&quot;1em&quot; class=&quot;messageText&quot; alignment-baseline=&quot;middle&quot; dominant-baseline=&quot;middle&quot; text-anchor=&quot;middle&quot; y=&quot;80&quot; x=&quot;172&quot;&gt;최초 접속 요청&lt;/text&gt;&lt;line style=&quot;fill: none;&quot; marker-end=&quot;url(#arrowhead)&quot; stroke=&quot;none&quot; stroke-width=&quot;2&quot; class=&quot;messageLine0&quot; y2=&quot;109&quot; x2=&quot;267&quot; y1=&quot;109&quot; x1=&quot;76&quot;&gt;&lt;/line&gt;&lt;text style=&quot;font-family: arial, sans-serif; font-size: 16px; font-weight: 400;&quot; dy=&quot;1em&quot; class=&quot;messageText&quot; alignment-baseline=&quot;middle&quot; dominant-baseline=&quot;middle&quot; text-anchor=&quot;middle&quot; y=&quot;124&quot; x=&quot;177&quot;&gt;HTML 전달&lt;/text&gt;&lt;line style=&quot;stroke-dasharray: 3, 3; fill: none;&quot; marker-end=&quot;url(#arrowhead)&quot; stroke=&quot;none&quot; stroke-width=&quot;2&quot; class=&quot;messageLine1&quot; y2=&quot;153&quot; x2=&quot;83&quot; y1=&quot;153&quot; x1=&quot;270&quot;&gt;&lt;/line&gt;&lt;text style=&quot;font-family: arial, sans-serif; font-size: 16px; font-weight: 400;&quot; dy=&quot;1em&quot; class=&quot;messageText&quot; alignment-baseline=&quot;middle&quot; dominant-baseline=&quot;middle&quot; text-anchor=&quot;middle&quot; y=&quot;168&quot; x=&quot;174&quot;&gt;데이터 전달 (AJAX 통신)&lt;/text&gt;&lt;line style=&quot;fill: none;&quot; marker-end=&quot;url(#arrowhead)&quot; stroke=&quot;none&quot; stroke-width=&quot;2&quot; class=&quot;messageLine0&quot; y2=&quot;197&quot; x2=&quot;267&quot; y1=&quot;197&quot; x1=&quot;80&quot;&gt;&lt;/line&gt;&lt;text style=&quot;font-family: arial, sans-serif; font-size: 16px; font-weight: 400;&quot; dy=&quot;1em&quot; class=&quot;messageText&quot; alignment-baseline=&quot;middle&quot; dominant-baseline=&quot;middle&quot; text-anchor=&quot;middle&quot; y=&quot;212&quot; x=&quot;177&quot;&gt;JSON 전달&lt;/text&gt;&lt;line style=&quot;stroke-dasharray: 3, 3; fill: none;&quot; marker-end=&quot;url(#arrowhead)&quot; stroke=&quot;none&quot; stroke-width=&quot;2&quot; class=&quot;messageLine1&quot; y2=&quot;241&quot; x2=&quot;83&quot; y1=&quot;241&quot; x1=&quot;270&quot;&gt;&lt;/line&gt;&lt;/svg&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;React를 공부해야 하는 이유 🚀&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;생산성과 재사용성: 컴포넌트와 Hook을 활용하여 개발자의 생산성을 높이고, 코드의 재사용성을 증가시킨다.&lt;/li&gt;
&lt;li&gt;풍부한 자료와 라이브러리: React는 널리 사용되기 때문에 다양한 자료와 오픈소스 라이브러리를 쉽게 찾을 수 있다.&lt;/li&gt;
&lt;li&gt;다양한 사용처: React를 배우면 웹 애플리케이션 뿐만 아니라 React Native를 통해 모바일 애플리케이션 개발에도 활용할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;React를 배우는 것은 현대 웹 개발의 트렌드를 따라가는 데 있어 필수적인 요소가 되었다고 할 수 있다.
시작하기 전에, 기본적인 JavaScript 지식을 갖추는 것이 좋다.
React의 세계로! 🌟&lt;/p&gt;
&lt;h2&gt;React의 핵심 특징 정리 🌟&lt;/h2&gt;
&lt;p&gt;React는 현대 웹 개발에서 중요한 역할을 하는 JavaScript 라이브러리. React의 주요 특징들을 좀 더 자세히 살펴보자.&lt;sup id=&quot;fnref-2&quot;&gt;&lt;a href=&quot;#fn-2&quot; class=&quot;footnote-ref&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;h3&gt;HTML과 JS 함께 사용하기 📝&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;전통적인 방식 (jQuery 사용 예): HTML 요소를 JavaScript로 동적으로 추가하는 방식.
코드가 복잡해지고 유지보수가 어려워질 수 있다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token function&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;#todo-list&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;token string&quot;&gt;&quot;&amp;lt;li&gt;&amp;lt;span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;
    value &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&quot;&amp;lt;/span&gt;&amp;lt;button type=&apos;button&apos; class=&apos;complete&apos;&gt;complete&amp;lt;/button&gt; &amp;lt;button type=&apos;button&apos; class=&apos;delete&apos;&gt;delete&amp;lt;/button&gt;&amp;lt;/li&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;React 방식 (JSX 사용 예): HTML과 JavaScript를 함께 사용하여 UI를 선언적으로 표현한다.
코드가 더 간결하고 이해하기 쉽다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;&lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;ol&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;todo-list&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;todoList&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;item&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; index&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;li&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;token script language-javascript&quot;&gt;&lt;span class=&quot;token script-punctuation punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;item&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;isCompleted &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;completed&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;span&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;item&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;value&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;span&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;token script language-javascript&quot;&gt;&lt;span class=&quot;token script-punctuation punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;handleCompleteClick&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;index&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;complete&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;token script language-javascript&quot;&gt;&lt;span class=&quot;token script-punctuation punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;handleDeleteClick&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;index&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;li&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;ol&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Component 기반 개발 🛠️&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;React는 컴포넌트 기반으로 개발된다.
각 컴포넌트는 독립적인 단위로, 재사용이 가능하며, 복잡한 UI도 쉽게 구성할 수 있다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;&lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;App&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; text &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;hello world&quot;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;span&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;text&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;span&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;State를 통한 데이터 관리 🔄&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;React에서는 state를 사용하여 컴포넌트의 상태를 관리한다. state가 변경될 때마다 컴포넌트는 자동으로 다시 렌더링된다.
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;&lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;todoList&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; setTodoList&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;useState&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;inputValue&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; setInputValue&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;useState&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;React의 이러한 특징들은 개발자가 더 효율적으로 웹 애플리케이션을 구축할 수 있도록 돕는다.
JSX, 컴포넌트, 그리고 상태 관리는 React 개발의 핵심을 이루며, 이를 통해 더 나은 사용자 경험을 제공하는 웹 애플리케이션을 만들 수 있다.
React를 배우고 싶다면, 이러한 개념들을 깊이 이해하는 것이 중요! 🚀&lt;/p&gt;
&lt;h2&gt;Create React App(CRA) 및 Node.js, NPM에 대한 정리 🚀&lt;/h2&gt;
&lt;p&gt;Create React App(CRA)은 React 프로젝트를 쉽게 시작할 수 있게 해주는 도구.&lt;sup id=&quot;fnref-3&quot;&gt;&lt;a href=&quot;#fn-3&quot; class=&quot;footnote-ref&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;
Facebook에 의해 만들어졌으며, 프로젝트 생성부터 다양한 개발 도구를 제공한다.
Node.js와 NPM은 CRA를 사용하여 React 프로젝트를 시작할 때 필수적인 환경이다.&lt;/p&gt;
&lt;h3&gt;Create React App(CRA) 🛠️&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;개요: React 프로젝트를 쉽게 생성할 수 있도록 도와주는 Boilerplate.
직접 스크립트를 추가하여 사용하는 것도 가능하지만, CRA를 사용하면 더 편리하다.&lt;/li&gt;
&lt;li&gt;장점:
&lt;ul&gt;
&lt;li&gt;개발에 집중할 수 있도록 환경을 구성해준다.&lt;/li&gt;
&lt;li&gt;다양한 브라우저에서 작동할 수 있도록 transcompile을 지원한다. (예: babel, webpack)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;사용 방법:&lt;sup id=&quot;fnref-4&quot;&gt;&lt;a href=&quot;#fn-4&quot; class=&quot;footnote-ref&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;npx create-react-app &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;directory name&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
&lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;directory name&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; start&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://create-react-app.dev/&quot;&gt;공식 문서 및 자세한 정보&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Node.js와 NPM 🌐&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Node.js:
&lt;ul&gt;
&lt;li&gt;서버 프로그래밍에 주로 사용되는 JavaScript 기반의 소프트웨어 플랫폼.&lt;/li&gt;
&lt;li&gt;프론트엔드 개발자가 서버 개발에 쉽게 접근할 수 있도록 도와준다.&lt;/li&gt;
&lt;li&gt;CRA를 사용한 React 프로젝트 생성 시 개발 환경 및 테스트 서버로 활용된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;NPM (Node Package Manager):
&lt;ul&gt;
&lt;li&gt;Node.js 환경에서 사용할 수 있는 패키지와 라이브러리를 관리하는 저장소.&lt;/li&gt;
&lt;li&gt;패키지 관리와 서버 실행, 관리에 필요한 다양한 명령어를 제공한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;설치 및 사용:
&lt;ul&gt;
&lt;li&gt;Node.js 설치:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/en&quot;&gt;Node.js 공식 홈페이지&lt;/a&gt; 에서 LTS 버전을 다운로드하고 설치한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;버전 확인: &lt;code class=&quot;language-text&quot;&gt;node -v&lt;/code&gt; 명령어로 설치된 Node.js 버전을 확인할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;React 프로젝트 생성 과정 📦&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Node.js 설치: 위에서 언급한 대로 LTS 버전을 설치.&lt;/li&gt;
&lt;li&gt;프로젝트 생성: &lt;code class=&quot;language-text&quot;&gt;npx create-react-app &amp;lt;directory name&gt;&lt;/code&gt; 명령어를 사용.&lt;/li&gt;
&lt;li&gt;프로젝트 실행: 생성된 디렉토리로 이동한 후 npm start 명령어로 프로젝트를 실행.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;npm 명령어 📚&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;npm install&lt;/code&gt;: package.json에 정의된 의존성 패키지들을 설치.&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;npm install &amp;lt;package name&gt;&lt;/code&gt;: 원하는 패키지를 설치.&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;npm install &amp;lt;package name&gt;@&amp;lt;version&gt;&lt;/code&gt;: 특정 버전의 패키지를 설치.&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;npm install &amp;lt;git repository 주소&gt;&lt;/code&gt;: git repository로부터 패키지를 설치.&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;npm start&lt;/code&gt;: Node.js를 이용해 프로젝트를 실행.&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;npm build&lt;/code&gt;: 프로젝트를 빌드.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.npmjs.com/cli/v9/commands?v=true&quot;&gt;더 많은 명령어 참고&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CRA, Node.js, NPM을 활용하면 React 프로젝트를 효율적으로 시작하고 관리할 수 있다.
이 도구들은 현대 웹 개발에서 중요한 역할을 하며, 개발자가 더 나은 웹 애플리케이션을 만들 수 있도록 돕는다. 🌟&lt;/p&gt;
&lt;h3&gt;React 프로젝트의 기본 구조 및 JSX 소개 📁&lt;/h3&gt;
&lt;p&gt;React 프로젝트를 시작하면 기본적으로 몇 가지 주요 디렉토리와 파일이 생성된다.
이들은 프로젝트의 구조를 이해하고 관리하는 데 중요한 역할을 한다.
또한, JSX는 React 개발에서 핵심적인 역할을 하는 문법으로, HTML과 유사하지만 JavaScript를 확장한 문법이다.&lt;sup id=&quot;fnref-5&quot;&gt;&lt;a href=&quot;#fn-5&quot; class=&quot;footnote-ref&quot;&gt;5&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;h4&gt;Directory 구조 📂&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;./node_modules/&lt;/code&gt;: npm을 이용해 설치한 패키지 모음.&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;./public/&lt;/code&gt;: 정적인 파일들(HTML, 이미지 등)의 모음.&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;./src/&lt;/code&gt;: 리액트 개발을 위한 주요 소스 파일들이 위치한다.&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;./.gitignore&lt;/code&gt;: git에 올리지 않을 파일 설정을 포함한다.&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;./package.json&lt;/code&gt;: 프로젝트 관련 정보와 사용 패키지 명세 파일.
패키지 버전은 ^, &amp;#x3C;=, &gt;= 등의 기호로 범위를 표현할 수 있다.&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;./README.md&lt;/code&gt;: 프로젝트에 관한 설명을 작성하는 파일.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;설치한 라이브러리 불러오기 📚&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;&lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;package name&quot;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// CSS나 import만으로 역할을 하는 라이브러리&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; something &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;package name&quot;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// 기본적으로 불러와 활용할 때&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; a&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; b &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;package name&quot;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// 패키지 내 일부만 가져올 때&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; something &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;package name&quot;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// default로 export되지 않은 경우&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;JSX 소개 ✨&lt;/h2&gt;
&lt;p&gt;JSX는 JavaScript를 확장한 문법으로, UI가 어떻게 생겨야 하는지 설명하기 위해 React와 함께 사용된다.
JSX는 React &quot;엘리먼트&quot;를 생성하며, HTML과 유사한 생김새를 가지지만 JavaScript의 모든 기능을 포함한다&lt;sup id=&quot;fnref-6&quot;&gt;&lt;a href=&quot;#fn-6&quot; class=&quot;footnote-ref&quot;&gt;6&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;h3&gt;JSX의 장점&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;개발자 편의성의 향상&lt;/li&gt;
&lt;li&gt;협업 용이 및 생산성의 향상&lt;/li&gt;
&lt;li&gt;문법 오류 및 코드량 감소&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;JSX의 특징&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;HTML 태그 내에서 JavaScript 연산을 간결하게 표현할 수 있다.&lt;/li&gt;
&lt;li&gt;HTML과의 차이점으로는 class 대신 className을 사용하고, 스타일은 객체 형태로 표현한다.&lt;/li&gt;
&lt;li&gt;닫는 태그가 필수이며, 최상단 element는 반드시 하나여야 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;JSX와 JavaScript의 차이점&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;JSX는 사용자 인터페이스를 정의하는 데 사용되며, HTML처럼 보이지만 실제로는 JavaScript임.&lt;/li&gt;
&lt;li&gt;React에서는 JSX를 통해 컴포넌트를 정의하고, 이를 통해 UI를 구성한다. 이는 기존 JavaScript와 HTML을 사용하는 방식과는 다른 접근 방식을 제공한다&lt;sup id=&quot;fnref-7&quot;&gt;&lt;a href=&quot;#fn-7&quot; class=&quot;footnote-ref&quot;&gt;7&lt;/a&gt;&lt;/sup&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;JSX는 React 개발에서 중요한 역할을 하며, 개발자가 보다 효율적으로 UI를 구성할 수 있도록 돕는다.
React 프로젝트의 구조와 JSX에 대해 이해하면, React 애플리케이션 개발에 있어 훨씬 더 편리하게 접근할 수 있다. 🚀&lt;/p&gt;
&lt;h4&gt;브라우저에 데이터 저장 및 UI 업데이트 방법 💾🔄&lt;/h4&gt;
&lt;p&gt;브라우저에 데이터를 저장하고 UI를 업데이트하는 방법은 기술 스택에 따라 다르다.
JavaScript와 React는 이러한 작업을 처리하는 데 있어 서로 다른 접근 방식을 제공한다.&lt;/p&gt;
&lt;h4&gt;브라우저에 데이터 저장 방법&lt;/h4&gt;
&lt;h5&gt;JavaScript&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;사용자 데이터는 주로 DOM에 저장된다.
DOM은 브라우저가 만들고 유지 관리하는 전체 HTML을 나타낸다.&lt;/li&gt;
&lt;li&gt;사용자가 데이터를 입력하면, 개발자는 DOM에서 해당 값을 찾아 추출해야 한다.
이 과정은 관리가 번거로울 수 있다&lt;sup id=&quot;fnref-8&quot;&gt;&lt;a href=&quot;#fn-8&quot; class=&quot;footnote-ref&quot;&gt;8&lt;/a&gt;&lt;/sup&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;React&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;React에서는 제어 컴포넌트를 사용하여 사용자 입력을 기반으로 상태를 관리하고 업데이트한다.
이는 DOM에 의존하지 않고 JS 변수에 애플리케이션의 상태를 저장함으로써 이루어진다.&lt;/li&gt;
&lt;li&gt;이 방식은 애플리케이션이 성장함에 따라 더욱 중요해지며, 코드 관리가 편리해진다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;UI 업데이트 방법&lt;/h4&gt;
&lt;h5&gt;JavaScript&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;UI 업데이트를 위해, 개발자는 DOM에서 요소를 찾고, 이벤트 리스너를 설정하여 사용자 상호작용에 반응해야 한다.
이 과정은 복잡하고 관리하기 어려울 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;React&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;React는 상태 관리를 통해 UI를 자동으로 업데이트한다. 상태가 변경되면 React는 이를 감지하고 필요한 UI 부분만을 효율적으로 업데이트한다.&lt;/li&gt;
&lt;li&gt;이는 개발자가 UI 업데이트 로직에 집중하기보다는 사용자와의 상호작용 및 애플리케이션의 상태 관리에 더 집중할 수 있게 해준다&lt;sup id=&quot;fnref-9&quot;&gt;&lt;a href=&quot;#fn-9&quot; class=&quot;footnote-ref&quot;&gt;9&lt;/a&gt;&lt;/sup&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;브라우저에 데이터를 저장하고 UI를 업데이트하는 방법은 기술의 선택에 따라 크게 달라질 수 있다. JavaScript는 직접적인 DOM 조작에 의존하는 반면, React는 상태 관리를 통해 보다 선언적이고 효율적인 방식을 제공한다.
이러한 차이점을 이해하는 것은 웹 개발에서 중요한 요소 중 하나. 🌟&lt;/p&gt;
&lt;h2&gt;React 컴포넌트 🎨&lt;/h2&gt;
&lt;p&gt;React에서 페이지를 구성하는 기본 단위인 컴포넌트에 대해 알아보자.
컴포넌트는 React 애플리케이션의 핵심 요소로, 재사용 가능한 코드의 블록을 제공한다.&lt;/p&gt;
&lt;h3&gt;컴포넌트란? 🤔&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;React에서의 역할: 페이지를 구성하는 최소 단위로, 재사용 가능한 UI 조각.&lt;/li&gt;
&lt;li&gt;네이밍 규칙: 컴포넌트의 이름은 대문자로 시작한다.
이는 일반 HTML 요소와 구별하기 위함임.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;컴포넌트의 종류&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Class 컴포넌트: 초기 React에서 주로 사용되었으며, Java 개발자에게 친숙한 개념.
React의 생명 주기를 쉽게 파악할 수 있다.&lt;/li&gt;
&lt;li&gt;Function 컴포넌트: React v16부터 추가된 기능으로, 현재는 대부분의 컴포넌트가 이 형태로 사용된다.
Hook을 사용하여 상태 관리가 가능하다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Controlled Component와 Uncontrolled Component&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Controlled Component: form을 통해 입력을 받을 때, 각 input의 데이터를 state를 통해 직접 관리한.&lt;/li&gt;
&lt;li&gt;Uncontrolled Component: React로 input의 데이터를 직접 관리하지 않고, 필요할 때 DOM에서 직접 값을 가져온다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;컴포넌트의 특징&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Props(Properties): 컴포넌트의 속성으로, 상위 컴포넌트로부터 데이터를 전달받는다.&lt;/li&gt;
&lt;li&gt;Children: 컴포넌트 안에 작성된 하위 요소로, props의 일부로 취급된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;컴포넌트의 데이터 관리&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Props를 통한 데이터 전달: 컴포넌트 간 데이터는 props를 통해 부모에서 자식으로 전달된다.&lt;/li&gt;
&lt;li&gt;State를 통한 내부 데이터 관리: 컴포넌트 내에서 데이터를 관리할 때는 state를 사용한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;React 컴포넌트는 애플리케이션을 구성하는 데 있어 매우 중요한 역할을 한다.
컴포넌트를 통해 UI를 모듈화하고 재사용 가능한 코드를 생성하여, 개발 과정을 효율적으로 만들 수 있다.
데이터 관리에 대한 더 자세한 정보는 &lt;a href=&quot;https://blog.stackademic.com/data-handling-in-react-components-props-state-and-best-practices-1c74ae800b43&quot;&gt;여기&lt;/a&gt;에서 확인할 수 있다. 🌟&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&quot;fn-1&quot;&gt;&lt;a href=&quot;https://ko.legacy.reactjs.org/tutorial/tutorial.html&quot;&gt;https://ko.legacy.reactjs.org/tutorial/tutorial.html&lt;/a&gt;&lt;a href=&quot;#fnref-1&quot; class=&quot;footnote-backref&quot;&gt;↩&lt;/a&gt;&lt;/li&gt;
&lt;li id=&quot;fn-2&quot;&gt;&lt;a href=&quot;https://www.elancer.co.kr/blog/view?seq=167&quot;&gt;https://www.elancer.co.kr/blog/view?seq=167&lt;/a&gt;&lt;a href=&quot;#fnref-2&quot; class=&quot;footnote-backref&quot;&gt;↩&lt;/a&gt;&lt;/li&gt;
&lt;li id=&quot;fn-3&quot;&gt;&lt;a href=&quot;https://create-react-app.dev/&quot;&gt;https://create-react-app.dev/&lt;/a&gt;&lt;a href=&quot;#fnref-3&quot; class=&quot;footnote-backref&quot;&gt;↩&lt;/a&gt;&lt;/li&gt;
&lt;li id=&quot;fn-4&quot;&gt;&lt;a href=&quot;https://legacy.reactjs.org/docs/create-a-new-react-app.html&quot;&gt;https://legacy.reactjs.org/docs/create-a-new-react-app.html&lt;/a&gt;&lt;a href=&quot;#fnref-4&quot; class=&quot;footnote-backref&quot;&gt;↩&lt;/a&gt;&lt;/li&gt;
&lt;li id=&quot;fn-5&quot;&gt;&lt;a href=&quot;https://ko.legacy.reactjs.org/docs/introducing-jsx.html&quot;&gt;https://ko.legacy.reactjs.org/docs/introducing-jsx.html&lt;/a&gt;&lt;a href=&quot;#fnref-5&quot; class=&quot;footnote-backref&quot;&gt;↩&lt;/a&gt;&lt;/li&gt;
&lt;li id=&quot;fn-6&quot;&gt;&lt;a href=&quot;https://ko.legacy.reactjs.org/docs/introducing-jsx.html&quot;&gt;https://ko.legacy.reactjs.org/docs/introducing-jsx.html&lt;/a&gt;&lt;a href=&quot;#fnref-6&quot; class=&quot;footnote-backref&quot;&gt;↩&lt;/a&gt;&lt;/li&gt;
&lt;li id=&quot;fn-7&quot;&gt;&lt;a href=&quot;https://www.w3schools.com/react/react_css.asp&quot;&gt;https://www.w3schools.com/react/react_css.asp&lt;/a&gt;&lt;a href=&quot;#fnref-7&quot; class=&quot;footnote-backref&quot;&gt;↩&lt;/a&gt;&lt;/li&gt;
&lt;li id=&quot;fn-8&quot;&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Client-side_storage&quot;&gt;https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Client-side_storage&lt;/a&gt;&lt;a href=&quot;#fnref-8&quot; class=&quot;footnote-backref&quot;&gt;↩&lt;/a&gt;&lt;/li&gt;
&lt;li id=&quot;fn-9&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/pulse/understanding-react-reconciliation-heartbeat-ui-updates-rostami&quot;&gt;https://www.linkedin.com/pulse/understanding-react-reconciliation-heartbeat-ui-updates-rostami&lt;/a&gt;&lt;a href=&quot;#fnref-9&quot; class=&quot;footnote-backref&quot;&gt;↩&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content:encoded></item><item><title><![CDATA[💾 SQL Basic - 1. 소개 및 기본 개념]]></title><description><![CDATA[아래 단계를 따라서 여러분의 블로그를 시작하세요. 굉장히 쉬워요 😉. SQL이란? 컴퓨터에 node.js 와 gatsby-cli 가 설치되어 있어야합니다. 2. 개발 서버 시작 이제 localhost:800…]]></description><link>https://leekh8.github.io/SQL/</link><guid isPermaLink="false">https://leekh8.github.io/SQL/</guid><pubDate>Thu, 16 Mar 2023 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;아래 단계를 따라서 여러분의 블로그를 시작하세요. 굉장히 쉬워요 😉.&lt;/p&gt;
&lt;h2&gt;SQL이란?&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;컴퓨터에 &lt;strong&gt;node.js&lt;/strong&gt; 와 &lt;strong&gt;gatsby-cli&lt;/strong&gt; 가 설치되어 있어야합니다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;$ npx gatsby new my-hoodie-blog https://github.com/devHudi/gatsby-starter-hoodie&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;2. 개발 서버 시작&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;$ cd my-hoodie-blog
$ npm run start&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이제 localhost:8000 으로 여러분의 블로그를 접속할 수 있습니다.&lt;/p&gt;
&lt;h2&gt;3. Github 레포지토리 생성&lt;/h2&gt;
&lt;p&gt;Utterance 댓글 위젯은 &lt;strong&gt;Github 이슈 시스템&lt;/strong&gt; 기반입니다. 따라서 각 블로그 별 Github 레포지토리가 필요합니다. 또한 여러분이 Github Pages 혹은 Netlify 로 블로그를 배포하길 원한다면, Github 레포지토리는 필수입니다.&lt;/p&gt;
&lt;p&gt;만약 Github 레포지토리를 생성하는 법을 모른다면, &lt;a href=&quot;https://docs.github.com/en/github/getting-started-with-github/create-a-repo&quot;&gt;Github 공식 문서&lt;/a&gt; 를 참조하세요.&lt;/p&gt;
&lt;h3&gt;원격 레포지토리 등록&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;git remote add origin https://github.com/{YOUR_GITHUB_NAME}/{YOUR_REPOSITORY_NAME}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;4. blog-config.js 작성&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;module&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;exports &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token literal-property property&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;MY BLOG&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token literal-property property&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Hello, This is my blog&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token literal-property property&quot;&gt;author&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;YOUR NAME&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token literal-property property&quot;&gt;siteUrl&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;https://myblog.com&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token literal-property property&quot;&gt;links&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token literal-property property&quot;&gt;github&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;https://github.com&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token literal-property property&quot;&gt;facebook&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;https://www.facebook.com&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token literal-property property&quot;&gt;instagram&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;https://www.instagram.com&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token literal-property property&quot;&gt;etc&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;https://www.google.com/&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token literal-property property&quot;&gt;utterances&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token literal-property property&quot;&gt;repo&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;{YOUR_GITHUB_NAME}/{YOUR_REPOSITORY_NAME}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token literal-property property&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;pathname&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;gatsby-starter-hoodie 는 &lt;code class=&quot;language-text&quot;&gt;blog-config.js&lt;/code&gt; 라는 설정 파일을 제공합니다. 이 파일에서 블로그 정보, 작성자 프로필, Utterance 설정 등을 작성할 수 있습니다. 여러분 블로그 설정에 맞게 &lt;code class=&quot;language-text&quot;&gt;blog-config.js&lt;/code&gt; 를 설정하세요. 하지만, &lt;code class=&quot;language-text&quot;&gt;utterances.type&lt;/code&gt; 속성은 수정하지 않는 것을 권장합니다.&lt;/p&gt;
&lt;h3&gt;프로필 이미지 변경&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;static/profile.png&lt;/code&gt; 에 위치한 이미지 파일을 원하는 이미지 파일로 교체하세요. 만약 파일명을 변경하고 싶다면, &lt;code class=&quot;language-text&quot;&gt;src/components/Bio.jsx&lt;/code&gt; 의 소스코드를 수정해야합니다.&lt;/p&gt;
&lt;h2&gt;5. 포스트 추가&lt;/h2&gt;
&lt;p&gt;마크다운 포스트는 &lt;code class=&quot;language-text&quot;&gt;contents/posts&lt;/code&gt; 경로에 위치해있습니다. 해당 경로에서 글을 작성할 수 있습니다. &lt;a href=&quot;https://devHudi.github.io/gatsby-starter-hoodie/writing-guide&quot;&gt;여기를 클릭하여&lt;/a&gt; 더 자세한 글 작성 방법을 확인하세요.&lt;/p&gt;
&lt;h2&gt;6. 블로그 배포하기&lt;/h2&gt;
&lt;h3&gt;6-1 Netlify 를 통해&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://www.netlify.com/blog/2016/02/24/a-step-by-step-guide-gatsby-on-netlify/&quot;&gt;A Step-by-Step Guide: Gatsby on Netlify&lt;/a&gt; 문서를 참조하여, Netlify 를 Github 레포지토리와 연결할 수 있습니다. 이 과정은 어렵지 않습니다.&lt;/p&gt;
&lt;p&gt;Github 레포지토리와 연결이 되었다면, Github 레포지토리에 변경사항이 발생할 때 마다 자동으로 여러분의 블로그에 배포됩니다.&lt;/p&gt;
&lt;h3&gt;6-2. Github Pages 를 통해&lt;/h3&gt;
&lt;h4&gt;상황 1&lt;/h4&gt;
&lt;p&gt;레포지토리 이름이 &lt;code class=&quot;language-text&quot;&gt;{YOUR_GITHUB_NAME}.github.io&lt;/code&gt; 형태일 경우, 아래 명령어를 실행해주세요.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;$ npm run deploy-gh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;상황 2&lt;/h4&gt;
&lt;p&gt;레포지토리 이름이 &lt;code class=&quot;language-text&quot;&gt;{YOUR_GITHUB_NAME}.github.io&lt;/code&gt; 형태가 아닐 경우, 아래 명령어를 실행해주세요.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;$ npm run deploy-gh-prefix-paths&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;만약 위와 같은 경우 &lt;code class=&quot;language-text&quot;&gt;gatsby-config.js&lt;/code&gt; 에서 &lt;code class=&quot;language-text&quot;&gt;pathPrefix&lt;/code&gt; 를 여러분의 레포지토리 이름으로 바꿔야합니다.&lt;/p&gt;
&lt;h3&gt;6-3. 다른 플랫폼&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;$ npm run build&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;위 명령어로 Gastby 웹사이트를 빌드할 수 있습니다. 빌드 결과물은 &lt;code class=&quot;language-text&quot;&gt;/public&lt;/code&gt; 에 저장됩니다. &lt;code class=&quot;language-text&quot;&gt;/public&lt;/code&gt; 디렉토리를 여러분이 사용하는 플랫폼의 배포 명령을 통해 배포해주세요.&lt;/p&gt;
&lt;h2&gt;7. 커스터마이징&lt;/h2&gt;
&lt;h3&gt;프로젝트 구조&lt;/h3&gt;
&lt;p&gt;아래 프로젝트 구조를 참고하여 커스터마이징 할 수 있습니다 🙊.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;├── node_modules
├── contents
│   └── posts // your articles are here
├── public // build outputs are here
└── src
    ├── assets
    │   └── theme // theme config is here
    ├── components
    │   └── Article
    │       └── Body
    │           └── StyledMarkdown
    │               └── index.jsx // markdown styles are here
    │   ...
    ├── fonts // webfonts are here
    ├── hooks
    ├── images
    ├── pages // page components are here
    ├── reducers
    ├── templates // post components are here
    └── utils&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content:encoded></item></channel></rss>